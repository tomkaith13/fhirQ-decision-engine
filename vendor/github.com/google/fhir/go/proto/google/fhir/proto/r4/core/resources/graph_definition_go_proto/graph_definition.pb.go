//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: proto/google/fhir/proto/r4/core/resources/graph_definition.proto

package graph_definition_go_proto

import (
	any "github.com/golang/protobuf/ptypes/any"
	_ "github.com/google/fhir/go/proto/google/fhir/proto/annotations_go_proto"
	codes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/codes_go_proto"
	datatypes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/datatypes_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Auto-generated from StructureDefinition for GraphDefinition, last updated
// 2019-11-01T09:29:23.356+11:00. Definition of a graph of resources. See
// http://hl7.org/fhir/StructureDefinition/GraphDefinition
type GraphDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Logical id of this artifact
	Id *datatypes_go_proto.Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *datatypes_go_proto.Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *datatypes_go_proto.Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *datatypes_go_proto.Code `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *datatypes_go_proto.Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*any.Any `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,8,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,9,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Canonical identifier for this graph definition, represented as a URI
	// (globally unique)
	Url *datatypes_go_proto.Uri `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	// Business version of the graph definition
	Version *datatypes_go_proto.String `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this graph definition (computer friendly)
	Name   *datatypes_go_proto.String  `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
	Status *GraphDefinition_StatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *datatypes_go_proto.Boolean `protobuf:"bytes,14,opt,name=experimental,proto3" json:"experimental,omitempty"`
	// Date last changed
	Date *datatypes_go_proto.DateTime `protobuf:"bytes,15,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *datatypes_go_proto.String `protobuf:"bytes,16,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*datatypes_go_proto.ContactDetail `protobuf:"bytes,17,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the graph definition
	Description *datatypes_go_proto.Markdown `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	// The context that the content is intended to support
	UseContext []*datatypes_go_proto.UsageContext `protobuf:"bytes,19,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for graph definition (if applicable)
	Jurisdiction []*datatypes_go_proto.CodeableConcept `protobuf:"bytes,20,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Why this graph definition is defined
	Purpose *datatypes_go_proto.Markdown `protobuf:"bytes,21,opt,name=purpose,proto3" json:"purpose,omitempty"`
	Start   *GraphDefinition_StartCode   `protobuf:"bytes,22,opt,name=start,proto3" json:"start,omitempty"`
	// Profile on base resource
	Profile *datatypes_go_proto.Canonical `protobuf:"bytes,23,opt,name=profile,proto3" json:"profile,omitempty"`
	Link    []*GraphDefinition_Link       `protobuf:"bytes,24,rep,name=link,proto3" json:"link,omitempty"`
}

func (x *GraphDefinition) Reset() {
	*x = GraphDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphDefinition) ProtoMessage() {}

func (x *GraphDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphDefinition.ProtoReflect.Descriptor instead.
func (*GraphDefinition) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescGZIP(), []int{0}
}

func (x *GraphDefinition) GetId() *datatypes_go_proto.Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GraphDefinition) GetMeta() *datatypes_go_proto.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GraphDefinition) GetImplicitRules() *datatypes_go_proto.Uri {
	if x != nil {
		return x.ImplicitRules
	}
	return nil
}

func (x *GraphDefinition) GetLanguage() *datatypes_go_proto.Code {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *GraphDefinition) GetText() *datatypes_go_proto.Narrative {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *GraphDefinition) GetContained() []*any.Any {
	if x != nil {
		return x.Contained
	}
	return nil
}

func (x *GraphDefinition) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *GraphDefinition) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *GraphDefinition) GetUrl() *datatypes_go_proto.Uri {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *GraphDefinition) GetVersion() *datatypes_go_proto.String {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *GraphDefinition) GetName() *datatypes_go_proto.String {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *GraphDefinition) GetStatus() *GraphDefinition_StatusCode {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GraphDefinition) GetExperimental() *datatypes_go_proto.Boolean {
	if x != nil {
		return x.Experimental
	}
	return nil
}

func (x *GraphDefinition) GetDate() *datatypes_go_proto.DateTime {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *GraphDefinition) GetPublisher() *datatypes_go_proto.String {
	if x != nil {
		return x.Publisher
	}
	return nil
}

func (x *GraphDefinition) GetContact() []*datatypes_go_proto.ContactDetail {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *GraphDefinition) GetDescription() *datatypes_go_proto.Markdown {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *GraphDefinition) GetUseContext() []*datatypes_go_proto.UsageContext {
	if x != nil {
		return x.UseContext
	}
	return nil
}

func (x *GraphDefinition) GetJurisdiction() []*datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Jurisdiction
	}
	return nil
}

func (x *GraphDefinition) GetPurpose() *datatypes_go_proto.Markdown {
	if x != nil {
		return x.Purpose
	}
	return nil
}

func (x *GraphDefinition) GetStart() *GraphDefinition_StartCode {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *GraphDefinition) GetProfile() *datatypes_go_proto.Canonical {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *GraphDefinition) GetLink() []*GraphDefinition_Link {
	if x != nil {
		return x.Link
	}
	return nil
}

// draft | active | retired | unknown
type GraphDefinition_StatusCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.PublicationStatusCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.PublicationStatusCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension            `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *GraphDefinition_StatusCode) Reset() {
	*x = GraphDefinition_StatusCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphDefinition_StatusCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphDefinition_StatusCode) ProtoMessage() {}

func (x *GraphDefinition_StatusCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphDefinition_StatusCode.ProtoReflect.Descriptor instead.
func (*GraphDefinition_StatusCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GraphDefinition_StatusCode) GetValue() codes_go_proto.PublicationStatusCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.PublicationStatusCode_INVALID_UNINITIALIZED
}

func (x *GraphDefinition_StatusCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GraphDefinition_StatusCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// Type of resource at which the graph starts
type GraphDefinition_StartCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.ResourceTypeCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.ResourceTypeCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension       `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *GraphDefinition_StartCode) Reset() {
	*x = GraphDefinition_StartCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphDefinition_StartCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphDefinition_StartCode) ProtoMessage() {}

func (x *GraphDefinition_StartCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphDefinition_StartCode.ProtoReflect.Descriptor instead.
func (*GraphDefinition_StartCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescGZIP(), []int{0, 1}
}

func (x *GraphDefinition_StartCode) GetValue() codes_go_proto.ResourceTypeCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.ResourceTypeCode_INVALID_UNINITIALIZED
}

func (x *GraphDefinition_StartCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GraphDefinition_StartCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// Links this graph makes rules about
type GraphDefinition_Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Path in the resource that contains the link
	Path *datatypes_go_proto.String `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	// Which slice (if profiled)
	SliceName *datatypes_go_proto.String `protobuf:"bytes,5,opt,name=slice_name,json=sliceName,proto3" json:"slice_name,omitempty"`
	// Minimum occurrences for this link
	Min *datatypes_go_proto.Integer `protobuf:"bytes,6,opt,name=min,proto3" json:"min,omitempty"`
	// Maximum occurrences for this link
	Max *datatypes_go_proto.String `protobuf:"bytes,7,opt,name=max,proto3" json:"max,omitempty"`
	// Why this link is specified
	Description *datatypes_go_proto.String     `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Target      []*GraphDefinition_Link_Target `protobuf:"bytes,9,rep,name=target,proto3" json:"target,omitempty"`
}

func (x *GraphDefinition_Link) Reset() {
	*x = GraphDefinition_Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphDefinition_Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphDefinition_Link) ProtoMessage() {}

func (x *GraphDefinition_Link) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphDefinition_Link.ProtoReflect.Descriptor instead.
func (*GraphDefinition_Link) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescGZIP(), []int{0, 2}
}

func (x *GraphDefinition_Link) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GraphDefinition_Link) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *GraphDefinition_Link) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *GraphDefinition_Link) GetPath() *datatypes_go_proto.String {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *GraphDefinition_Link) GetSliceName() *datatypes_go_proto.String {
	if x != nil {
		return x.SliceName
	}
	return nil
}

func (x *GraphDefinition_Link) GetMin() *datatypes_go_proto.Integer {
	if x != nil {
		return x.Min
	}
	return nil
}

func (x *GraphDefinition_Link) GetMax() *datatypes_go_proto.String {
	if x != nil {
		return x.Max
	}
	return nil
}

func (x *GraphDefinition_Link) GetDescription() *datatypes_go_proto.String {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *GraphDefinition_Link) GetTarget() []*GraphDefinition_Link_Target {
	if x != nil {
		return x.Target
	}
	return nil
}

// Potential target for the link
type GraphDefinition_Link_Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension       `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Type              *GraphDefinition_Link_Target_TypeCode `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Criteria for reverse lookup
	Params *datatypes_go_proto.String `protobuf:"bytes,5,opt,name=params,proto3" json:"params,omitempty"`
	// Profile for the target resource
	Profile     *datatypes_go_proto.Canonical              `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty"`
	Compartment []*GraphDefinition_Link_Target_Compartment `protobuf:"bytes,7,rep,name=compartment,proto3" json:"compartment,omitempty"`
	// Additional links from target resource
	Link []*GraphDefinition_Link `protobuf:"bytes,8,rep,name=link,proto3" json:"link,omitempty"`
}

func (x *GraphDefinition_Link_Target) Reset() {
	*x = GraphDefinition_Link_Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphDefinition_Link_Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphDefinition_Link_Target) ProtoMessage() {}

func (x *GraphDefinition_Link_Target) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphDefinition_Link_Target.ProtoReflect.Descriptor instead.
func (*GraphDefinition_Link_Target) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *GraphDefinition_Link_Target) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GraphDefinition_Link_Target) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *GraphDefinition_Link_Target) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *GraphDefinition_Link_Target) GetType() *GraphDefinition_Link_Target_TypeCode {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *GraphDefinition_Link_Target) GetParams() *datatypes_go_proto.String {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *GraphDefinition_Link_Target) GetProfile() *datatypes_go_proto.Canonical {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *GraphDefinition_Link_Target) GetCompartment() []*GraphDefinition_Link_Target_Compartment {
	if x != nil {
		return x.Compartment
	}
	return nil
}

func (x *GraphDefinition_Link_Target) GetLink() []*GraphDefinition_Link {
	if x != nil {
		return x.Link
	}
	return nil
}

// Type of resource this link refers to
type GraphDefinition_Link_Target_TypeCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.ResourceTypeCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.ResourceTypeCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension       `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *GraphDefinition_Link_Target_TypeCode) Reset() {
	*x = GraphDefinition_Link_Target_TypeCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphDefinition_Link_Target_TypeCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphDefinition_Link_Target_TypeCode) ProtoMessage() {}

func (x *GraphDefinition_Link_Target_TypeCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphDefinition_Link_Target_TypeCode.ProtoReflect.Descriptor instead.
func (*GraphDefinition_Link_Target_TypeCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescGZIP(), []int{0, 2, 0, 0}
}

func (x *GraphDefinition_Link_Target_TypeCode) GetValue() codes_go_proto.ResourceTypeCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.ResourceTypeCode_INVALID_UNINITIALIZED
}

func (x *GraphDefinition_Link_Target_TypeCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GraphDefinition_Link_Target_TypeCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// Compartment Consistency Rules
type GraphDefinition_Link_Target_Compartment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension                   `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Use               *GraphDefinition_Link_Target_Compartment_UseCode  `protobuf:"bytes,4,opt,name=use,proto3" json:"use,omitempty"`
	Code              *GraphDefinition_Link_Target_Compartment_CodeType `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	Rule              *GraphDefinition_Link_Target_Compartment_RuleCode `protobuf:"bytes,6,opt,name=rule,proto3" json:"rule,omitempty"`
	// Custom rule, as a FHIRPath expression
	Expression *datatypes_go_proto.String `protobuf:"bytes,7,opt,name=expression,proto3" json:"expression,omitempty"`
	// Documentation for FHIRPath expression
	Description *datatypes_go_proto.String `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *GraphDefinition_Link_Target_Compartment) Reset() {
	*x = GraphDefinition_Link_Target_Compartment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphDefinition_Link_Target_Compartment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphDefinition_Link_Target_Compartment) ProtoMessage() {}

func (x *GraphDefinition_Link_Target_Compartment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphDefinition_Link_Target_Compartment.ProtoReflect.Descriptor instead.
func (*GraphDefinition_Link_Target_Compartment) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescGZIP(), []int{0, 2, 0, 1}
}

func (x *GraphDefinition_Link_Target_Compartment) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GraphDefinition_Link_Target_Compartment) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *GraphDefinition_Link_Target_Compartment) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *GraphDefinition_Link_Target_Compartment) GetUse() *GraphDefinition_Link_Target_Compartment_UseCode {
	if x != nil {
		return x.Use
	}
	return nil
}

func (x *GraphDefinition_Link_Target_Compartment) GetCode() *GraphDefinition_Link_Target_Compartment_CodeType {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *GraphDefinition_Link_Target_Compartment) GetRule() *GraphDefinition_Link_Target_Compartment_RuleCode {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *GraphDefinition_Link_Target_Compartment) GetExpression() *datatypes_go_proto.String {
	if x != nil {
		return x.Expression
	}
	return nil
}

func (x *GraphDefinition_Link_Target_Compartment) GetDescription() *datatypes_go_proto.String {
	if x != nil {
		return x.Description
	}
	return nil
}

// condition | requirement
type GraphDefinition_Link_Target_Compartment_UseCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.GraphCompartmentUseCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.GraphCompartmentUseCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension              `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *GraphDefinition_Link_Target_Compartment_UseCode) Reset() {
	*x = GraphDefinition_Link_Target_Compartment_UseCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphDefinition_Link_Target_Compartment_UseCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphDefinition_Link_Target_Compartment_UseCode) ProtoMessage() {}

func (x *GraphDefinition_Link_Target_Compartment_UseCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphDefinition_Link_Target_Compartment_UseCode.ProtoReflect.Descriptor instead.
func (*GraphDefinition_Link_Target_Compartment_UseCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescGZIP(), []int{0, 2, 0, 1, 0}
}

func (x *GraphDefinition_Link_Target_Compartment_UseCode) GetValue() codes_go_proto.GraphCompartmentUseCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.GraphCompartmentUseCode_INVALID_UNINITIALIZED
}

func (x *GraphDefinition_Link_Target_Compartment_UseCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GraphDefinition_Link_Target_Compartment_UseCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// Patient | Encounter | RelatedPerson | Practitioner | Device
type GraphDefinition_Link_Target_Compartment_CodeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.CompartmentTypeCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.CompartmentTypeCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension          `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *GraphDefinition_Link_Target_Compartment_CodeType) Reset() {
	*x = GraphDefinition_Link_Target_Compartment_CodeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphDefinition_Link_Target_Compartment_CodeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphDefinition_Link_Target_Compartment_CodeType) ProtoMessage() {}

func (x *GraphDefinition_Link_Target_Compartment_CodeType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphDefinition_Link_Target_Compartment_CodeType.ProtoReflect.Descriptor instead.
func (*GraphDefinition_Link_Target_Compartment_CodeType) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescGZIP(), []int{0, 2, 0, 1, 1}
}

func (x *GraphDefinition_Link_Target_Compartment_CodeType) GetValue() codes_go_proto.CompartmentTypeCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.CompartmentTypeCode_INVALID_UNINITIALIZED
}

func (x *GraphDefinition_Link_Target_Compartment_CodeType) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GraphDefinition_Link_Target_Compartment_CodeType) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// identical | matching | different | custom
type GraphDefinition_Link_Target_Compartment_RuleCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.GraphCompartmentRuleCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.GraphCompartmentRuleCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension               `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *GraphDefinition_Link_Target_Compartment_RuleCode) Reset() {
	*x = GraphDefinition_Link_Target_Compartment_RuleCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphDefinition_Link_Target_Compartment_RuleCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphDefinition_Link_Target_Compartment_RuleCode) ProtoMessage() {}

func (x *GraphDefinition_Link_Target_Compartment_RuleCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphDefinition_Link_Target_Compartment_RuleCode.ProtoReflect.Descriptor instead.
func (*GraphDefinition_Link_Target_Compartment_RuleCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescGZIP(), []int{0, 2, 0, 1, 2}
}

func (x *GraphDefinition_Link_Target_Compartment_RuleCode) GetValue() codes_go_proto.GraphCompartmentRuleCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.GraphCompartmentRuleCode_INVALID_UNINITIALIZED
}

func (x *GraphDefinition_Link_Target_Compartment_RuleCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GraphDefinition_Link_Target_Compartment_RuleCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

var File_proto_google_fhir_proto_r4_core_resources_graph_definition_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDesc = []byte{
	0x0a, 0x40, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x13, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x27, 0x0a, 0x0f,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x69,
	0x63, 0x69, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x69, 0x52, 0x0d, 0x69, 0x6d, 0x70, 0x6c, 0x69,
	0x63, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x32, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x69, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x35, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x4f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x40, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x72, 0x12, 0x3c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x11, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12,
	0x3f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x64,
	0x6f, 0x77, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x42, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x48, 0x0a, 0x0c, 0x6a, 0x75, 0x72, 0x69, 0x73, 0x64, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74,
	0x52, 0x0c, 0x6a, 0x75, 0x72, 0x69, 0x73, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37,
	0x0a, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x07,
	0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x61, 0x6e,
	0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x3d, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x1a, 0xae,
	0x02, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x46, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x3a, 0x6d, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x2f, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x9a, 0xb5, 0x8e,
	0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a,
	0xa4, 0x02, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x69, 0xc0, 0x9f, 0xe3,
	0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x2b, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0xe5, 0x16, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x6c,
	0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x73, 0x6c, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65,
	0x72, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x2d, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x2e,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x1a, 0xcd,
	0x12, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xf0, 0xd0,
	0x87, 0xeb, 0x04, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x38, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x5e, 0x0a, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x1a, 0xa3, 0x02, 0x0a, 0x08, 0x54, 0x79, 0x70,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x3a, 0x69, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05,
	0x2b, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x73, 0x9a, 0xb5, 0x8e, 0x93,
	0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0xfd,
	0x0b, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x03, 0x75, 0x73, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6e, 0x6b,
	0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xf0, 0xd0, 0x87,
	0xeb, 0x04, 0x01, 0x52, 0x03, 0x75, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x6e,
	0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x06, 0xf0,
	0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x61, 0x0a, 0x04, 0x72,
	0x75, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x12, 0x3b,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xb0, 0x02, 0x0a, 0x07, 0x55,
	0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x70,
	0x68, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x70, 0xc0, 0x9f, 0xe3,
	0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x32, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2d, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x75, 0x73, 0x65, 0x9a, 0xb5, 0x8e, 0x93, 0x06,
	0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0xa8, 0x02,
	0x0a, 0x08, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x6b, 0xc0, 0x9f, 0xe3,
	0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x2d, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0xb3, 0x02, 0x0a, 0x08, 0x52, 0x75, 0x6c,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x71, 0xc0, 0x9f, 0xe3,
	0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x33, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2d, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x72, 0x75, 0x6c, 0x65, 0x9a, 0xb5, 0x8e, 0x93,
	0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x3a, 0x43,
	0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x03, 0xb2, 0xfe, 0xe4, 0x97, 0x06, 0x37, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x42, 0x80, 0x01, 0x0a, 0x17, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x01, 0x5a, 0x5d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x6f,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x98, 0xc6, 0xb0, 0xb5, 0x07, 0x04, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescData = file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDesc
)

func file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDescData
}

var file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_goTypes = []interface{}{
	(*GraphDefinition)(nil),                                  // 0: google.fhir.r4.core.GraphDefinition
	(*GraphDefinition_StatusCode)(nil),                       // 1: google.fhir.r4.core.GraphDefinition.StatusCode
	(*GraphDefinition_StartCode)(nil),                        // 2: google.fhir.r4.core.GraphDefinition.StartCode
	(*GraphDefinition_Link)(nil),                             // 3: google.fhir.r4.core.GraphDefinition.Link
	(*GraphDefinition_Link_Target)(nil),                      // 4: google.fhir.r4.core.GraphDefinition.Link.Target
	(*GraphDefinition_Link_Target_TypeCode)(nil),             // 5: google.fhir.r4.core.GraphDefinition.Link.Target.TypeCode
	(*GraphDefinition_Link_Target_Compartment)(nil),          // 6: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment
	(*GraphDefinition_Link_Target_Compartment_UseCode)(nil),  // 7: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.UseCode
	(*GraphDefinition_Link_Target_Compartment_CodeType)(nil), // 8: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.CodeType
	(*GraphDefinition_Link_Target_Compartment_RuleCode)(nil), // 9: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.RuleCode
	(*datatypes_go_proto.Id)(nil),                            // 10: google.fhir.r4.core.Id
	(*datatypes_go_proto.Meta)(nil),                          // 11: google.fhir.r4.core.Meta
	(*datatypes_go_proto.Uri)(nil),                           // 12: google.fhir.r4.core.Uri
	(*datatypes_go_proto.Code)(nil),                          // 13: google.fhir.r4.core.Code
	(*datatypes_go_proto.Narrative)(nil),                     // 14: google.fhir.r4.core.Narrative
	(*any.Any)(nil),                                          // 15: google.protobuf.Any
	(*datatypes_go_proto.Extension)(nil),                     // 16: google.fhir.r4.core.Extension
	(*datatypes_go_proto.String)(nil),                        // 17: google.fhir.r4.core.String
	(*datatypes_go_proto.Boolean)(nil),                       // 18: google.fhir.r4.core.Boolean
	(*datatypes_go_proto.DateTime)(nil),                      // 19: google.fhir.r4.core.DateTime
	(*datatypes_go_proto.ContactDetail)(nil),                 // 20: google.fhir.r4.core.ContactDetail
	(*datatypes_go_proto.Markdown)(nil),                      // 21: google.fhir.r4.core.Markdown
	(*datatypes_go_proto.UsageContext)(nil),                  // 22: google.fhir.r4.core.UsageContext
	(*datatypes_go_proto.CodeableConcept)(nil),               // 23: google.fhir.r4.core.CodeableConcept
	(*datatypes_go_proto.Canonical)(nil),                     // 24: google.fhir.r4.core.Canonical
	(codes_go_proto.PublicationStatusCode_Value)(0),          // 25: google.fhir.r4.core.PublicationStatusCode.Value
	(codes_go_proto.ResourceTypeCode_Value)(0),               // 26: google.fhir.r4.core.ResourceTypeCode.Value
	(*datatypes_go_proto.Integer)(nil),                       // 27: google.fhir.r4.core.Integer
	(codes_go_proto.GraphCompartmentUseCode_Value)(0),        // 28: google.fhir.r4.core.GraphCompartmentUseCode.Value
	(codes_go_proto.CompartmentTypeCode_Value)(0),            // 29: google.fhir.r4.core.CompartmentTypeCode.Value
	(codes_go_proto.GraphCompartmentRuleCode_Value)(0),       // 30: google.fhir.r4.core.GraphCompartmentRuleCode.Value
}
var file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_depIdxs = []int32{
	10, // 0: google.fhir.r4.core.GraphDefinition.id:type_name -> google.fhir.r4.core.Id
	11, // 1: google.fhir.r4.core.GraphDefinition.meta:type_name -> google.fhir.r4.core.Meta
	12, // 2: google.fhir.r4.core.GraphDefinition.implicit_rules:type_name -> google.fhir.r4.core.Uri
	13, // 3: google.fhir.r4.core.GraphDefinition.language:type_name -> google.fhir.r4.core.Code
	14, // 4: google.fhir.r4.core.GraphDefinition.text:type_name -> google.fhir.r4.core.Narrative
	15, // 5: google.fhir.r4.core.GraphDefinition.contained:type_name -> google.protobuf.Any
	16, // 6: google.fhir.r4.core.GraphDefinition.extension:type_name -> google.fhir.r4.core.Extension
	16, // 7: google.fhir.r4.core.GraphDefinition.modifier_extension:type_name -> google.fhir.r4.core.Extension
	12, // 8: google.fhir.r4.core.GraphDefinition.url:type_name -> google.fhir.r4.core.Uri
	17, // 9: google.fhir.r4.core.GraphDefinition.version:type_name -> google.fhir.r4.core.String
	17, // 10: google.fhir.r4.core.GraphDefinition.name:type_name -> google.fhir.r4.core.String
	1,  // 11: google.fhir.r4.core.GraphDefinition.status:type_name -> google.fhir.r4.core.GraphDefinition.StatusCode
	18, // 12: google.fhir.r4.core.GraphDefinition.experimental:type_name -> google.fhir.r4.core.Boolean
	19, // 13: google.fhir.r4.core.GraphDefinition.date:type_name -> google.fhir.r4.core.DateTime
	17, // 14: google.fhir.r4.core.GraphDefinition.publisher:type_name -> google.fhir.r4.core.String
	20, // 15: google.fhir.r4.core.GraphDefinition.contact:type_name -> google.fhir.r4.core.ContactDetail
	21, // 16: google.fhir.r4.core.GraphDefinition.description:type_name -> google.fhir.r4.core.Markdown
	22, // 17: google.fhir.r4.core.GraphDefinition.use_context:type_name -> google.fhir.r4.core.UsageContext
	23, // 18: google.fhir.r4.core.GraphDefinition.jurisdiction:type_name -> google.fhir.r4.core.CodeableConcept
	21, // 19: google.fhir.r4.core.GraphDefinition.purpose:type_name -> google.fhir.r4.core.Markdown
	2,  // 20: google.fhir.r4.core.GraphDefinition.start:type_name -> google.fhir.r4.core.GraphDefinition.StartCode
	24, // 21: google.fhir.r4.core.GraphDefinition.profile:type_name -> google.fhir.r4.core.Canonical
	3,  // 22: google.fhir.r4.core.GraphDefinition.link:type_name -> google.fhir.r4.core.GraphDefinition.Link
	25, // 23: google.fhir.r4.core.GraphDefinition.StatusCode.value:type_name -> google.fhir.r4.core.PublicationStatusCode.Value
	17, // 24: google.fhir.r4.core.GraphDefinition.StatusCode.id:type_name -> google.fhir.r4.core.String
	16, // 25: google.fhir.r4.core.GraphDefinition.StatusCode.extension:type_name -> google.fhir.r4.core.Extension
	26, // 26: google.fhir.r4.core.GraphDefinition.StartCode.value:type_name -> google.fhir.r4.core.ResourceTypeCode.Value
	17, // 27: google.fhir.r4.core.GraphDefinition.StartCode.id:type_name -> google.fhir.r4.core.String
	16, // 28: google.fhir.r4.core.GraphDefinition.StartCode.extension:type_name -> google.fhir.r4.core.Extension
	17, // 29: google.fhir.r4.core.GraphDefinition.Link.id:type_name -> google.fhir.r4.core.String
	16, // 30: google.fhir.r4.core.GraphDefinition.Link.extension:type_name -> google.fhir.r4.core.Extension
	16, // 31: google.fhir.r4.core.GraphDefinition.Link.modifier_extension:type_name -> google.fhir.r4.core.Extension
	17, // 32: google.fhir.r4.core.GraphDefinition.Link.path:type_name -> google.fhir.r4.core.String
	17, // 33: google.fhir.r4.core.GraphDefinition.Link.slice_name:type_name -> google.fhir.r4.core.String
	27, // 34: google.fhir.r4.core.GraphDefinition.Link.min:type_name -> google.fhir.r4.core.Integer
	17, // 35: google.fhir.r4.core.GraphDefinition.Link.max:type_name -> google.fhir.r4.core.String
	17, // 36: google.fhir.r4.core.GraphDefinition.Link.description:type_name -> google.fhir.r4.core.String
	4,  // 37: google.fhir.r4.core.GraphDefinition.Link.target:type_name -> google.fhir.r4.core.GraphDefinition.Link.Target
	17, // 38: google.fhir.r4.core.GraphDefinition.Link.Target.id:type_name -> google.fhir.r4.core.String
	16, // 39: google.fhir.r4.core.GraphDefinition.Link.Target.extension:type_name -> google.fhir.r4.core.Extension
	16, // 40: google.fhir.r4.core.GraphDefinition.Link.Target.modifier_extension:type_name -> google.fhir.r4.core.Extension
	5,  // 41: google.fhir.r4.core.GraphDefinition.Link.Target.type:type_name -> google.fhir.r4.core.GraphDefinition.Link.Target.TypeCode
	17, // 42: google.fhir.r4.core.GraphDefinition.Link.Target.params:type_name -> google.fhir.r4.core.String
	24, // 43: google.fhir.r4.core.GraphDefinition.Link.Target.profile:type_name -> google.fhir.r4.core.Canonical
	6,  // 44: google.fhir.r4.core.GraphDefinition.Link.Target.compartment:type_name -> google.fhir.r4.core.GraphDefinition.Link.Target.Compartment
	3,  // 45: google.fhir.r4.core.GraphDefinition.Link.Target.link:type_name -> google.fhir.r4.core.GraphDefinition.Link
	26, // 46: google.fhir.r4.core.GraphDefinition.Link.Target.TypeCode.value:type_name -> google.fhir.r4.core.ResourceTypeCode.Value
	17, // 47: google.fhir.r4.core.GraphDefinition.Link.Target.TypeCode.id:type_name -> google.fhir.r4.core.String
	16, // 48: google.fhir.r4.core.GraphDefinition.Link.Target.TypeCode.extension:type_name -> google.fhir.r4.core.Extension
	17, // 49: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.id:type_name -> google.fhir.r4.core.String
	16, // 50: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.extension:type_name -> google.fhir.r4.core.Extension
	16, // 51: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.modifier_extension:type_name -> google.fhir.r4.core.Extension
	7,  // 52: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.use:type_name -> google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.UseCode
	8,  // 53: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.code:type_name -> google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.CodeType
	9,  // 54: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.rule:type_name -> google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.RuleCode
	17, // 55: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.expression:type_name -> google.fhir.r4.core.String
	17, // 56: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.description:type_name -> google.fhir.r4.core.String
	28, // 57: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.UseCode.value:type_name -> google.fhir.r4.core.GraphCompartmentUseCode.Value
	17, // 58: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.UseCode.id:type_name -> google.fhir.r4.core.String
	16, // 59: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.UseCode.extension:type_name -> google.fhir.r4.core.Extension
	29, // 60: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.CodeType.value:type_name -> google.fhir.r4.core.CompartmentTypeCode.Value
	17, // 61: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.CodeType.id:type_name -> google.fhir.r4.core.String
	16, // 62: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.CodeType.extension:type_name -> google.fhir.r4.core.Extension
	30, // 63: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.RuleCode.value:type_name -> google.fhir.r4.core.GraphCompartmentRuleCode.Value
	17, // 64: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.RuleCode.id:type_name -> google.fhir.r4.core.String
	16, // 65: google.fhir.r4.core.GraphDefinition.Link.Target.Compartment.RuleCode.extension:type_name -> google.fhir.r4.core.Extension
	66, // [66:66] is the sub-list for method output_type
	66, // [66:66] is the sub-list for method input_type
	66, // [66:66] is the sub-list for extension type_name
	66, // [66:66] is the sub-list for extension extendee
	0,  // [0:66] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_init() }
func file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_init() {
	if File_proto_google_fhir_proto_r4_core_resources_graph_definition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphDefinition_StatusCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphDefinition_StartCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphDefinition_Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphDefinition_Link_Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphDefinition_Link_Target_TypeCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphDefinition_Link_Target_Compartment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphDefinition_Link_Target_Compartment_UseCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphDefinition_Link_Target_Compartment_CodeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphDefinition_Link_Target_Compartment_RuleCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_depIdxs,
		MessageInfos:      file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_r4_core_resources_graph_definition_proto = out.File
	file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_rawDesc = nil
	file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_goTypes = nil
	file_proto_google_fhir_proto_r4_core_resources_graph_definition_proto_depIdxs = nil
}
