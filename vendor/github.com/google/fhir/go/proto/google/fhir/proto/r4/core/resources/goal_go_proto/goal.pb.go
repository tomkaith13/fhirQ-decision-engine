//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: proto/google/fhir/proto/r4/core/resources/goal.proto

package goal_go_proto

import (
	any "github.com/golang/protobuf/ptypes/any"
	_ "github.com/google/fhir/go/proto/google/fhir/proto/annotations_go_proto"
	codes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/codes_go_proto"
	datatypes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/datatypes_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Auto-generated from StructureDefinition for Goal, last updated
// 2019-11-01T09:29:23.356+11:00. Describes the intended objective(s) for a
// patient, group or organization. See
// http://hl7.org/fhir/StructureDefinition/Goal
type Goal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Logical id of this artifact
	Id *datatypes_go_proto.Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *datatypes_go_proto.Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *datatypes_go_proto.Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *datatypes_go_proto.Code `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *datatypes_go_proto.Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*any.Any `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,8,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,9,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External Ids for this goal
	Identifier      []*datatypes_go_proto.Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	LifecycleStatus *Goal_LifecycleStatusCode        `protobuf:"bytes,11,opt,name=lifecycle_status,json=lifecycleStatus,proto3" json:"lifecycle_status,omitempty"`
	// in-progress | improving | worsening | no-change | achieved | sustaining |
	// not-achieved | no-progress | not-attainable
	AchievementStatus *datatypes_go_proto.CodeableConcept `protobuf:"bytes,12,opt,name=achievement_status,json=achievementStatus,proto3" json:"achievement_status,omitempty"`
	// E.g. Treatment, dietary, behavioral, etc.
	Category []*datatypes_go_proto.CodeableConcept `protobuf:"bytes,13,rep,name=category,proto3" json:"category,omitempty"`
	// high-priority | medium-priority | low-priority
	Priority *datatypes_go_proto.CodeableConcept `protobuf:"bytes,14,opt,name=priority,proto3" json:"priority,omitempty"`
	// Code or text describing goal
	Description *datatypes_go_proto.CodeableConcept `protobuf:"bytes,15,opt,name=description,proto3" json:"description,omitempty"`
	// Who this goal is intended for
	Subject *datatypes_go_proto.Reference `protobuf:"bytes,16,opt,name=subject,proto3" json:"subject,omitempty"`
	Start   *Goal_StartX                  `protobuf:"bytes,17,opt,name=start,proto3" json:"start,omitempty"`
	Target  []*Goal_Target                `protobuf:"bytes,18,rep,name=target,proto3" json:"target,omitempty"`
	// When goal status took effect
	StatusDate *datatypes_go_proto.Date `protobuf:"bytes,19,opt,name=status_date,json=statusDate,proto3" json:"status_date,omitempty"`
	// Reason for current status
	StatusReason *datatypes_go_proto.String `protobuf:"bytes,20,opt,name=status_reason,json=statusReason,proto3" json:"status_reason,omitempty"`
	// Who's responsible for creating Goal?
	ExpressedBy *datatypes_go_proto.Reference `protobuf:"bytes,21,opt,name=expressed_by,json=expressedBy,proto3" json:"expressed_by,omitempty"`
	// Issues addressed by this goal
	Addresses []*datatypes_go_proto.Reference `protobuf:"bytes,22,rep,name=addresses,proto3" json:"addresses,omitempty"`
	// Comments about the goal
	Note []*datatypes_go_proto.Annotation `protobuf:"bytes,23,rep,name=note,proto3" json:"note,omitempty"`
	// What result was achieved regarding the goal?
	OutcomeCode []*datatypes_go_proto.CodeableConcept `protobuf:"bytes,24,rep,name=outcome_code,json=outcomeCode,proto3" json:"outcome_code,omitempty"`
	// Observation that resulted from goal
	OutcomeReference []*datatypes_go_proto.Reference `protobuf:"bytes,25,rep,name=outcome_reference,json=outcomeReference,proto3" json:"outcome_reference,omitempty"`
}

func (x *Goal) Reset() {
	*x = Goal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Goal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Goal) ProtoMessage() {}

func (x *Goal) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Goal.ProtoReflect.Descriptor instead.
func (*Goal) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDescGZIP(), []int{0}
}

func (x *Goal) GetId() *datatypes_go_proto.Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Goal) GetMeta() *datatypes_go_proto.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Goal) GetImplicitRules() *datatypes_go_proto.Uri {
	if x != nil {
		return x.ImplicitRules
	}
	return nil
}

func (x *Goal) GetLanguage() *datatypes_go_proto.Code {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *Goal) GetText() *datatypes_go_proto.Narrative {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *Goal) GetContained() []*any.Any {
	if x != nil {
		return x.Contained
	}
	return nil
}

func (x *Goal) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *Goal) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *Goal) GetIdentifier() []*datatypes_go_proto.Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *Goal) GetLifecycleStatus() *Goal_LifecycleStatusCode {
	if x != nil {
		return x.LifecycleStatus
	}
	return nil
}

func (x *Goal) GetAchievementStatus() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.AchievementStatus
	}
	return nil
}

func (x *Goal) GetCategory() []*datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *Goal) GetPriority() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *Goal) GetDescription() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Goal) GetSubject() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *Goal) GetStart() *Goal_StartX {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *Goal) GetTarget() []*Goal_Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Goal) GetStatusDate() *datatypes_go_proto.Date {
	if x != nil {
		return x.StatusDate
	}
	return nil
}

func (x *Goal) GetStatusReason() *datatypes_go_proto.String {
	if x != nil {
		return x.StatusReason
	}
	return nil
}

func (x *Goal) GetExpressedBy() *datatypes_go_proto.Reference {
	if x != nil {
		return x.ExpressedBy
	}
	return nil
}

func (x *Goal) GetAddresses() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *Goal) GetNote() []*datatypes_go_proto.Annotation {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *Goal) GetOutcomeCode() []*datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.OutcomeCode
	}
	return nil
}

func (x *Goal) GetOutcomeReference() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.OutcomeReference
	}
	return nil
}

// proposed | planned | accepted | active | on-hold | completed | cancelled |
// entered-in-error | rejected
type Goal_LifecycleStatusCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.GoalLifecycleStatusCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.GoalLifecycleStatusCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension              `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *Goal_LifecycleStatusCode) Reset() {
	*x = Goal_LifecycleStatusCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Goal_LifecycleStatusCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Goal_LifecycleStatusCode) ProtoMessage() {}

func (x *Goal_LifecycleStatusCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Goal_LifecycleStatusCode.ProtoReflect.Descriptor instead.
func (*Goal_LifecycleStatusCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Goal_LifecycleStatusCode) GetValue() codes_go_proto.GoalLifecycleStatusCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.GoalLifecycleStatusCode_INVALID_UNINITIALIZED
}

func (x *Goal_LifecycleStatusCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Goal_LifecycleStatusCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// When goal pursuit begins
type Goal_StartX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*Goal_StartX_Date
	//	*Goal_StartX_CodeableConcept
	Choice isGoal_StartX_Choice `protobuf_oneof:"choice"`
}

func (x *Goal_StartX) Reset() {
	*x = Goal_StartX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Goal_StartX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Goal_StartX) ProtoMessage() {}

func (x *Goal_StartX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Goal_StartX.ProtoReflect.Descriptor instead.
func (*Goal_StartX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDescGZIP(), []int{0, 1}
}

func (m *Goal_StartX) GetChoice() isGoal_StartX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *Goal_StartX) GetDate() *datatypes_go_proto.Date {
	if x, ok := x.GetChoice().(*Goal_StartX_Date); ok {
		return x.Date
	}
	return nil
}

func (x *Goal_StartX) GetCodeableConcept() *datatypes_go_proto.CodeableConcept {
	if x, ok := x.GetChoice().(*Goal_StartX_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

type isGoal_StartX_Choice interface {
	isGoal_StartX_Choice()
}

type Goal_StartX_Date struct {
	Date *datatypes_go_proto.Date `protobuf:"bytes,1,opt,name=date,proto3,oneof"`
}

type Goal_StartX_CodeableConcept struct {
	CodeableConcept *datatypes_go_proto.CodeableConcept `protobuf:"bytes,2,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

func (*Goal_StartX_Date) isGoal_StartX_Choice() {}

func (*Goal_StartX_CodeableConcept) isGoal_StartX_Choice() {}

// Target outcome for the goal
type Goal_Target struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// The parameter whose value is being tracked
	Measure *datatypes_go_proto.CodeableConcept `protobuf:"bytes,4,opt,name=measure,proto3" json:"measure,omitempty"`
	Detail  *Goal_Target_DetailX                `protobuf:"bytes,5,opt,name=detail,proto3" json:"detail,omitempty"`
	Due     *Goal_Target_DueX                   `protobuf:"bytes,6,opt,name=due,proto3" json:"due,omitempty"`
}

func (x *Goal_Target) Reset() {
	*x = Goal_Target{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Goal_Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Goal_Target) ProtoMessage() {}

func (x *Goal_Target) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Goal_Target.ProtoReflect.Descriptor instead.
func (*Goal_Target) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Goal_Target) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Goal_Target) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *Goal_Target) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *Goal_Target) GetMeasure() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Measure
	}
	return nil
}

func (x *Goal_Target) GetDetail() *Goal_Target_DetailX {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *Goal_Target) GetDue() *Goal_Target_DueX {
	if x != nil {
		return x.Due
	}
	return nil
}

// The target value to be achieved
type Goal_Target_DetailX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*Goal_Target_DetailX_Quantity
	//	*Goal_Target_DetailX_Range
	//	*Goal_Target_DetailX_CodeableConcept
	//	*Goal_Target_DetailX_StringValue
	//	*Goal_Target_DetailX_Boolean
	//	*Goal_Target_DetailX_Integer
	//	*Goal_Target_DetailX_Ratio
	Choice isGoal_Target_DetailX_Choice `protobuf_oneof:"choice"`
}

func (x *Goal_Target_DetailX) Reset() {
	*x = Goal_Target_DetailX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Goal_Target_DetailX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Goal_Target_DetailX) ProtoMessage() {}

func (x *Goal_Target_DetailX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Goal_Target_DetailX.ProtoReflect.Descriptor instead.
func (*Goal_Target_DetailX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (m *Goal_Target_DetailX) GetChoice() isGoal_Target_DetailX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *Goal_Target_DetailX) GetQuantity() *datatypes_go_proto.Quantity {
	if x, ok := x.GetChoice().(*Goal_Target_DetailX_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (x *Goal_Target_DetailX) GetRange() *datatypes_go_proto.Range {
	if x, ok := x.GetChoice().(*Goal_Target_DetailX_Range); ok {
		return x.Range
	}
	return nil
}

func (x *Goal_Target_DetailX) GetCodeableConcept() *datatypes_go_proto.CodeableConcept {
	if x, ok := x.GetChoice().(*Goal_Target_DetailX_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (x *Goal_Target_DetailX) GetStringValue() *datatypes_go_proto.String {
	if x, ok := x.GetChoice().(*Goal_Target_DetailX_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (x *Goal_Target_DetailX) GetBoolean() *datatypes_go_proto.Boolean {
	if x, ok := x.GetChoice().(*Goal_Target_DetailX_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (x *Goal_Target_DetailX) GetInteger() *datatypes_go_proto.Integer {
	if x, ok := x.GetChoice().(*Goal_Target_DetailX_Integer); ok {
		return x.Integer
	}
	return nil
}

func (x *Goal_Target_DetailX) GetRatio() *datatypes_go_proto.Ratio {
	if x, ok := x.GetChoice().(*Goal_Target_DetailX_Ratio); ok {
		return x.Ratio
	}
	return nil
}

type isGoal_Target_DetailX_Choice interface {
	isGoal_Target_DetailX_Choice()
}

type Goal_Target_DetailX_Quantity struct {
	Quantity *datatypes_go_proto.Quantity `protobuf:"bytes,1,opt,name=quantity,proto3,oneof"`
}

type Goal_Target_DetailX_Range struct {
	Range *datatypes_go_proto.Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

type Goal_Target_DetailX_CodeableConcept struct {
	CodeableConcept *datatypes_go_proto.CodeableConcept `protobuf:"bytes,3,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Goal_Target_DetailX_StringValue struct {
	StringValue *datatypes_go_proto.String `protobuf:"bytes,4,opt,name=string_value,json=string,proto3,oneof"`
}

type Goal_Target_DetailX_Boolean struct {
	Boolean *datatypes_go_proto.Boolean `protobuf:"bytes,5,opt,name=boolean,proto3,oneof"`
}

type Goal_Target_DetailX_Integer struct {
	Integer *datatypes_go_proto.Integer `protobuf:"bytes,6,opt,name=integer,proto3,oneof"`
}

type Goal_Target_DetailX_Ratio struct {
	Ratio *datatypes_go_proto.Ratio `protobuf:"bytes,7,opt,name=ratio,proto3,oneof"`
}

func (*Goal_Target_DetailX_Quantity) isGoal_Target_DetailX_Choice() {}

func (*Goal_Target_DetailX_Range) isGoal_Target_DetailX_Choice() {}

func (*Goal_Target_DetailX_CodeableConcept) isGoal_Target_DetailX_Choice() {}

func (*Goal_Target_DetailX_StringValue) isGoal_Target_DetailX_Choice() {}

func (*Goal_Target_DetailX_Boolean) isGoal_Target_DetailX_Choice() {}

func (*Goal_Target_DetailX_Integer) isGoal_Target_DetailX_Choice() {}

func (*Goal_Target_DetailX_Ratio) isGoal_Target_DetailX_Choice() {}

// Reach goal on or before
type Goal_Target_DueX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*Goal_Target_DueX_Date
	//	*Goal_Target_DueX_Duration
	Choice isGoal_Target_DueX_Choice `protobuf_oneof:"choice"`
}

func (x *Goal_Target_DueX) Reset() {
	*x = Goal_Target_DueX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Goal_Target_DueX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Goal_Target_DueX) ProtoMessage() {}

func (x *Goal_Target_DueX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Goal_Target_DueX.ProtoReflect.Descriptor instead.
func (*Goal_Target_DueX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDescGZIP(), []int{0, 2, 1}
}

func (m *Goal_Target_DueX) GetChoice() isGoal_Target_DueX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *Goal_Target_DueX) GetDate() *datatypes_go_proto.Date {
	if x, ok := x.GetChoice().(*Goal_Target_DueX_Date); ok {
		return x.Date
	}
	return nil
}

func (x *Goal_Target_DueX) GetDuration() *datatypes_go_proto.Duration {
	if x, ok := x.GetChoice().(*Goal_Target_DueX_Duration); ok {
		return x.Duration
	}
	return nil
}

type isGoal_Target_DueX_Choice interface {
	isGoal_Target_DueX_Choice()
}

type Goal_Target_DueX_Date struct {
	Date *datatypes_go_proto.Date `protobuf:"bytes,1,opt,name=date,proto3,oneof"`
}

type Goal_Target_DueX_Duration struct {
	Duration *datatypes_go_proto.Duration `protobuf:"bytes,2,opt,name=duration,proto3,oneof"`
}

func (*Goal_Target_DueX_Date) isGoal_Target_DueX_Choice() {}

func (*Goal_Target_DueX_Duration) isGoal_Target_DueX_Choice() {}

var File_proto_google_fhir_proto_r4_core_resources_goal_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDesc = []byte{
	0x0a, 0x34, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x61, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xc2, 0x1a, 0x0a, 0x04, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x3f, 0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55,
	0x72, 0x69, 0x52, 0x0d, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x35, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x61, 0x72,
	0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x32, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d,
	0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x60,
	0x0a, 0x10, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47,
	0x6f, 0x61, 0x6c, 0x2e, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52,
	0x0f, 0x6c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x53, 0x0a, 0x12, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65,
	0x70, 0x74, 0x52, 0x11, 0x61, 0x63, 0x68, 0x69, 0x65, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x40, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x4e, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x63, 0x65, 0x70, 0x74, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6a, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x30, 0xf0, 0xd0, 0x87, 0xeb,
	0x04, 0x01, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x07, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0xf2,
	0xff, 0xfc, 0xc2, 0x06, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0c,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x36, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x58, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x38, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x3a, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x8b, 0x01, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x48, 0xf2, 0xff,
	0xfc, 0xc2, 0x06, 0x07, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0xf2, 0xff, 0xfc, 0xc2, 0x06,
	0x0c, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0xf2, 0xff, 0xfc,
	0xc2, 0x06, 0x10, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x42, 0x79, 0x12, 0xb3, 0x01, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x75, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x09, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0b, 0x4f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x13, 0x4d,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0e, 0x4e, 0x75, 0x74, 0x72, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0e,
	0x52, 0x69, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x73, 0x73, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x47,
	0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x18,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x6f, 0x75, 0x74, 0x63, 0x6f,
	0x6d, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x19, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x42, 0x11, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0b, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x1a, 0xb2, 0x02, 0x0a, 0x13, 0x4c, 0x69, 0x66, 0x65,
	0x63, 0x79, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x4c, 0x69, 0x66, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x66, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2,
	0x05, 0x28, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x67,
	0x6f, 0x61, 0x6c, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x9e, 0x01, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x72, 0x74, 0x58, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x63, 0x6f, 0x64, 0x65,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f, 0x64, 0x65,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x3a, 0x06, 0xa0, 0x83, 0x83,
	0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x1a, 0x94, 0x08,
	0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x2e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x58, 0x52, 0x06, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x37, 0x0a, 0x03, 0x64, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x2e, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x2e, 0x44, 0x75, 0x65, 0x58, 0x52, 0x03, 0x64, 0x75, 0x65, 0x1a, 0xc4, 0x03,
	0x0a, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x58, 0x12, 0x3b, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x63, 0x6f,
	0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f,
	0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x12, 0x3b, 0x0a,
	0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x07, 0x62, 0x6f,
	0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x62, 0x6f, 0x6f,
	0x6c, 0x65, 0x61, 0x6e, 0x12, 0x38, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x12, 0x32,
	0x0a, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x3a, 0x06, 0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x1a, 0x86, 0x01, 0x0a, 0x04, 0x44, 0x75, 0x65, 0x58, 0x12, 0x2f, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3b,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x06, 0xa0, 0x83, 0x83,
	0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x3a, 0x45, 0x9a,
	0x86, 0x93, 0xa0, 0x08, 0x3f, 0x28, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x28, 0x29, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x2e, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x2e, 0x6e,
	0x6f, 0x74, 0x28, 0x29, 0x3a, 0x38, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x03, 0xb2, 0xfe, 0xe4, 0x97,
	0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x47, 0x6f, 0x61, 0x6c, 0x4a, 0x04,
	0x08, 0x07, 0x10, 0x08, 0x42, 0x74, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x50,
	0x01, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x67, 0x6f, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x98, 0xc6, 0xb0, 0xb5, 0x07, 0x04, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDescData = file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDesc
)

func file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDescData
}

var file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_google_fhir_proto_r4_core_resources_goal_proto_goTypes = []interface{}{
	(*Goal)(nil),                                      // 0: google.fhir.r4.core.Goal
	(*Goal_LifecycleStatusCode)(nil),                  // 1: google.fhir.r4.core.Goal.LifecycleStatusCode
	(*Goal_StartX)(nil),                               // 2: google.fhir.r4.core.Goal.StartX
	(*Goal_Target)(nil),                               // 3: google.fhir.r4.core.Goal.Target
	(*Goal_Target_DetailX)(nil),                       // 4: google.fhir.r4.core.Goal.Target.DetailX
	(*Goal_Target_DueX)(nil),                          // 5: google.fhir.r4.core.Goal.Target.DueX
	(*datatypes_go_proto.Id)(nil),                     // 6: google.fhir.r4.core.Id
	(*datatypes_go_proto.Meta)(nil),                   // 7: google.fhir.r4.core.Meta
	(*datatypes_go_proto.Uri)(nil),                    // 8: google.fhir.r4.core.Uri
	(*datatypes_go_proto.Code)(nil),                   // 9: google.fhir.r4.core.Code
	(*datatypes_go_proto.Narrative)(nil),              // 10: google.fhir.r4.core.Narrative
	(*any.Any)(nil),                                   // 11: google.protobuf.Any
	(*datatypes_go_proto.Extension)(nil),              // 12: google.fhir.r4.core.Extension
	(*datatypes_go_proto.Identifier)(nil),             // 13: google.fhir.r4.core.Identifier
	(*datatypes_go_proto.CodeableConcept)(nil),        // 14: google.fhir.r4.core.CodeableConcept
	(*datatypes_go_proto.Reference)(nil),              // 15: google.fhir.r4.core.Reference
	(*datatypes_go_proto.Date)(nil),                   // 16: google.fhir.r4.core.Date
	(*datatypes_go_proto.String)(nil),                 // 17: google.fhir.r4.core.String
	(*datatypes_go_proto.Annotation)(nil),             // 18: google.fhir.r4.core.Annotation
	(codes_go_proto.GoalLifecycleStatusCode_Value)(0), // 19: google.fhir.r4.core.GoalLifecycleStatusCode.Value
	(*datatypes_go_proto.Quantity)(nil),               // 20: google.fhir.r4.core.Quantity
	(*datatypes_go_proto.Range)(nil),                  // 21: google.fhir.r4.core.Range
	(*datatypes_go_proto.Boolean)(nil),                // 22: google.fhir.r4.core.Boolean
	(*datatypes_go_proto.Integer)(nil),                // 23: google.fhir.r4.core.Integer
	(*datatypes_go_proto.Ratio)(nil),                  // 24: google.fhir.r4.core.Ratio
	(*datatypes_go_proto.Duration)(nil),               // 25: google.fhir.r4.core.Duration
}
var file_proto_google_fhir_proto_r4_core_resources_goal_proto_depIdxs = []int32{
	6,  // 0: google.fhir.r4.core.Goal.id:type_name -> google.fhir.r4.core.Id
	7,  // 1: google.fhir.r4.core.Goal.meta:type_name -> google.fhir.r4.core.Meta
	8,  // 2: google.fhir.r4.core.Goal.implicit_rules:type_name -> google.fhir.r4.core.Uri
	9,  // 3: google.fhir.r4.core.Goal.language:type_name -> google.fhir.r4.core.Code
	10, // 4: google.fhir.r4.core.Goal.text:type_name -> google.fhir.r4.core.Narrative
	11, // 5: google.fhir.r4.core.Goal.contained:type_name -> google.protobuf.Any
	12, // 6: google.fhir.r4.core.Goal.extension:type_name -> google.fhir.r4.core.Extension
	12, // 7: google.fhir.r4.core.Goal.modifier_extension:type_name -> google.fhir.r4.core.Extension
	13, // 8: google.fhir.r4.core.Goal.identifier:type_name -> google.fhir.r4.core.Identifier
	1,  // 9: google.fhir.r4.core.Goal.lifecycle_status:type_name -> google.fhir.r4.core.Goal.LifecycleStatusCode
	14, // 10: google.fhir.r4.core.Goal.achievement_status:type_name -> google.fhir.r4.core.CodeableConcept
	14, // 11: google.fhir.r4.core.Goal.category:type_name -> google.fhir.r4.core.CodeableConcept
	14, // 12: google.fhir.r4.core.Goal.priority:type_name -> google.fhir.r4.core.CodeableConcept
	14, // 13: google.fhir.r4.core.Goal.description:type_name -> google.fhir.r4.core.CodeableConcept
	15, // 14: google.fhir.r4.core.Goal.subject:type_name -> google.fhir.r4.core.Reference
	2,  // 15: google.fhir.r4.core.Goal.start:type_name -> google.fhir.r4.core.Goal.StartX
	3,  // 16: google.fhir.r4.core.Goal.target:type_name -> google.fhir.r4.core.Goal.Target
	16, // 17: google.fhir.r4.core.Goal.status_date:type_name -> google.fhir.r4.core.Date
	17, // 18: google.fhir.r4.core.Goal.status_reason:type_name -> google.fhir.r4.core.String
	15, // 19: google.fhir.r4.core.Goal.expressed_by:type_name -> google.fhir.r4.core.Reference
	15, // 20: google.fhir.r4.core.Goal.addresses:type_name -> google.fhir.r4.core.Reference
	18, // 21: google.fhir.r4.core.Goal.note:type_name -> google.fhir.r4.core.Annotation
	14, // 22: google.fhir.r4.core.Goal.outcome_code:type_name -> google.fhir.r4.core.CodeableConcept
	15, // 23: google.fhir.r4.core.Goal.outcome_reference:type_name -> google.fhir.r4.core.Reference
	19, // 24: google.fhir.r4.core.Goal.LifecycleStatusCode.value:type_name -> google.fhir.r4.core.GoalLifecycleStatusCode.Value
	17, // 25: google.fhir.r4.core.Goal.LifecycleStatusCode.id:type_name -> google.fhir.r4.core.String
	12, // 26: google.fhir.r4.core.Goal.LifecycleStatusCode.extension:type_name -> google.fhir.r4.core.Extension
	16, // 27: google.fhir.r4.core.Goal.StartX.date:type_name -> google.fhir.r4.core.Date
	14, // 28: google.fhir.r4.core.Goal.StartX.codeable_concept:type_name -> google.fhir.r4.core.CodeableConcept
	17, // 29: google.fhir.r4.core.Goal.Target.id:type_name -> google.fhir.r4.core.String
	12, // 30: google.fhir.r4.core.Goal.Target.extension:type_name -> google.fhir.r4.core.Extension
	12, // 31: google.fhir.r4.core.Goal.Target.modifier_extension:type_name -> google.fhir.r4.core.Extension
	14, // 32: google.fhir.r4.core.Goal.Target.measure:type_name -> google.fhir.r4.core.CodeableConcept
	4,  // 33: google.fhir.r4.core.Goal.Target.detail:type_name -> google.fhir.r4.core.Goal.Target.DetailX
	5,  // 34: google.fhir.r4.core.Goal.Target.due:type_name -> google.fhir.r4.core.Goal.Target.DueX
	20, // 35: google.fhir.r4.core.Goal.Target.DetailX.quantity:type_name -> google.fhir.r4.core.Quantity
	21, // 36: google.fhir.r4.core.Goal.Target.DetailX.range:type_name -> google.fhir.r4.core.Range
	14, // 37: google.fhir.r4.core.Goal.Target.DetailX.codeable_concept:type_name -> google.fhir.r4.core.CodeableConcept
	17, // 38: google.fhir.r4.core.Goal.Target.DetailX.string_value:type_name -> google.fhir.r4.core.String
	22, // 39: google.fhir.r4.core.Goal.Target.DetailX.boolean:type_name -> google.fhir.r4.core.Boolean
	23, // 40: google.fhir.r4.core.Goal.Target.DetailX.integer:type_name -> google.fhir.r4.core.Integer
	24, // 41: google.fhir.r4.core.Goal.Target.DetailX.ratio:type_name -> google.fhir.r4.core.Ratio
	16, // 42: google.fhir.r4.core.Goal.Target.DueX.date:type_name -> google.fhir.r4.core.Date
	25, // 43: google.fhir.r4.core.Goal.Target.DueX.duration:type_name -> google.fhir.r4.core.Duration
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_r4_core_resources_goal_proto_init() }
func file_proto_google_fhir_proto_r4_core_resources_goal_proto_init() {
	if File_proto_google_fhir_proto_r4_core_resources_goal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Goal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Goal_LifecycleStatusCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Goal_StartX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Goal_Target); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Goal_Target_DetailX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Goal_Target_DueX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Goal_StartX_Date)(nil),
		(*Goal_StartX_CodeableConcept)(nil),
	}
	file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Goal_Target_DetailX_Quantity)(nil),
		(*Goal_Target_DetailX_Range)(nil),
		(*Goal_Target_DetailX_CodeableConcept)(nil),
		(*Goal_Target_DetailX_StringValue)(nil),
		(*Goal_Target_DetailX_Boolean)(nil),
		(*Goal_Target_DetailX_Integer)(nil),
		(*Goal_Target_DetailX_Ratio)(nil),
	}
	file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Goal_Target_DueX_Date)(nil),
		(*Goal_Target_DueX_Duration)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_r4_core_resources_goal_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_r4_core_resources_goal_proto_depIdxs,
		MessageInfos:      file_proto_google_fhir_proto_r4_core_resources_goal_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_r4_core_resources_goal_proto = out.File
	file_proto_google_fhir_proto_r4_core_resources_goal_proto_rawDesc = nil
	file_proto_google_fhir_proto_r4_core_resources_goal_proto_goTypes = nil
	file_proto_google_fhir_proto_r4_core_resources_goal_proto_depIdxs = nil
}
