//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: proto/google/fhir/proto/r4/core/resources/research_element_definition.proto

package research_element_definition_go_proto

import (
	any "github.com/golang/protobuf/ptypes/any"
	_ "github.com/google/fhir/go/proto/google/fhir/proto/annotations_go_proto"
	codes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/codes_go_proto"
	datatypes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/datatypes_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Auto-generated from StructureDefinition for ResearchElementDefinition, last
// updated 2019-11-01T09:29:23.356+11:00. A population, intervention, or
// exposure definition. See
// http://hl7.org/fhir/StructureDefinition/ResearchElementDefinition
type ResearchElementDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Logical id of this artifact
	Id *datatypes_go_proto.Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *datatypes_go_proto.Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *datatypes_go_proto.Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *datatypes_go_proto.Code `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *datatypes_go_proto.Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*any.Any `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,8,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,9,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Canonical identifier for this research element definition, represented as a
	// URI (globally unique)
	Url *datatypes_go_proto.Uri `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	// Additional identifier for the research element definition
	Identifier []*datatypes_go_proto.Identifier `protobuf:"bytes,11,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Business version of the research element definition
	Version *datatypes_go_proto.String `protobuf:"bytes,12,opt,name=version,proto3" json:"version,omitempty"`
	// Name for this research element definition (computer friendly)
	Name *datatypes_go_proto.String `protobuf:"bytes,13,opt,name=name,proto3" json:"name,omitempty"`
	// Name for this research element definition (human friendly)
	Title *datatypes_go_proto.String `protobuf:"bytes,14,opt,name=title,proto3" json:"title,omitempty"`
	// Title for use in informal contexts
	ShortTitle *datatypes_go_proto.String `protobuf:"bytes,15,opt,name=short_title,json=shortTitle,proto3" json:"short_title,omitempty"`
	// Subordinate title of the ResearchElementDefinition
	Subtitle *datatypes_go_proto.String            `protobuf:"bytes,16,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Status   *ResearchElementDefinition_StatusCode `protobuf:"bytes,17,opt,name=status,proto3" json:"status,omitempty"`
	// For testing purposes, not real usage
	Experimental *datatypes_go_proto.Boolean         `protobuf:"bytes,18,opt,name=experimental,proto3" json:"experimental,omitempty"`
	Subject      *ResearchElementDefinition_SubjectX `protobuf:"bytes,19,opt,name=subject,proto3" json:"subject,omitempty"`
	// Date last changed
	Date *datatypes_go_proto.DateTime `protobuf:"bytes,20,opt,name=date,proto3" json:"date,omitempty"`
	// Name of the publisher (organization or individual)
	Publisher *datatypes_go_proto.String `protobuf:"bytes,21,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// Contact details for the publisher
	Contact []*datatypes_go_proto.ContactDetail `protobuf:"bytes,22,rep,name=contact,proto3" json:"contact,omitempty"`
	// Natural language description of the research element definition
	Description *datatypes_go_proto.Markdown `protobuf:"bytes,23,opt,name=description,proto3" json:"description,omitempty"`
	// Used for footnotes or explanatory notes
	Comment []*datatypes_go_proto.String `protobuf:"bytes,24,rep,name=comment,proto3" json:"comment,omitempty"`
	// The context that the content is intended to support
	UseContext []*datatypes_go_proto.UsageContext `protobuf:"bytes,25,rep,name=use_context,json=useContext,proto3" json:"use_context,omitempty"`
	// Intended jurisdiction for research element definition (if applicable)
	Jurisdiction []*datatypes_go_proto.CodeableConcept `protobuf:"bytes,26,rep,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`
	// Why this research element definition is defined
	Purpose *datatypes_go_proto.Markdown `protobuf:"bytes,27,opt,name=purpose,proto3" json:"purpose,omitempty"`
	// Describes the clinical usage of the ResearchElementDefinition
	Usage *datatypes_go_proto.String `protobuf:"bytes,28,opt,name=usage,proto3" json:"usage,omitempty"`
	// Use and/or publishing restrictions
	Copyright *datatypes_go_proto.Markdown `protobuf:"bytes,29,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// When the research element definition was approved by publisher
	ApprovalDate *datatypes_go_proto.Date `protobuf:"bytes,30,opt,name=approval_date,json=approvalDate,proto3" json:"approval_date,omitempty"`
	// When the research element definition was last reviewed
	LastReviewDate *datatypes_go_proto.Date `protobuf:"bytes,31,opt,name=last_review_date,json=lastReviewDate,proto3" json:"last_review_date,omitempty"`
	// When the research element definition is expected to be used
	EffectivePeriod *datatypes_go_proto.Period `protobuf:"bytes,32,opt,name=effective_period,json=effectivePeriod,proto3" json:"effective_period,omitempty"`
	// The category of the ResearchElementDefinition, such as Education,
	// Treatment, Assessment, etc.
	Topic []*datatypes_go_proto.CodeableConcept `protobuf:"bytes,33,rep,name=topic,proto3" json:"topic,omitempty"`
	// Who authored the content
	Author []*datatypes_go_proto.ContactDetail `protobuf:"bytes,34,rep,name=author,proto3" json:"author,omitempty"`
	// Who edited the content
	Editor []*datatypes_go_proto.ContactDetail `protobuf:"bytes,35,rep,name=editor,proto3" json:"editor,omitempty"`
	// Who reviewed the content
	Reviewer []*datatypes_go_proto.ContactDetail `protobuf:"bytes,36,rep,name=reviewer,proto3" json:"reviewer,omitempty"`
	// Who endorsed the content
	Endorser []*datatypes_go_proto.ContactDetail `protobuf:"bytes,37,rep,name=endorser,proto3" json:"endorser,omitempty"`
	// Additional documentation, citations, etc.
	RelatedArtifact []*datatypes_go_proto.RelatedArtifact `protobuf:"bytes,38,rep,name=related_artifact,json=relatedArtifact,proto3" json:"related_artifact,omitempty"`
	// Logic used by the ResearchElementDefinition
	Library        []*datatypes_go_proto.Canonical             `protobuf:"bytes,39,rep,name=library,proto3" json:"library,omitempty"`
	Type           *ResearchElementDefinition_TypeCode         `protobuf:"bytes,40,opt,name=type,proto3" json:"type,omitempty"`
	VariableType   *ResearchElementDefinition_VariableTypeCode `protobuf:"bytes,41,opt,name=variable_type,json=variableType,proto3" json:"variable_type,omitempty"`
	Characteristic []*ResearchElementDefinition_Characteristic `protobuf:"bytes,42,rep,name=characteristic,proto3" json:"characteristic,omitempty"`
}

func (x *ResearchElementDefinition) Reset() {
	*x = ResearchElementDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResearchElementDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResearchElementDefinition) ProtoMessage() {}

func (x *ResearchElementDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResearchElementDefinition.ProtoReflect.Descriptor instead.
func (*ResearchElementDefinition) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescGZIP(), []int{0}
}

func (x *ResearchElementDefinition) GetId() *datatypes_go_proto.Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ResearchElementDefinition) GetMeta() *datatypes_go_proto.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ResearchElementDefinition) GetImplicitRules() *datatypes_go_proto.Uri {
	if x != nil {
		return x.ImplicitRules
	}
	return nil
}

func (x *ResearchElementDefinition) GetLanguage() *datatypes_go_proto.Code {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *ResearchElementDefinition) GetText() *datatypes_go_proto.Narrative {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *ResearchElementDefinition) GetContained() []*any.Any {
	if x != nil {
		return x.Contained
	}
	return nil
}

func (x *ResearchElementDefinition) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *ResearchElementDefinition) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *ResearchElementDefinition) GetUrl() *datatypes_go_proto.Uri {
	if x != nil {
		return x.Url
	}
	return nil
}

func (x *ResearchElementDefinition) GetIdentifier() []*datatypes_go_proto.Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *ResearchElementDefinition) GetVersion() *datatypes_go_proto.String {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *ResearchElementDefinition) GetName() *datatypes_go_proto.String {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ResearchElementDefinition) GetTitle() *datatypes_go_proto.String {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *ResearchElementDefinition) GetShortTitle() *datatypes_go_proto.String {
	if x != nil {
		return x.ShortTitle
	}
	return nil
}

func (x *ResearchElementDefinition) GetSubtitle() *datatypes_go_proto.String {
	if x != nil {
		return x.Subtitle
	}
	return nil
}

func (x *ResearchElementDefinition) GetStatus() *ResearchElementDefinition_StatusCode {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ResearchElementDefinition) GetExperimental() *datatypes_go_proto.Boolean {
	if x != nil {
		return x.Experimental
	}
	return nil
}

func (x *ResearchElementDefinition) GetSubject() *ResearchElementDefinition_SubjectX {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *ResearchElementDefinition) GetDate() *datatypes_go_proto.DateTime {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ResearchElementDefinition) GetPublisher() *datatypes_go_proto.String {
	if x != nil {
		return x.Publisher
	}
	return nil
}

func (x *ResearchElementDefinition) GetContact() []*datatypes_go_proto.ContactDetail {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *ResearchElementDefinition) GetDescription() *datatypes_go_proto.Markdown {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ResearchElementDefinition) GetComment() []*datatypes_go_proto.String {
	if x != nil {
		return x.Comment
	}
	return nil
}

func (x *ResearchElementDefinition) GetUseContext() []*datatypes_go_proto.UsageContext {
	if x != nil {
		return x.UseContext
	}
	return nil
}

func (x *ResearchElementDefinition) GetJurisdiction() []*datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Jurisdiction
	}
	return nil
}

func (x *ResearchElementDefinition) GetPurpose() *datatypes_go_proto.Markdown {
	if x != nil {
		return x.Purpose
	}
	return nil
}

func (x *ResearchElementDefinition) GetUsage() *datatypes_go_proto.String {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *ResearchElementDefinition) GetCopyright() *datatypes_go_proto.Markdown {
	if x != nil {
		return x.Copyright
	}
	return nil
}

func (x *ResearchElementDefinition) GetApprovalDate() *datatypes_go_proto.Date {
	if x != nil {
		return x.ApprovalDate
	}
	return nil
}

func (x *ResearchElementDefinition) GetLastReviewDate() *datatypes_go_proto.Date {
	if x != nil {
		return x.LastReviewDate
	}
	return nil
}

func (x *ResearchElementDefinition) GetEffectivePeriod() *datatypes_go_proto.Period {
	if x != nil {
		return x.EffectivePeriod
	}
	return nil
}

func (x *ResearchElementDefinition) GetTopic() []*datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Topic
	}
	return nil
}

func (x *ResearchElementDefinition) GetAuthor() []*datatypes_go_proto.ContactDetail {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *ResearchElementDefinition) GetEditor() []*datatypes_go_proto.ContactDetail {
	if x != nil {
		return x.Editor
	}
	return nil
}

func (x *ResearchElementDefinition) GetReviewer() []*datatypes_go_proto.ContactDetail {
	if x != nil {
		return x.Reviewer
	}
	return nil
}

func (x *ResearchElementDefinition) GetEndorser() []*datatypes_go_proto.ContactDetail {
	if x != nil {
		return x.Endorser
	}
	return nil
}

func (x *ResearchElementDefinition) GetRelatedArtifact() []*datatypes_go_proto.RelatedArtifact {
	if x != nil {
		return x.RelatedArtifact
	}
	return nil
}

func (x *ResearchElementDefinition) GetLibrary() []*datatypes_go_proto.Canonical {
	if x != nil {
		return x.Library
	}
	return nil
}

func (x *ResearchElementDefinition) GetType() *ResearchElementDefinition_TypeCode {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ResearchElementDefinition) GetVariableType() *ResearchElementDefinition_VariableTypeCode {
	if x != nil {
		return x.VariableType
	}
	return nil
}

func (x *ResearchElementDefinition) GetCharacteristic() []*ResearchElementDefinition_Characteristic {
	if x != nil {
		return x.Characteristic
	}
	return nil
}

// draft | active | retired | unknown
type ResearchElementDefinition_StatusCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.PublicationStatusCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.PublicationStatusCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension            `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *ResearchElementDefinition_StatusCode) Reset() {
	*x = ResearchElementDefinition_StatusCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResearchElementDefinition_StatusCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResearchElementDefinition_StatusCode) ProtoMessage() {}

func (x *ResearchElementDefinition_StatusCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResearchElementDefinition_StatusCode.ProtoReflect.Descriptor instead.
func (*ResearchElementDefinition_StatusCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ResearchElementDefinition_StatusCode) GetValue() codes_go_proto.PublicationStatusCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.PublicationStatusCode_INVALID_UNINITIALIZED
}

func (x *ResearchElementDefinition_StatusCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ResearchElementDefinition_StatusCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// E.g. Patient, Practitioner, RelatedPerson, Organization, Location, Device
type ResearchElementDefinition_SubjectX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*ResearchElementDefinition_SubjectX_CodeableConcept
	//	*ResearchElementDefinition_SubjectX_Reference
	Choice isResearchElementDefinition_SubjectX_Choice `protobuf_oneof:"choice"`
}

func (x *ResearchElementDefinition_SubjectX) Reset() {
	*x = ResearchElementDefinition_SubjectX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResearchElementDefinition_SubjectX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResearchElementDefinition_SubjectX) ProtoMessage() {}

func (x *ResearchElementDefinition_SubjectX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResearchElementDefinition_SubjectX.ProtoReflect.Descriptor instead.
func (*ResearchElementDefinition_SubjectX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescGZIP(), []int{0, 1}
}

func (m *ResearchElementDefinition_SubjectX) GetChoice() isResearchElementDefinition_SubjectX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *ResearchElementDefinition_SubjectX) GetCodeableConcept() *datatypes_go_proto.CodeableConcept {
	if x, ok := x.GetChoice().(*ResearchElementDefinition_SubjectX_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (x *ResearchElementDefinition_SubjectX) GetReference() *datatypes_go_proto.Reference {
	if x, ok := x.GetChoice().(*ResearchElementDefinition_SubjectX_Reference); ok {
		return x.Reference
	}
	return nil
}

type isResearchElementDefinition_SubjectX_Choice interface {
	isResearchElementDefinition_SubjectX_Choice()
}

type ResearchElementDefinition_SubjectX_CodeableConcept struct {
	CodeableConcept *datatypes_go_proto.CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type ResearchElementDefinition_SubjectX_Reference struct {
	Reference *datatypes_go_proto.Reference `protobuf:"bytes,2,opt,name=reference,proto3,oneof"`
}

func (*ResearchElementDefinition_SubjectX_CodeableConcept) isResearchElementDefinition_SubjectX_Choice() {
}

func (*ResearchElementDefinition_SubjectX_Reference) isResearchElementDefinition_SubjectX_Choice() {}

// population | exposure | outcome
type ResearchElementDefinition_TypeCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.ResearchElementTypeCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.ResearchElementTypeCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension              `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *ResearchElementDefinition_TypeCode) Reset() {
	*x = ResearchElementDefinition_TypeCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResearchElementDefinition_TypeCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResearchElementDefinition_TypeCode) ProtoMessage() {}

func (x *ResearchElementDefinition_TypeCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResearchElementDefinition_TypeCode.ProtoReflect.Descriptor instead.
func (*ResearchElementDefinition_TypeCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescGZIP(), []int{0, 2}
}

func (x *ResearchElementDefinition_TypeCode) GetValue() codes_go_proto.ResearchElementTypeCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.ResearchElementTypeCode_INVALID_UNINITIALIZED
}

func (x *ResearchElementDefinition_TypeCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ResearchElementDefinition_TypeCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// dichotomous | continuous | descriptive
type ResearchElementDefinition_VariableTypeCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.EvidenceVariableTypeCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.EvidenceVariableTypeCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension               `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *ResearchElementDefinition_VariableTypeCode) Reset() {
	*x = ResearchElementDefinition_VariableTypeCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResearchElementDefinition_VariableTypeCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResearchElementDefinition_VariableTypeCode) ProtoMessage() {}

func (x *ResearchElementDefinition_VariableTypeCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResearchElementDefinition_VariableTypeCode.ProtoReflect.Descriptor instead.
func (*ResearchElementDefinition_VariableTypeCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ResearchElementDefinition_VariableTypeCode) GetValue() codes_go_proto.EvidenceVariableTypeCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.EvidenceVariableTypeCode_INVALID_UNINITIALIZED
}

func (x *ResearchElementDefinition_VariableTypeCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ResearchElementDefinition_VariableTypeCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// What defines the members of the research element
type ResearchElementDefinition_Characteristic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension                       `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Definition        *ResearchElementDefinition_Characteristic_DefinitionX `protobuf:"bytes,4,opt,name=definition,proto3" json:"definition,omitempty"`
	// What code/value pairs define members?
	UsageContext []*datatypes_go_proto.UsageContext `protobuf:"bytes,5,rep,name=usage_context,json=usageContext,proto3" json:"usage_context,omitempty"`
	// Whether the characteristic includes or excludes members
	Exclude *datatypes_go_proto.Boolean `protobuf:"bytes,6,opt,name=exclude,proto3" json:"exclude,omitempty"`
	// What unit is the outcome described in?
	UnitOfMeasure *datatypes_go_proto.CodeableConcept `protobuf:"bytes,7,opt,name=unit_of_measure,json=unitOfMeasure,proto3" json:"unit_of_measure,omitempty"`
	// What time period does the study cover
	StudyEffectiveDescription *datatypes_go_proto.String                                `protobuf:"bytes,8,opt,name=study_effective_description,json=studyEffectiveDescription,proto3" json:"study_effective_description,omitempty"`
	StudyEffective            *ResearchElementDefinition_Characteristic_StudyEffectiveX `protobuf:"bytes,9,opt,name=study_effective,json=studyEffective,proto3" json:"study_effective,omitempty"`
	// Observation time from study start
	StudyEffectiveTimeFromStart *datatypes_go_proto.Duration                                             `protobuf:"bytes,10,opt,name=study_effective_time_from_start,json=studyEffectiveTimeFromStart,proto3" json:"study_effective_time_from_start,omitempty"`
	StudyEffectiveGroupMeasure  *ResearchElementDefinition_Characteristic_StudyEffectiveGroupMeasureCode `protobuf:"bytes,11,opt,name=study_effective_group_measure,json=studyEffectiveGroupMeasure,proto3" json:"study_effective_group_measure,omitempty"`
	// What time period do participants cover
	ParticipantEffectiveDescription *datatypes_go_proto.String                                      `protobuf:"bytes,12,opt,name=participant_effective_description,json=participantEffectiveDescription,proto3" json:"participant_effective_description,omitempty"`
	ParticipantEffective            *ResearchElementDefinition_Characteristic_ParticipantEffectiveX `protobuf:"bytes,13,opt,name=participant_effective,json=participantEffective,proto3" json:"participant_effective,omitempty"`
	// Observation time from study start
	ParticipantEffectiveTimeFromStart *datatypes_go_proto.Duration                                                   `protobuf:"bytes,14,opt,name=participant_effective_time_from_start,json=participantEffectiveTimeFromStart,proto3" json:"participant_effective_time_from_start,omitempty"`
	ParticipantEffectiveGroupMeasure  *ResearchElementDefinition_Characteristic_ParticipantEffectiveGroupMeasureCode `protobuf:"bytes,15,opt,name=participant_effective_group_measure,json=participantEffectiveGroupMeasure,proto3" json:"participant_effective_group_measure,omitempty"`
}

func (x *ResearchElementDefinition_Characteristic) Reset() {
	*x = ResearchElementDefinition_Characteristic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResearchElementDefinition_Characteristic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResearchElementDefinition_Characteristic) ProtoMessage() {}

func (x *ResearchElementDefinition_Characteristic) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResearchElementDefinition_Characteristic.ProtoReflect.Descriptor instead.
func (*ResearchElementDefinition_Characteristic) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescGZIP(), []int{0, 4}
}

func (x *ResearchElementDefinition_Characteristic) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic) GetDefinition() *ResearchElementDefinition_Characteristic_DefinitionX {
	if x != nil {
		return x.Definition
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic) GetUsageContext() []*datatypes_go_proto.UsageContext {
	if x != nil {
		return x.UsageContext
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic) GetExclude() *datatypes_go_proto.Boolean {
	if x != nil {
		return x.Exclude
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic) GetUnitOfMeasure() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.UnitOfMeasure
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic) GetStudyEffectiveDescription() *datatypes_go_proto.String {
	if x != nil {
		return x.StudyEffectiveDescription
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic) GetStudyEffective() *ResearchElementDefinition_Characteristic_StudyEffectiveX {
	if x != nil {
		return x.StudyEffective
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic) GetStudyEffectiveTimeFromStart() *datatypes_go_proto.Duration {
	if x != nil {
		return x.StudyEffectiveTimeFromStart
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic) GetStudyEffectiveGroupMeasure() *ResearchElementDefinition_Characteristic_StudyEffectiveGroupMeasureCode {
	if x != nil {
		return x.StudyEffectiveGroupMeasure
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic) GetParticipantEffectiveDescription() *datatypes_go_proto.String {
	if x != nil {
		return x.ParticipantEffectiveDescription
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic) GetParticipantEffective() *ResearchElementDefinition_Characteristic_ParticipantEffectiveX {
	if x != nil {
		return x.ParticipantEffective
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic) GetParticipantEffectiveTimeFromStart() *datatypes_go_proto.Duration {
	if x != nil {
		return x.ParticipantEffectiveTimeFromStart
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic) GetParticipantEffectiveGroupMeasure() *ResearchElementDefinition_Characteristic_ParticipantEffectiveGroupMeasureCode {
	if x != nil {
		return x.ParticipantEffectiveGroupMeasure
	}
	return nil
}

// What code or expression defines members?
type ResearchElementDefinition_Characteristic_DefinitionX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*ResearchElementDefinition_Characteristic_DefinitionX_CodeableConcept
	//	*ResearchElementDefinition_Characteristic_DefinitionX_Canonical
	//	*ResearchElementDefinition_Characteristic_DefinitionX_Expression
	//	*ResearchElementDefinition_Characteristic_DefinitionX_DataRequirement
	Choice isResearchElementDefinition_Characteristic_DefinitionX_Choice `protobuf_oneof:"choice"`
}

func (x *ResearchElementDefinition_Characteristic_DefinitionX) Reset() {
	*x = ResearchElementDefinition_Characteristic_DefinitionX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResearchElementDefinition_Characteristic_DefinitionX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResearchElementDefinition_Characteristic_DefinitionX) ProtoMessage() {}

func (x *ResearchElementDefinition_Characteristic_DefinitionX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResearchElementDefinition_Characteristic_DefinitionX.ProtoReflect.Descriptor instead.
func (*ResearchElementDefinition_Characteristic_DefinitionX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescGZIP(), []int{0, 4, 0}
}

func (m *ResearchElementDefinition_Characteristic_DefinitionX) GetChoice() isResearchElementDefinition_Characteristic_DefinitionX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic_DefinitionX) GetCodeableConcept() *datatypes_go_proto.CodeableConcept {
	if x, ok := x.GetChoice().(*ResearchElementDefinition_Characteristic_DefinitionX_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic_DefinitionX) GetCanonical() *datatypes_go_proto.Canonical {
	if x, ok := x.GetChoice().(*ResearchElementDefinition_Characteristic_DefinitionX_Canonical); ok {
		return x.Canonical
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic_DefinitionX) GetExpression() *datatypes_go_proto.Expression {
	if x, ok := x.GetChoice().(*ResearchElementDefinition_Characteristic_DefinitionX_Expression); ok {
		return x.Expression
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic_DefinitionX) GetDataRequirement() *datatypes_go_proto.DataRequirement {
	if x, ok := x.GetChoice().(*ResearchElementDefinition_Characteristic_DefinitionX_DataRequirement); ok {
		return x.DataRequirement
	}
	return nil
}

type isResearchElementDefinition_Characteristic_DefinitionX_Choice interface {
	isResearchElementDefinition_Characteristic_DefinitionX_Choice()
}

type ResearchElementDefinition_Characteristic_DefinitionX_CodeableConcept struct {
	CodeableConcept *datatypes_go_proto.CodeableConcept `protobuf:"bytes,1,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type ResearchElementDefinition_Characteristic_DefinitionX_Canonical struct {
	Canonical *datatypes_go_proto.Canonical `protobuf:"bytes,2,opt,name=canonical,proto3,oneof"`
}

type ResearchElementDefinition_Characteristic_DefinitionX_Expression struct {
	Expression *datatypes_go_proto.Expression `protobuf:"bytes,3,opt,name=expression,proto3,oneof"`
}

type ResearchElementDefinition_Characteristic_DefinitionX_DataRequirement struct {
	DataRequirement *datatypes_go_proto.DataRequirement `protobuf:"bytes,4,opt,name=data_requirement,json=dataRequirement,proto3,oneof"`
}

func (*ResearchElementDefinition_Characteristic_DefinitionX_CodeableConcept) isResearchElementDefinition_Characteristic_DefinitionX_Choice() {
}

func (*ResearchElementDefinition_Characteristic_DefinitionX_Canonical) isResearchElementDefinition_Characteristic_DefinitionX_Choice() {
}

func (*ResearchElementDefinition_Characteristic_DefinitionX_Expression) isResearchElementDefinition_Characteristic_DefinitionX_Choice() {
}

func (*ResearchElementDefinition_Characteristic_DefinitionX_DataRequirement) isResearchElementDefinition_Characteristic_DefinitionX_Choice() {
}

// What time period does the study cover
type ResearchElementDefinition_Characteristic_StudyEffectiveX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*ResearchElementDefinition_Characteristic_StudyEffectiveX_DateTime
	//	*ResearchElementDefinition_Characteristic_StudyEffectiveX_Period
	//	*ResearchElementDefinition_Characteristic_StudyEffectiveX_Duration
	//	*ResearchElementDefinition_Characteristic_StudyEffectiveX_Timing
	Choice isResearchElementDefinition_Characteristic_StudyEffectiveX_Choice `protobuf_oneof:"choice"`
}

func (x *ResearchElementDefinition_Characteristic_StudyEffectiveX) Reset() {
	*x = ResearchElementDefinition_Characteristic_StudyEffectiveX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResearchElementDefinition_Characteristic_StudyEffectiveX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResearchElementDefinition_Characteristic_StudyEffectiveX) ProtoMessage() {}

func (x *ResearchElementDefinition_Characteristic_StudyEffectiveX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResearchElementDefinition_Characteristic_StudyEffectiveX.ProtoReflect.Descriptor instead.
func (*ResearchElementDefinition_Characteristic_StudyEffectiveX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescGZIP(), []int{0, 4, 1}
}

func (m *ResearchElementDefinition_Characteristic_StudyEffectiveX) GetChoice() isResearchElementDefinition_Characteristic_StudyEffectiveX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic_StudyEffectiveX) GetDateTime() *datatypes_go_proto.DateTime {
	if x, ok := x.GetChoice().(*ResearchElementDefinition_Characteristic_StudyEffectiveX_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic_StudyEffectiveX) GetPeriod() *datatypes_go_proto.Period {
	if x, ok := x.GetChoice().(*ResearchElementDefinition_Characteristic_StudyEffectiveX_Period); ok {
		return x.Period
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic_StudyEffectiveX) GetDuration() *datatypes_go_proto.Duration {
	if x, ok := x.GetChoice().(*ResearchElementDefinition_Characteristic_StudyEffectiveX_Duration); ok {
		return x.Duration
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic_StudyEffectiveX) GetTiming() *datatypes_go_proto.Timing {
	if x, ok := x.GetChoice().(*ResearchElementDefinition_Characteristic_StudyEffectiveX_Timing); ok {
		return x.Timing
	}
	return nil
}

type isResearchElementDefinition_Characteristic_StudyEffectiveX_Choice interface {
	isResearchElementDefinition_Characteristic_StudyEffectiveX_Choice()
}

type ResearchElementDefinition_Characteristic_StudyEffectiveX_DateTime struct {
	DateTime *datatypes_go_proto.DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type ResearchElementDefinition_Characteristic_StudyEffectiveX_Period struct {
	Period *datatypes_go_proto.Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

type ResearchElementDefinition_Characteristic_StudyEffectiveX_Duration struct {
	Duration *datatypes_go_proto.Duration `protobuf:"bytes,3,opt,name=duration,proto3,oneof"`
}

type ResearchElementDefinition_Characteristic_StudyEffectiveX_Timing struct {
	Timing *datatypes_go_proto.Timing `protobuf:"bytes,4,opt,name=timing,proto3,oneof"`
}

func (*ResearchElementDefinition_Characteristic_StudyEffectiveX_DateTime) isResearchElementDefinition_Characteristic_StudyEffectiveX_Choice() {
}

func (*ResearchElementDefinition_Characteristic_StudyEffectiveX_Period) isResearchElementDefinition_Characteristic_StudyEffectiveX_Choice() {
}

func (*ResearchElementDefinition_Characteristic_StudyEffectiveX_Duration) isResearchElementDefinition_Characteristic_StudyEffectiveX_Choice() {
}

func (*ResearchElementDefinition_Characteristic_StudyEffectiveX_Timing) isResearchElementDefinition_Characteristic_StudyEffectiveX_Choice() {
}

// mean | median | mean-of-mean | mean-of-median | median-of-mean |
// median-of-median
type ResearchElementDefinition_Characteristic_StudyEffectiveGroupMeasureCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.GroupMeasureCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.GroupMeasureCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension       `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *ResearchElementDefinition_Characteristic_StudyEffectiveGroupMeasureCode) Reset() {
	*x = ResearchElementDefinition_Characteristic_StudyEffectiveGroupMeasureCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResearchElementDefinition_Characteristic_StudyEffectiveGroupMeasureCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResearchElementDefinition_Characteristic_StudyEffectiveGroupMeasureCode) ProtoMessage() {}

func (x *ResearchElementDefinition_Characteristic_StudyEffectiveGroupMeasureCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResearchElementDefinition_Characteristic_StudyEffectiveGroupMeasureCode.ProtoReflect.Descriptor instead.
func (*ResearchElementDefinition_Characteristic_StudyEffectiveGroupMeasureCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescGZIP(), []int{0, 4, 2}
}

func (x *ResearchElementDefinition_Characteristic_StudyEffectiveGroupMeasureCode) GetValue() codes_go_proto.GroupMeasureCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.GroupMeasureCode_INVALID_UNINITIALIZED
}

func (x *ResearchElementDefinition_Characteristic_StudyEffectiveGroupMeasureCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic_StudyEffectiveGroupMeasureCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// What time period do participants cover
type ResearchElementDefinition_Characteristic_ParticipantEffectiveX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_DateTime
	//	*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_Period
	//	*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_Duration
	//	*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_Timing
	Choice isResearchElementDefinition_Characteristic_ParticipantEffectiveX_Choice `protobuf_oneof:"choice"`
}

func (x *ResearchElementDefinition_Characteristic_ParticipantEffectiveX) Reset() {
	*x = ResearchElementDefinition_Characteristic_ParticipantEffectiveX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResearchElementDefinition_Characteristic_ParticipantEffectiveX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResearchElementDefinition_Characteristic_ParticipantEffectiveX) ProtoMessage() {}

func (x *ResearchElementDefinition_Characteristic_ParticipantEffectiveX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResearchElementDefinition_Characteristic_ParticipantEffectiveX.ProtoReflect.Descriptor instead.
func (*ResearchElementDefinition_Characteristic_ParticipantEffectiveX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescGZIP(), []int{0, 4, 3}
}

func (m *ResearchElementDefinition_Characteristic_ParticipantEffectiveX) GetChoice() isResearchElementDefinition_Characteristic_ParticipantEffectiveX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic_ParticipantEffectiveX) GetDateTime() *datatypes_go_proto.DateTime {
	if x, ok := x.GetChoice().(*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic_ParticipantEffectiveX) GetPeriod() *datatypes_go_proto.Period {
	if x, ok := x.GetChoice().(*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_Period); ok {
		return x.Period
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic_ParticipantEffectiveX) GetDuration() *datatypes_go_proto.Duration {
	if x, ok := x.GetChoice().(*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_Duration); ok {
		return x.Duration
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic_ParticipantEffectiveX) GetTiming() *datatypes_go_proto.Timing {
	if x, ok := x.GetChoice().(*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_Timing); ok {
		return x.Timing
	}
	return nil
}

type isResearchElementDefinition_Characteristic_ParticipantEffectiveX_Choice interface {
	isResearchElementDefinition_Characteristic_ParticipantEffectiveX_Choice()
}

type ResearchElementDefinition_Characteristic_ParticipantEffectiveX_DateTime struct {
	DateTime *datatypes_go_proto.DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type ResearchElementDefinition_Characteristic_ParticipantEffectiveX_Period struct {
	Period *datatypes_go_proto.Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

type ResearchElementDefinition_Characteristic_ParticipantEffectiveX_Duration struct {
	Duration *datatypes_go_proto.Duration `protobuf:"bytes,3,opt,name=duration,proto3,oneof"`
}

type ResearchElementDefinition_Characteristic_ParticipantEffectiveX_Timing struct {
	Timing *datatypes_go_proto.Timing `protobuf:"bytes,4,opt,name=timing,proto3,oneof"`
}

func (*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_DateTime) isResearchElementDefinition_Characteristic_ParticipantEffectiveX_Choice() {
}

func (*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_Period) isResearchElementDefinition_Characteristic_ParticipantEffectiveX_Choice() {
}

func (*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_Duration) isResearchElementDefinition_Characteristic_ParticipantEffectiveX_Choice() {
}

func (*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_Timing) isResearchElementDefinition_Characteristic_ParticipantEffectiveX_Choice() {
}

// mean | median | mean-of-mean | mean-of-median | median-of-mean |
// median-of-median
type ResearchElementDefinition_Characteristic_ParticipantEffectiveGroupMeasureCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.GroupMeasureCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.GroupMeasureCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension       `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *ResearchElementDefinition_Characteristic_ParticipantEffectiveGroupMeasureCode) Reset() {
	*x = ResearchElementDefinition_Characteristic_ParticipantEffectiveGroupMeasureCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResearchElementDefinition_Characteristic_ParticipantEffectiveGroupMeasureCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResearchElementDefinition_Characteristic_ParticipantEffectiveGroupMeasureCode) ProtoMessage() {
}

func (x *ResearchElementDefinition_Characteristic_ParticipantEffectiveGroupMeasureCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResearchElementDefinition_Characteristic_ParticipantEffectiveGroupMeasureCode.ProtoReflect.Descriptor instead.
func (*ResearchElementDefinition_Characteristic_ParticipantEffectiveGroupMeasureCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescGZIP(), []int{0, 4, 4}
}

func (x *ResearchElementDefinition_Characteristic_ParticipantEffectiveGroupMeasureCode) GetValue() codes_go_proto.GroupMeasureCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.GroupMeasureCode_INVALID_UNINITIALIZED
}

func (x *ResearchElementDefinition_Characteristic_ParticipantEffectiveGroupMeasureCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ResearchElementDefinition_Characteristic_ParticipantEffectiveGroupMeasureCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

var File_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDesc = []byte{
	0x0a, 0x4b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x35, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0e,
	0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x69, 0x52, 0x0d,
	0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x35, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x69,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x3f, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x37, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08,
	0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x59, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x6c, 0x12, 0x51, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x58, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x19, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x48, 0x0a, 0x0c, 0x6a, 0x75, 0x72, 0x69, 0x73, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x0c, 0x6a, 0x75,
	0x72, 0x69, 0x73, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x75,
	0x72, 0x70, 0x6f, 0x73, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x07, 0x70, 0x75, 0x72, 0x70,
	0x6f, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x09, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x3e, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x43, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x44, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52,
	0x0f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x12, 0x3a, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x21, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x3a, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x22, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74,
	0x6f, 0x72, 0x18, 0x23, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x65, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x65, 0x72,
	0x18, 0x24, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x72,
	0x18, 0x25, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x73, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x18, 0x26, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74,
	0x69, 0x66, 0x61, 0x63, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x18, 0x27, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x61, 0x6e,
	0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x07, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12,
	0x53, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x64, 0x0a, 0x0d, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0c, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6d, 0x0a, 0x0e, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x2a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x1a, 0xae, 0x02, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x6d, 0xc0, 0x9f, 0xe3,
	0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0xbc, 0x01, 0x0a, 0x08, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x58, 0x12, 0x51, 0x0a, 0x10, 0x63, 0x6f, 0x64, 0x65, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f, 0x64, 0x65, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x12, 0x4b, 0x0a, 0x09, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x0b, 0xf2,
	0xff, 0xfc, 0xc2, 0x06, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x3a, 0x06, 0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x1a, 0xb1, 0x02, 0x0a, 0x08, 0x54, 0x79,
	0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x70, 0xc0, 0x9f, 0xe3,
	0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x32, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2d, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x9a, 0xb5, 0x8e, 0x93, 0x06,
	0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0xb2, 0x02,
	0x0a, 0x10, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x33, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x68, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01,
	0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x2a, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53,
	0x65, 0x74, 0x2f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f,
	0x64, 0x65, 0x1a, 0xeb, 0x17, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x71, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x58, 0x42, 0x06,
	0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x0d, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x0c, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x65, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x07, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70,
	0x74, 0x52, 0x0d, 0x75, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x12, 0x5b, 0x0a, 0x1b, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x19, 0x73, 0x74, 0x75, 0x64, 0x79, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a,
	0x0f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x58, 0x52, 0x0e, 0x73, 0x74, 0x75, 0x64, 0x79, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x63, 0x0a, 0x1f, 0x73, 0x74, 0x75, 0x64, 0x79, 0x5f, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1b, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x9f, 0x01, 0x0a, 0x1d, 0x73,
	0x74, 0x75, 0x64, 0x79, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x5c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x1a, 0x73, 0x74, 0x75, 0x64, 0x79, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x12, 0x67, 0x0a, 0x21,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x1f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x88, 0x01, 0x0a, 0x15, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x53, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x58, 0x52, 0x14, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x6f, 0x0a, 0x25, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x5f,
	0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x21,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x12, 0xb1, 0x01, 0x0a, 0x23, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x5f, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x62, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x20, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x1a, 0xc8, 0x02, 0x0a, 0x0b, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x58, 0x12, 0x51, 0x0a, 0x10, 0x63, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x63, 0x65, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x6f,
	0x6e, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x09, 0x63,
	0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x10, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x06,
	0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x1a, 0x8c, 0x02, 0x0a, 0x0f, 0x53, 0x74, 0x75, 0x64, 0x79, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x58, 0x12, 0x3c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x48,
	0x00, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x3a, 0x06, 0xa0,
	0x83, 0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x1a,
	0xb8, 0x02, 0x0a, 0x1e, 0x53, 0x74, 0x75, 0x64, 0x79, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x3a, 0x68, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x2a, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2d, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x92, 0x02, 0x0a, 0x15, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x58, 0x12, 0x3c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x48,
	0x00, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x69, 0x6d,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x3a, 0x06, 0xa0,
	0x83, 0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x1a,
	0xbe, 0x02, 0x0a, 0x24, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x45,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x68, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9,
	0x83, 0xb2, 0x05, 0x2a, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74,
	0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2d, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x9a, 0xb5,
	0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65,
	0x3a, 0x4d, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x03, 0xb2, 0xfe, 0xe4, 0x97, 0x06, 0x41, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x52, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4a,
	0x04, 0x08, 0x07, 0x10, 0x08, 0x42, 0x8b, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x50, 0x01, 0x5a, 0x68, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x98, 0xc6, 0xb0,
	0xb5, 0x07, 0x04, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescData = file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDesc
)

func file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDescData
}

var file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_goTypes = []interface{}{
	(*ResearchElementDefinition)(nil),                                                     // 0: google.fhir.r4.core.ResearchElementDefinition
	(*ResearchElementDefinition_StatusCode)(nil),                                          // 1: google.fhir.r4.core.ResearchElementDefinition.StatusCode
	(*ResearchElementDefinition_SubjectX)(nil),                                            // 2: google.fhir.r4.core.ResearchElementDefinition.SubjectX
	(*ResearchElementDefinition_TypeCode)(nil),                                            // 3: google.fhir.r4.core.ResearchElementDefinition.TypeCode
	(*ResearchElementDefinition_VariableTypeCode)(nil),                                    // 4: google.fhir.r4.core.ResearchElementDefinition.VariableTypeCode
	(*ResearchElementDefinition_Characteristic)(nil),                                      // 5: google.fhir.r4.core.ResearchElementDefinition.Characteristic
	(*ResearchElementDefinition_Characteristic_DefinitionX)(nil),                          // 6: google.fhir.r4.core.ResearchElementDefinition.Characteristic.DefinitionX
	(*ResearchElementDefinition_Characteristic_StudyEffectiveX)(nil),                      // 7: google.fhir.r4.core.ResearchElementDefinition.Characteristic.StudyEffectiveX
	(*ResearchElementDefinition_Characteristic_StudyEffectiveGroupMeasureCode)(nil),       // 8: google.fhir.r4.core.ResearchElementDefinition.Characteristic.StudyEffectiveGroupMeasureCode
	(*ResearchElementDefinition_Characteristic_ParticipantEffectiveX)(nil),                // 9: google.fhir.r4.core.ResearchElementDefinition.Characteristic.ParticipantEffectiveX
	(*ResearchElementDefinition_Characteristic_ParticipantEffectiveGroupMeasureCode)(nil), // 10: google.fhir.r4.core.ResearchElementDefinition.Characteristic.ParticipantEffectiveGroupMeasureCode
	(*datatypes_go_proto.Id)(nil),                                                         // 11: google.fhir.r4.core.Id
	(*datatypes_go_proto.Meta)(nil),                                                       // 12: google.fhir.r4.core.Meta
	(*datatypes_go_proto.Uri)(nil),                                                        // 13: google.fhir.r4.core.Uri
	(*datatypes_go_proto.Code)(nil),                                                       // 14: google.fhir.r4.core.Code
	(*datatypes_go_proto.Narrative)(nil),                                                  // 15: google.fhir.r4.core.Narrative
	(*any.Any)(nil),                                                                       // 16: google.protobuf.Any
	(*datatypes_go_proto.Extension)(nil),                                                  // 17: google.fhir.r4.core.Extension
	(*datatypes_go_proto.Identifier)(nil),                                                 // 18: google.fhir.r4.core.Identifier
	(*datatypes_go_proto.String)(nil),                                                     // 19: google.fhir.r4.core.String
	(*datatypes_go_proto.Boolean)(nil),                                                    // 20: google.fhir.r4.core.Boolean
	(*datatypes_go_proto.DateTime)(nil),                                                   // 21: google.fhir.r4.core.DateTime
	(*datatypes_go_proto.ContactDetail)(nil),                                              // 22: google.fhir.r4.core.ContactDetail
	(*datatypes_go_proto.Markdown)(nil),                                                   // 23: google.fhir.r4.core.Markdown
	(*datatypes_go_proto.UsageContext)(nil),                                               // 24: google.fhir.r4.core.UsageContext
	(*datatypes_go_proto.CodeableConcept)(nil),                                            // 25: google.fhir.r4.core.CodeableConcept
	(*datatypes_go_proto.Date)(nil),                                                       // 26: google.fhir.r4.core.Date
	(*datatypes_go_proto.Period)(nil),                                                     // 27: google.fhir.r4.core.Period
	(*datatypes_go_proto.RelatedArtifact)(nil),                                            // 28: google.fhir.r4.core.RelatedArtifact
	(*datatypes_go_proto.Canonical)(nil),                                                  // 29: google.fhir.r4.core.Canonical
	(codes_go_proto.PublicationStatusCode_Value)(0),                                       // 30: google.fhir.r4.core.PublicationStatusCode.Value
	(*datatypes_go_proto.Reference)(nil),                                                  // 31: google.fhir.r4.core.Reference
	(codes_go_proto.ResearchElementTypeCode_Value)(0),                                     // 32: google.fhir.r4.core.ResearchElementTypeCode.Value
	(codes_go_proto.EvidenceVariableTypeCode_Value)(0),                                    // 33: google.fhir.r4.core.EvidenceVariableTypeCode.Value
	(*datatypes_go_proto.Duration)(nil),                                                   // 34: google.fhir.r4.core.Duration
	(*datatypes_go_proto.Expression)(nil),                                                 // 35: google.fhir.r4.core.Expression
	(*datatypes_go_proto.DataRequirement)(nil),                                            // 36: google.fhir.r4.core.DataRequirement
	(*datatypes_go_proto.Timing)(nil),                                                     // 37: google.fhir.r4.core.Timing
	(codes_go_proto.GroupMeasureCode_Value)(0),                                            // 38: google.fhir.r4.core.GroupMeasureCode.Value
}
var file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_depIdxs = []int32{
	11, // 0: google.fhir.r4.core.ResearchElementDefinition.id:type_name -> google.fhir.r4.core.Id
	12, // 1: google.fhir.r4.core.ResearchElementDefinition.meta:type_name -> google.fhir.r4.core.Meta
	13, // 2: google.fhir.r4.core.ResearchElementDefinition.implicit_rules:type_name -> google.fhir.r4.core.Uri
	14, // 3: google.fhir.r4.core.ResearchElementDefinition.language:type_name -> google.fhir.r4.core.Code
	15, // 4: google.fhir.r4.core.ResearchElementDefinition.text:type_name -> google.fhir.r4.core.Narrative
	16, // 5: google.fhir.r4.core.ResearchElementDefinition.contained:type_name -> google.protobuf.Any
	17, // 6: google.fhir.r4.core.ResearchElementDefinition.extension:type_name -> google.fhir.r4.core.Extension
	17, // 7: google.fhir.r4.core.ResearchElementDefinition.modifier_extension:type_name -> google.fhir.r4.core.Extension
	13, // 8: google.fhir.r4.core.ResearchElementDefinition.url:type_name -> google.fhir.r4.core.Uri
	18, // 9: google.fhir.r4.core.ResearchElementDefinition.identifier:type_name -> google.fhir.r4.core.Identifier
	19, // 10: google.fhir.r4.core.ResearchElementDefinition.version:type_name -> google.fhir.r4.core.String
	19, // 11: google.fhir.r4.core.ResearchElementDefinition.name:type_name -> google.fhir.r4.core.String
	19, // 12: google.fhir.r4.core.ResearchElementDefinition.title:type_name -> google.fhir.r4.core.String
	19, // 13: google.fhir.r4.core.ResearchElementDefinition.short_title:type_name -> google.fhir.r4.core.String
	19, // 14: google.fhir.r4.core.ResearchElementDefinition.subtitle:type_name -> google.fhir.r4.core.String
	1,  // 15: google.fhir.r4.core.ResearchElementDefinition.status:type_name -> google.fhir.r4.core.ResearchElementDefinition.StatusCode
	20, // 16: google.fhir.r4.core.ResearchElementDefinition.experimental:type_name -> google.fhir.r4.core.Boolean
	2,  // 17: google.fhir.r4.core.ResearchElementDefinition.subject:type_name -> google.fhir.r4.core.ResearchElementDefinition.SubjectX
	21, // 18: google.fhir.r4.core.ResearchElementDefinition.date:type_name -> google.fhir.r4.core.DateTime
	19, // 19: google.fhir.r4.core.ResearchElementDefinition.publisher:type_name -> google.fhir.r4.core.String
	22, // 20: google.fhir.r4.core.ResearchElementDefinition.contact:type_name -> google.fhir.r4.core.ContactDetail
	23, // 21: google.fhir.r4.core.ResearchElementDefinition.description:type_name -> google.fhir.r4.core.Markdown
	19, // 22: google.fhir.r4.core.ResearchElementDefinition.comment:type_name -> google.fhir.r4.core.String
	24, // 23: google.fhir.r4.core.ResearchElementDefinition.use_context:type_name -> google.fhir.r4.core.UsageContext
	25, // 24: google.fhir.r4.core.ResearchElementDefinition.jurisdiction:type_name -> google.fhir.r4.core.CodeableConcept
	23, // 25: google.fhir.r4.core.ResearchElementDefinition.purpose:type_name -> google.fhir.r4.core.Markdown
	19, // 26: google.fhir.r4.core.ResearchElementDefinition.usage:type_name -> google.fhir.r4.core.String
	23, // 27: google.fhir.r4.core.ResearchElementDefinition.copyright:type_name -> google.fhir.r4.core.Markdown
	26, // 28: google.fhir.r4.core.ResearchElementDefinition.approval_date:type_name -> google.fhir.r4.core.Date
	26, // 29: google.fhir.r4.core.ResearchElementDefinition.last_review_date:type_name -> google.fhir.r4.core.Date
	27, // 30: google.fhir.r4.core.ResearchElementDefinition.effective_period:type_name -> google.fhir.r4.core.Period
	25, // 31: google.fhir.r4.core.ResearchElementDefinition.topic:type_name -> google.fhir.r4.core.CodeableConcept
	22, // 32: google.fhir.r4.core.ResearchElementDefinition.author:type_name -> google.fhir.r4.core.ContactDetail
	22, // 33: google.fhir.r4.core.ResearchElementDefinition.editor:type_name -> google.fhir.r4.core.ContactDetail
	22, // 34: google.fhir.r4.core.ResearchElementDefinition.reviewer:type_name -> google.fhir.r4.core.ContactDetail
	22, // 35: google.fhir.r4.core.ResearchElementDefinition.endorser:type_name -> google.fhir.r4.core.ContactDetail
	28, // 36: google.fhir.r4.core.ResearchElementDefinition.related_artifact:type_name -> google.fhir.r4.core.RelatedArtifact
	29, // 37: google.fhir.r4.core.ResearchElementDefinition.library:type_name -> google.fhir.r4.core.Canonical
	3,  // 38: google.fhir.r4.core.ResearchElementDefinition.type:type_name -> google.fhir.r4.core.ResearchElementDefinition.TypeCode
	4,  // 39: google.fhir.r4.core.ResearchElementDefinition.variable_type:type_name -> google.fhir.r4.core.ResearchElementDefinition.VariableTypeCode
	5,  // 40: google.fhir.r4.core.ResearchElementDefinition.characteristic:type_name -> google.fhir.r4.core.ResearchElementDefinition.Characteristic
	30, // 41: google.fhir.r4.core.ResearchElementDefinition.StatusCode.value:type_name -> google.fhir.r4.core.PublicationStatusCode.Value
	19, // 42: google.fhir.r4.core.ResearchElementDefinition.StatusCode.id:type_name -> google.fhir.r4.core.String
	17, // 43: google.fhir.r4.core.ResearchElementDefinition.StatusCode.extension:type_name -> google.fhir.r4.core.Extension
	25, // 44: google.fhir.r4.core.ResearchElementDefinition.SubjectX.codeable_concept:type_name -> google.fhir.r4.core.CodeableConcept
	31, // 45: google.fhir.r4.core.ResearchElementDefinition.SubjectX.reference:type_name -> google.fhir.r4.core.Reference
	32, // 46: google.fhir.r4.core.ResearchElementDefinition.TypeCode.value:type_name -> google.fhir.r4.core.ResearchElementTypeCode.Value
	19, // 47: google.fhir.r4.core.ResearchElementDefinition.TypeCode.id:type_name -> google.fhir.r4.core.String
	17, // 48: google.fhir.r4.core.ResearchElementDefinition.TypeCode.extension:type_name -> google.fhir.r4.core.Extension
	33, // 49: google.fhir.r4.core.ResearchElementDefinition.VariableTypeCode.value:type_name -> google.fhir.r4.core.EvidenceVariableTypeCode.Value
	19, // 50: google.fhir.r4.core.ResearchElementDefinition.VariableTypeCode.id:type_name -> google.fhir.r4.core.String
	17, // 51: google.fhir.r4.core.ResearchElementDefinition.VariableTypeCode.extension:type_name -> google.fhir.r4.core.Extension
	19, // 52: google.fhir.r4.core.ResearchElementDefinition.Characteristic.id:type_name -> google.fhir.r4.core.String
	17, // 53: google.fhir.r4.core.ResearchElementDefinition.Characteristic.extension:type_name -> google.fhir.r4.core.Extension
	17, // 54: google.fhir.r4.core.ResearchElementDefinition.Characteristic.modifier_extension:type_name -> google.fhir.r4.core.Extension
	6,  // 55: google.fhir.r4.core.ResearchElementDefinition.Characteristic.definition:type_name -> google.fhir.r4.core.ResearchElementDefinition.Characteristic.DefinitionX
	24, // 56: google.fhir.r4.core.ResearchElementDefinition.Characteristic.usage_context:type_name -> google.fhir.r4.core.UsageContext
	20, // 57: google.fhir.r4.core.ResearchElementDefinition.Characteristic.exclude:type_name -> google.fhir.r4.core.Boolean
	25, // 58: google.fhir.r4.core.ResearchElementDefinition.Characteristic.unit_of_measure:type_name -> google.fhir.r4.core.CodeableConcept
	19, // 59: google.fhir.r4.core.ResearchElementDefinition.Characteristic.study_effective_description:type_name -> google.fhir.r4.core.String
	7,  // 60: google.fhir.r4.core.ResearchElementDefinition.Characteristic.study_effective:type_name -> google.fhir.r4.core.ResearchElementDefinition.Characteristic.StudyEffectiveX
	34, // 61: google.fhir.r4.core.ResearchElementDefinition.Characteristic.study_effective_time_from_start:type_name -> google.fhir.r4.core.Duration
	8,  // 62: google.fhir.r4.core.ResearchElementDefinition.Characteristic.study_effective_group_measure:type_name -> google.fhir.r4.core.ResearchElementDefinition.Characteristic.StudyEffectiveGroupMeasureCode
	19, // 63: google.fhir.r4.core.ResearchElementDefinition.Characteristic.participant_effective_description:type_name -> google.fhir.r4.core.String
	9,  // 64: google.fhir.r4.core.ResearchElementDefinition.Characteristic.participant_effective:type_name -> google.fhir.r4.core.ResearchElementDefinition.Characteristic.ParticipantEffectiveX
	34, // 65: google.fhir.r4.core.ResearchElementDefinition.Characteristic.participant_effective_time_from_start:type_name -> google.fhir.r4.core.Duration
	10, // 66: google.fhir.r4.core.ResearchElementDefinition.Characteristic.participant_effective_group_measure:type_name -> google.fhir.r4.core.ResearchElementDefinition.Characteristic.ParticipantEffectiveGroupMeasureCode
	25, // 67: google.fhir.r4.core.ResearchElementDefinition.Characteristic.DefinitionX.codeable_concept:type_name -> google.fhir.r4.core.CodeableConcept
	29, // 68: google.fhir.r4.core.ResearchElementDefinition.Characteristic.DefinitionX.canonical:type_name -> google.fhir.r4.core.Canonical
	35, // 69: google.fhir.r4.core.ResearchElementDefinition.Characteristic.DefinitionX.expression:type_name -> google.fhir.r4.core.Expression
	36, // 70: google.fhir.r4.core.ResearchElementDefinition.Characteristic.DefinitionX.data_requirement:type_name -> google.fhir.r4.core.DataRequirement
	21, // 71: google.fhir.r4.core.ResearchElementDefinition.Characteristic.StudyEffectiveX.date_time:type_name -> google.fhir.r4.core.DateTime
	27, // 72: google.fhir.r4.core.ResearchElementDefinition.Characteristic.StudyEffectiveX.period:type_name -> google.fhir.r4.core.Period
	34, // 73: google.fhir.r4.core.ResearchElementDefinition.Characteristic.StudyEffectiveX.duration:type_name -> google.fhir.r4.core.Duration
	37, // 74: google.fhir.r4.core.ResearchElementDefinition.Characteristic.StudyEffectiveX.timing:type_name -> google.fhir.r4.core.Timing
	38, // 75: google.fhir.r4.core.ResearchElementDefinition.Characteristic.StudyEffectiveGroupMeasureCode.value:type_name -> google.fhir.r4.core.GroupMeasureCode.Value
	19, // 76: google.fhir.r4.core.ResearchElementDefinition.Characteristic.StudyEffectiveGroupMeasureCode.id:type_name -> google.fhir.r4.core.String
	17, // 77: google.fhir.r4.core.ResearchElementDefinition.Characteristic.StudyEffectiveGroupMeasureCode.extension:type_name -> google.fhir.r4.core.Extension
	21, // 78: google.fhir.r4.core.ResearchElementDefinition.Characteristic.ParticipantEffectiveX.date_time:type_name -> google.fhir.r4.core.DateTime
	27, // 79: google.fhir.r4.core.ResearchElementDefinition.Characteristic.ParticipantEffectiveX.period:type_name -> google.fhir.r4.core.Period
	34, // 80: google.fhir.r4.core.ResearchElementDefinition.Characteristic.ParticipantEffectiveX.duration:type_name -> google.fhir.r4.core.Duration
	37, // 81: google.fhir.r4.core.ResearchElementDefinition.Characteristic.ParticipantEffectiveX.timing:type_name -> google.fhir.r4.core.Timing
	38, // 82: google.fhir.r4.core.ResearchElementDefinition.Characteristic.ParticipantEffectiveGroupMeasureCode.value:type_name -> google.fhir.r4.core.GroupMeasureCode.Value
	19, // 83: google.fhir.r4.core.ResearchElementDefinition.Characteristic.ParticipantEffectiveGroupMeasureCode.id:type_name -> google.fhir.r4.core.String
	17, // 84: google.fhir.r4.core.ResearchElementDefinition.Characteristic.ParticipantEffectiveGroupMeasureCode.extension:type_name -> google.fhir.r4.core.Extension
	85, // [85:85] is the sub-list for method output_type
	85, // [85:85] is the sub-list for method input_type
	85, // [85:85] is the sub-list for extension type_name
	85, // [85:85] is the sub-list for extension extendee
	0,  // [0:85] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_init() }
func file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_init() {
	if File_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResearchElementDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResearchElementDefinition_StatusCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResearchElementDefinition_SubjectX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResearchElementDefinition_TypeCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResearchElementDefinition_VariableTypeCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResearchElementDefinition_Characteristic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResearchElementDefinition_Characteristic_DefinitionX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResearchElementDefinition_Characteristic_StudyEffectiveX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResearchElementDefinition_Characteristic_StudyEffectiveGroupMeasureCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResearchElementDefinition_Characteristic_ParticipantEffectiveX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResearchElementDefinition_Characteristic_ParticipantEffectiveGroupMeasureCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ResearchElementDefinition_SubjectX_CodeableConcept)(nil),
		(*ResearchElementDefinition_SubjectX_Reference)(nil),
	}
	file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ResearchElementDefinition_Characteristic_DefinitionX_CodeableConcept)(nil),
		(*ResearchElementDefinition_Characteristic_DefinitionX_Canonical)(nil),
		(*ResearchElementDefinition_Characteristic_DefinitionX_Expression)(nil),
		(*ResearchElementDefinition_Characteristic_DefinitionX_DataRequirement)(nil),
	}
	file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*ResearchElementDefinition_Characteristic_StudyEffectiveX_DateTime)(nil),
		(*ResearchElementDefinition_Characteristic_StudyEffectiveX_Period)(nil),
		(*ResearchElementDefinition_Characteristic_StudyEffectiveX_Duration)(nil),
		(*ResearchElementDefinition_Characteristic_StudyEffectiveX_Timing)(nil),
	}
	file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_DateTime)(nil),
		(*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_Period)(nil),
		(*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_Duration)(nil),
		(*ResearchElementDefinition_Characteristic_ParticipantEffectiveX_Timing)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_depIdxs,
		MessageInfos:      file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto = out.File
	file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_rawDesc = nil
	file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_goTypes = nil
	file_proto_google_fhir_proto_r4_core_resources_research_element_definition_proto_depIdxs = nil
}
