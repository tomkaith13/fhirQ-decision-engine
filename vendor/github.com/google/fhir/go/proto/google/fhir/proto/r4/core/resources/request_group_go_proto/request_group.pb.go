//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: proto/google/fhir/proto/r4/core/resources/request_group.proto

package request_group_go_proto

import (
	any "github.com/golang/protobuf/ptypes/any"
	_ "github.com/google/fhir/go/proto/google/fhir/proto/annotations_go_proto"
	codes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/codes_go_proto"
	datatypes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/datatypes_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Auto-generated from StructureDefinition for RequestGroup, last updated
// 2019-11-01T09:29:23.356+11:00. A group of related requests. See
// http://hl7.org/fhir/StructureDefinition/RequestGroup
type RequestGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Logical id of this artifact
	Id *datatypes_go_proto.Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *datatypes_go_proto.Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *datatypes_go_proto.Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *datatypes_go_proto.Code `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *datatypes_go_proto.Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*any.Any `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,8,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,9,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier
	Identifier []*datatypes_go_proto.Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Instantiates FHIR protocol or definition
	InstantiatesCanonical []*datatypes_go_proto.Canonical `protobuf:"bytes,11,rep,name=instantiates_canonical,json=instantiatesCanonical,proto3" json:"instantiates_canonical,omitempty"`
	// Instantiates external protocol or definition
	InstantiatesUri []*datatypes_go_proto.Uri `protobuf:"bytes,12,rep,name=instantiates_uri,json=instantiatesUri,proto3" json:"instantiates_uri,omitempty"`
	// Fulfills plan, proposal, or order
	BasedOn []*datatypes_go_proto.Reference `protobuf:"bytes,13,rep,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`
	// Request(s) replaced by this request
	Replaces []*datatypes_go_proto.Reference `protobuf:"bytes,14,rep,name=replaces,proto3" json:"replaces,omitempty"`
	// Composite request this is part of
	GroupIdentifier *datatypes_go_proto.Identifier `protobuf:"bytes,15,opt,name=group_identifier,json=groupIdentifier,proto3" json:"group_identifier,omitempty"`
	Status          *RequestGroup_StatusCode       `protobuf:"bytes,16,opt,name=status,proto3" json:"status,omitempty"`
	Intent          *RequestGroup_IntentCode       `protobuf:"bytes,17,opt,name=intent,proto3" json:"intent,omitempty"`
	Priority        *RequestGroup_PriorityCode     `protobuf:"bytes,18,opt,name=priority,proto3" json:"priority,omitempty"`
	// What's being requested/ordered
	Code *datatypes_go_proto.CodeableConcept `protobuf:"bytes,19,opt,name=code,proto3" json:"code,omitempty"`
	// Who the request group is about
	Subject *datatypes_go_proto.Reference `protobuf:"bytes,20,opt,name=subject,proto3" json:"subject,omitempty"`
	// Created as part of
	Encounter *datatypes_go_proto.Reference `protobuf:"bytes,21,opt,name=encounter,proto3" json:"encounter,omitempty"`
	// When the request group was authored
	AuthoredOn *datatypes_go_proto.DateTime `protobuf:"bytes,22,opt,name=authored_on,json=authoredOn,proto3" json:"authored_on,omitempty"`
	// Device or practitioner that authored the request group
	Author *datatypes_go_proto.Reference `protobuf:"bytes,23,opt,name=author,proto3" json:"author,omitempty"`
	// Why the request group is needed
	ReasonCode []*datatypes_go_proto.CodeableConcept `protobuf:"bytes,24,rep,name=reason_code,json=reasonCode,proto3" json:"reason_code,omitempty"`
	// Why the request group is needed
	ReasonReference []*datatypes_go_proto.Reference `protobuf:"bytes,25,rep,name=reason_reference,json=reasonReference,proto3" json:"reason_reference,omitempty"`
	// Additional notes about the response
	Note   []*datatypes_go_proto.Annotation `protobuf:"bytes,26,rep,name=note,proto3" json:"note,omitempty"`
	Action []*RequestGroup_Action           `protobuf:"bytes,27,rep,name=action,proto3" json:"action,omitempty"`
}

func (x *RequestGroup) Reset() {
	*x = RequestGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup) ProtoMessage() {}

func (x *RequestGroup) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup.ProtoReflect.Descriptor instead.
func (*RequestGroup) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0}
}

func (x *RequestGroup) GetId() *datatypes_go_proto.Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RequestGroup) GetMeta() *datatypes_go_proto.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *RequestGroup) GetImplicitRules() *datatypes_go_proto.Uri {
	if x != nil {
		return x.ImplicitRules
	}
	return nil
}

func (x *RequestGroup) GetLanguage() *datatypes_go_proto.Code {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *RequestGroup) GetText() *datatypes_go_proto.Narrative {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *RequestGroup) GetContained() []*any.Any {
	if x != nil {
		return x.Contained
	}
	return nil
}

func (x *RequestGroup) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *RequestGroup) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *RequestGroup) GetIdentifier() []*datatypes_go_proto.Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *RequestGroup) GetInstantiatesCanonical() []*datatypes_go_proto.Canonical {
	if x != nil {
		return x.InstantiatesCanonical
	}
	return nil
}

func (x *RequestGroup) GetInstantiatesUri() []*datatypes_go_proto.Uri {
	if x != nil {
		return x.InstantiatesUri
	}
	return nil
}

func (x *RequestGroup) GetBasedOn() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.BasedOn
	}
	return nil
}

func (x *RequestGroup) GetReplaces() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.Replaces
	}
	return nil
}

func (x *RequestGroup) GetGroupIdentifier() *datatypes_go_proto.Identifier {
	if x != nil {
		return x.GroupIdentifier
	}
	return nil
}

func (x *RequestGroup) GetStatus() *RequestGroup_StatusCode {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *RequestGroup) GetIntent() *RequestGroup_IntentCode {
	if x != nil {
		return x.Intent
	}
	return nil
}

func (x *RequestGroup) GetPriority() *RequestGroup_PriorityCode {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *RequestGroup) GetCode() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *RequestGroup) GetSubject() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *RequestGroup) GetEncounter() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Encounter
	}
	return nil
}

func (x *RequestGroup) GetAuthoredOn() *datatypes_go_proto.DateTime {
	if x != nil {
		return x.AuthoredOn
	}
	return nil
}

func (x *RequestGroup) GetAuthor() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *RequestGroup) GetReasonCode() []*datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.ReasonCode
	}
	return nil
}

func (x *RequestGroup) GetReasonReference() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.ReasonReference
	}
	return nil
}

func (x *RequestGroup) GetNote() []*datatypes_go_proto.Annotation {
	if x != nil {
		return x.Note
	}
	return nil
}

func (x *RequestGroup) GetAction() []*RequestGroup_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

// draft | active | on-hold | revoked | completed | entered-in-error | unknown
type RequestGroup_StatusCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.RequestStatusCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.RequestStatusCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String             `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension        `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *RequestGroup_StatusCode) Reset() {
	*x = RequestGroup_StatusCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_StatusCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_StatusCode) ProtoMessage() {}

func (x *RequestGroup_StatusCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_StatusCode.ProtoReflect.Descriptor instead.
func (*RequestGroup_StatusCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RequestGroup_StatusCode) GetValue() codes_go_proto.RequestStatusCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.RequestStatusCode_INVALID_UNINITIALIZED
}

func (x *RequestGroup_StatusCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RequestGroup_StatusCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// proposal | plan | directive | order | original-order | reflex-order |
// filler-order | instance-order | option
type RequestGroup_IntentCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.RequestIntentCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.RequestIntentCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String             `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension        `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *RequestGroup_IntentCode) Reset() {
	*x = RequestGroup_IntentCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_IntentCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_IntentCode) ProtoMessage() {}

func (x *RequestGroup_IntentCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_IntentCode.ProtoReflect.Descriptor instead.
func (*RequestGroup_IntentCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 1}
}

func (x *RequestGroup_IntentCode) GetValue() codes_go_proto.RequestIntentCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.RequestIntentCode_INVALID_UNINITIALIZED
}

func (x *RequestGroup_IntentCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RequestGroup_IntentCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// routine | urgent | asap | stat
type RequestGroup_PriorityCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.RequestPriorityCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.RequestPriorityCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension          `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *RequestGroup_PriorityCode) Reset() {
	*x = RequestGroup_PriorityCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_PriorityCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_PriorityCode) ProtoMessage() {}

func (x *RequestGroup_PriorityCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_PriorityCode.ProtoReflect.Descriptor instead.
func (*RequestGroup_PriorityCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 2}
}

func (x *RequestGroup_PriorityCode) GetValue() codes_go_proto.RequestPriorityCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.RequestPriorityCode_INVALID_UNINITIALIZED
}

func (x *RequestGroup_PriorityCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RequestGroup_PriorityCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// Proposed actions, if any
type RequestGroup_Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// User-visible prefix for the action (e.g. 1. or A.)
	Prefix *datatypes_go_proto.String `protobuf:"bytes,4,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// User-visible title
	Title *datatypes_go_proto.String `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// Short description of the action
	Description *datatypes_go_proto.String `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// Static text equivalent of the action, used if the dynamic aspects cannot
	// be interpreted by the receiving system
	TextEquivalent *datatypes_go_proto.String        `protobuf:"bytes,7,opt,name=text_equivalent,json=textEquivalent,proto3" json:"text_equivalent,omitempty"`
	Priority       *RequestGroup_Action_PriorityCode `protobuf:"bytes,8,opt,name=priority,proto3" json:"priority,omitempty"`
	// Code representing the meaning of the action or sub-actions
	Code []*datatypes_go_proto.CodeableConcept `protobuf:"bytes,9,rep,name=code,proto3" json:"code,omitempty"`
	// Supporting documentation for the intended performer of the action
	Documentation []*datatypes_go_proto.RelatedArtifact `protobuf:"bytes,10,rep,name=documentation,proto3" json:"documentation,omitempty"`
	Condition     []*RequestGroup_Action_Condition      `protobuf:"bytes,11,rep,name=condition,proto3" json:"condition,omitempty"`
	RelatedAction []*RequestGroup_Action_RelatedAction  `protobuf:"bytes,12,rep,name=related_action,json=relatedAction,proto3" json:"related_action,omitempty"`
	Timing        *RequestGroup_Action_TimingX          `protobuf:"bytes,13,opt,name=timing,proto3" json:"timing,omitempty"`
	// Who should perform the action
	Participant []*datatypes_go_proto.Reference `protobuf:"bytes,14,rep,name=participant,proto3" json:"participant,omitempty"`
	// create | update | remove | fire-event
	Type                *datatypes_go_proto.CodeableConcept          `protobuf:"bytes,15,opt,name=type,proto3" json:"type,omitempty"`
	GroupingBehavior    *RequestGroup_Action_GroupingBehaviorCode    `protobuf:"bytes,16,opt,name=grouping_behavior,json=groupingBehavior,proto3" json:"grouping_behavior,omitempty"`
	SelectionBehavior   *RequestGroup_Action_SelectionBehaviorCode   `protobuf:"bytes,17,opt,name=selection_behavior,json=selectionBehavior,proto3" json:"selection_behavior,omitempty"`
	RequiredBehavior    *RequestGroup_Action_RequiredBehaviorCode    `protobuf:"bytes,18,opt,name=required_behavior,json=requiredBehavior,proto3" json:"required_behavior,omitempty"`
	PrecheckBehavior    *RequestGroup_Action_PrecheckBehaviorCode    `protobuf:"bytes,19,opt,name=precheck_behavior,json=precheckBehavior,proto3" json:"precheck_behavior,omitempty"`
	CardinalityBehavior *RequestGroup_Action_CardinalityBehaviorCode `protobuf:"bytes,20,opt,name=cardinality_behavior,json=cardinalityBehavior,proto3" json:"cardinality_behavior,omitempty"`
	// The target of the action
	Resource *datatypes_go_proto.Reference `protobuf:"bytes,21,opt,name=resource,proto3" json:"resource,omitempty"`
	// Sub action
	Action []*RequestGroup_Action `protobuf:"bytes,22,rep,name=action,proto3" json:"action,omitempty"`
}

func (x *RequestGroup_Action) Reset() {
	*x = RequestGroup_Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_Action) ProtoMessage() {}

func (x *RequestGroup_Action) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_Action.ProtoReflect.Descriptor instead.
func (*RequestGroup_Action) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 3}
}

func (x *RequestGroup_Action) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RequestGroup_Action) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *RequestGroup_Action) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *RequestGroup_Action) GetPrefix() *datatypes_go_proto.String {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (x *RequestGroup_Action) GetTitle() *datatypes_go_proto.String {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *RequestGroup_Action) GetDescription() *datatypes_go_proto.String {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *RequestGroup_Action) GetTextEquivalent() *datatypes_go_proto.String {
	if x != nil {
		return x.TextEquivalent
	}
	return nil
}

func (x *RequestGroup_Action) GetPriority() *RequestGroup_Action_PriorityCode {
	if x != nil {
		return x.Priority
	}
	return nil
}

func (x *RequestGroup_Action) GetCode() []*datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *RequestGroup_Action) GetDocumentation() []*datatypes_go_proto.RelatedArtifact {
	if x != nil {
		return x.Documentation
	}
	return nil
}

func (x *RequestGroup_Action) GetCondition() []*RequestGroup_Action_Condition {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *RequestGroup_Action) GetRelatedAction() []*RequestGroup_Action_RelatedAction {
	if x != nil {
		return x.RelatedAction
	}
	return nil
}

func (x *RequestGroup_Action) GetTiming() *RequestGroup_Action_TimingX {
	if x != nil {
		return x.Timing
	}
	return nil
}

func (x *RequestGroup_Action) GetParticipant() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.Participant
	}
	return nil
}

func (x *RequestGroup_Action) GetType() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *RequestGroup_Action) GetGroupingBehavior() *RequestGroup_Action_GroupingBehaviorCode {
	if x != nil {
		return x.GroupingBehavior
	}
	return nil
}

func (x *RequestGroup_Action) GetSelectionBehavior() *RequestGroup_Action_SelectionBehaviorCode {
	if x != nil {
		return x.SelectionBehavior
	}
	return nil
}

func (x *RequestGroup_Action) GetRequiredBehavior() *RequestGroup_Action_RequiredBehaviorCode {
	if x != nil {
		return x.RequiredBehavior
	}
	return nil
}

func (x *RequestGroup_Action) GetPrecheckBehavior() *RequestGroup_Action_PrecheckBehaviorCode {
	if x != nil {
		return x.PrecheckBehavior
	}
	return nil
}

func (x *RequestGroup_Action) GetCardinalityBehavior() *RequestGroup_Action_CardinalityBehaviorCode {
	if x != nil {
		return x.CardinalityBehavior
	}
	return nil
}

func (x *RequestGroup_Action) GetResource() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *RequestGroup_Action) GetAction() []*RequestGroup_Action {
	if x != nil {
		return x.Action
	}
	return nil
}

// routine | urgent | asap | stat
type RequestGroup_Action_PriorityCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.RequestPriorityCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.RequestPriorityCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension          `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *RequestGroup_Action_PriorityCode) Reset() {
	*x = RequestGroup_Action_PriorityCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_Action_PriorityCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_Action_PriorityCode) ProtoMessage() {}

func (x *RequestGroup_Action_PriorityCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_Action_PriorityCode.ProtoReflect.Descriptor instead.
func (*RequestGroup_Action_PriorityCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *RequestGroup_Action_PriorityCode) GetValue() codes_go_proto.RequestPriorityCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.RequestPriorityCode_INVALID_UNINITIALIZED
}

func (x *RequestGroup_Action_PriorityCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RequestGroup_Action_PriorityCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// Whether or not the action is applicable
type RequestGroup_Action_Condition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension         `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	Kind              *RequestGroup_Action_Condition_KindCode `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"`
	// Boolean-valued expression
	Expression *datatypes_go_proto.Expression `protobuf:"bytes,5,opt,name=expression,proto3" json:"expression,omitempty"`
}

func (x *RequestGroup_Action_Condition) Reset() {
	*x = RequestGroup_Action_Condition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_Action_Condition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_Action_Condition) ProtoMessage() {}

func (x *RequestGroup_Action_Condition) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_Action_Condition.ProtoReflect.Descriptor instead.
func (*RequestGroup_Action_Condition) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 3, 1}
}

func (x *RequestGroup_Action_Condition) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RequestGroup_Action_Condition) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *RequestGroup_Action_Condition) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *RequestGroup_Action_Condition) GetKind() *RequestGroup_Action_Condition_KindCode {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *RequestGroup_Action_Condition) GetExpression() *datatypes_go_proto.Expression {
	if x != nil {
		return x.Expression
	}
	return nil
}

// Relationship to another action
type RequestGroup_Action_RelatedAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// What action this is related to
	ActionId     *datatypes_go_proto.Id                              `protobuf:"bytes,4,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	Relationship *RequestGroup_Action_RelatedAction_RelationshipCode `protobuf:"bytes,5,opt,name=relationship,proto3" json:"relationship,omitempty"`
	Offset       *RequestGroup_Action_RelatedAction_OffsetX          `protobuf:"bytes,6,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *RequestGroup_Action_RelatedAction) Reset() {
	*x = RequestGroup_Action_RelatedAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_Action_RelatedAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_Action_RelatedAction) ProtoMessage() {}

func (x *RequestGroup_Action_RelatedAction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_Action_RelatedAction.ProtoReflect.Descriptor instead.
func (*RequestGroup_Action_RelatedAction) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 3, 2}
}

func (x *RequestGroup_Action_RelatedAction) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RequestGroup_Action_RelatedAction) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *RequestGroup_Action_RelatedAction) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *RequestGroup_Action_RelatedAction) GetActionId() *datatypes_go_proto.Id {
	if x != nil {
		return x.ActionId
	}
	return nil
}

func (x *RequestGroup_Action_RelatedAction) GetRelationship() *RequestGroup_Action_RelatedAction_RelationshipCode {
	if x != nil {
		return x.Relationship
	}
	return nil
}

func (x *RequestGroup_Action_RelatedAction) GetOffset() *RequestGroup_Action_RelatedAction_OffsetX {
	if x != nil {
		return x.Offset
	}
	return nil
}

// When the action should take place
type RequestGroup_Action_TimingX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*RequestGroup_Action_TimingX_DateTime
	//	*RequestGroup_Action_TimingX_Age
	//	*RequestGroup_Action_TimingX_Period
	//	*RequestGroup_Action_TimingX_Duration
	//	*RequestGroup_Action_TimingX_Range
	//	*RequestGroup_Action_TimingX_Timing
	Choice isRequestGroup_Action_TimingX_Choice `protobuf_oneof:"choice"`
}

func (x *RequestGroup_Action_TimingX) Reset() {
	*x = RequestGroup_Action_TimingX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_Action_TimingX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_Action_TimingX) ProtoMessage() {}

func (x *RequestGroup_Action_TimingX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_Action_TimingX.ProtoReflect.Descriptor instead.
func (*RequestGroup_Action_TimingX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 3, 3}
}

func (m *RequestGroup_Action_TimingX) GetChoice() isRequestGroup_Action_TimingX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *RequestGroup_Action_TimingX) GetDateTime() *datatypes_go_proto.DateTime {
	if x, ok := x.GetChoice().(*RequestGroup_Action_TimingX_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (x *RequestGroup_Action_TimingX) GetAge() *datatypes_go_proto.Age {
	if x, ok := x.GetChoice().(*RequestGroup_Action_TimingX_Age); ok {
		return x.Age
	}
	return nil
}

func (x *RequestGroup_Action_TimingX) GetPeriod() *datatypes_go_proto.Period {
	if x, ok := x.GetChoice().(*RequestGroup_Action_TimingX_Period); ok {
		return x.Period
	}
	return nil
}

func (x *RequestGroup_Action_TimingX) GetDuration() *datatypes_go_proto.Duration {
	if x, ok := x.GetChoice().(*RequestGroup_Action_TimingX_Duration); ok {
		return x.Duration
	}
	return nil
}

func (x *RequestGroup_Action_TimingX) GetRange() *datatypes_go_proto.Range {
	if x, ok := x.GetChoice().(*RequestGroup_Action_TimingX_Range); ok {
		return x.Range
	}
	return nil
}

func (x *RequestGroup_Action_TimingX) GetTiming() *datatypes_go_proto.Timing {
	if x, ok := x.GetChoice().(*RequestGroup_Action_TimingX_Timing); ok {
		return x.Timing
	}
	return nil
}

type isRequestGroup_Action_TimingX_Choice interface {
	isRequestGroup_Action_TimingX_Choice()
}

type RequestGroup_Action_TimingX_DateTime struct {
	DateTime *datatypes_go_proto.DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type RequestGroup_Action_TimingX_Age struct {
	Age *datatypes_go_proto.Age `protobuf:"bytes,2,opt,name=age,proto3,oneof"`
}

type RequestGroup_Action_TimingX_Period struct {
	Period *datatypes_go_proto.Period `protobuf:"bytes,3,opt,name=period,proto3,oneof"`
}

type RequestGroup_Action_TimingX_Duration struct {
	Duration *datatypes_go_proto.Duration `protobuf:"bytes,4,opt,name=duration,proto3,oneof"`
}

type RequestGroup_Action_TimingX_Range struct {
	Range *datatypes_go_proto.Range `protobuf:"bytes,5,opt,name=range,proto3,oneof"`
}

type RequestGroup_Action_TimingX_Timing struct {
	Timing *datatypes_go_proto.Timing `protobuf:"bytes,6,opt,name=timing,proto3,oneof"`
}

func (*RequestGroup_Action_TimingX_DateTime) isRequestGroup_Action_TimingX_Choice() {}

func (*RequestGroup_Action_TimingX_Age) isRequestGroup_Action_TimingX_Choice() {}

func (*RequestGroup_Action_TimingX_Period) isRequestGroup_Action_TimingX_Choice() {}

func (*RequestGroup_Action_TimingX_Duration) isRequestGroup_Action_TimingX_Choice() {}

func (*RequestGroup_Action_TimingX_Range) isRequestGroup_Action_TimingX_Choice() {}

func (*RequestGroup_Action_TimingX_Timing) isRequestGroup_Action_TimingX_Choice() {}

// visual-group | logical-group | sentence-group
type RequestGroup_Action_GroupingBehaviorCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.ActionGroupingBehaviorCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.ActionGroupingBehaviorCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension                 `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *RequestGroup_Action_GroupingBehaviorCode) Reset() {
	*x = RequestGroup_Action_GroupingBehaviorCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_Action_GroupingBehaviorCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_Action_GroupingBehaviorCode) ProtoMessage() {}

func (x *RequestGroup_Action_GroupingBehaviorCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_Action_GroupingBehaviorCode.ProtoReflect.Descriptor instead.
func (*RequestGroup_Action_GroupingBehaviorCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 3, 4}
}

func (x *RequestGroup_Action_GroupingBehaviorCode) GetValue() codes_go_proto.ActionGroupingBehaviorCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.ActionGroupingBehaviorCode_INVALID_UNINITIALIZED
}

func (x *RequestGroup_Action_GroupingBehaviorCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RequestGroup_Action_GroupingBehaviorCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// any | all | all-or-none | exactly-one | at-most-one | one-or-more
type RequestGroup_Action_SelectionBehaviorCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.ActionSelectionBehaviorCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.ActionSelectionBehaviorCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension                  `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *RequestGroup_Action_SelectionBehaviorCode) Reset() {
	*x = RequestGroup_Action_SelectionBehaviorCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_Action_SelectionBehaviorCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_Action_SelectionBehaviorCode) ProtoMessage() {}

func (x *RequestGroup_Action_SelectionBehaviorCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_Action_SelectionBehaviorCode.ProtoReflect.Descriptor instead.
func (*RequestGroup_Action_SelectionBehaviorCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 3, 5}
}

func (x *RequestGroup_Action_SelectionBehaviorCode) GetValue() codes_go_proto.ActionSelectionBehaviorCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.ActionSelectionBehaviorCode_INVALID_UNINITIALIZED
}

func (x *RequestGroup_Action_SelectionBehaviorCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RequestGroup_Action_SelectionBehaviorCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// must | could | must-unless-documented
type RequestGroup_Action_RequiredBehaviorCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.ActionRequiredBehaviorCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.ActionRequiredBehaviorCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension                 `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *RequestGroup_Action_RequiredBehaviorCode) Reset() {
	*x = RequestGroup_Action_RequiredBehaviorCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_Action_RequiredBehaviorCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_Action_RequiredBehaviorCode) ProtoMessage() {}

func (x *RequestGroup_Action_RequiredBehaviorCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_Action_RequiredBehaviorCode.ProtoReflect.Descriptor instead.
func (*RequestGroup_Action_RequiredBehaviorCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 3, 6}
}

func (x *RequestGroup_Action_RequiredBehaviorCode) GetValue() codes_go_proto.ActionRequiredBehaviorCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.ActionRequiredBehaviorCode_INVALID_UNINITIALIZED
}

func (x *RequestGroup_Action_RequiredBehaviorCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RequestGroup_Action_RequiredBehaviorCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// yes | no
type RequestGroup_Action_PrecheckBehaviorCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.ActionPrecheckBehaviorCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.ActionPrecheckBehaviorCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension                 `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *RequestGroup_Action_PrecheckBehaviorCode) Reset() {
	*x = RequestGroup_Action_PrecheckBehaviorCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_Action_PrecheckBehaviorCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_Action_PrecheckBehaviorCode) ProtoMessage() {}

func (x *RequestGroup_Action_PrecheckBehaviorCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_Action_PrecheckBehaviorCode.ProtoReflect.Descriptor instead.
func (*RequestGroup_Action_PrecheckBehaviorCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 3, 7}
}

func (x *RequestGroup_Action_PrecheckBehaviorCode) GetValue() codes_go_proto.ActionPrecheckBehaviorCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.ActionPrecheckBehaviorCode_INVALID_UNINITIALIZED
}

func (x *RequestGroup_Action_PrecheckBehaviorCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RequestGroup_Action_PrecheckBehaviorCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// single | multiple
type RequestGroup_Action_CardinalityBehaviorCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.ActionCardinalityBehaviorCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.ActionCardinalityBehaviorCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                         `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension                    `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *RequestGroup_Action_CardinalityBehaviorCode) Reset() {
	*x = RequestGroup_Action_CardinalityBehaviorCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_Action_CardinalityBehaviorCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_Action_CardinalityBehaviorCode) ProtoMessage() {}

func (x *RequestGroup_Action_CardinalityBehaviorCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_Action_CardinalityBehaviorCode.ProtoReflect.Descriptor instead.
func (*RequestGroup_Action_CardinalityBehaviorCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 3, 8}
}

func (x *RequestGroup_Action_CardinalityBehaviorCode) GetValue() codes_go_proto.ActionCardinalityBehaviorCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.ActionCardinalityBehaviorCode_INVALID_UNINITIALIZED
}

func (x *RequestGroup_Action_CardinalityBehaviorCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RequestGroup_Action_CardinalityBehaviorCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// applicability | start | stop
type RequestGroup_Action_Condition_KindCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.ActionConditionKindCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.ActionConditionKindCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension              `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *RequestGroup_Action_Condition_KindCode) Reset() {
	*x = RequestGroup_Action_Condition_KindCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_Action_Condition_KindCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_Action_Condition_KindCode) ProtoMessage() {}

func (x *RequestGroup_Action_Condition_KindCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_Action_Condition_KindCode.ProtoReflect.Descriptor instead.
func (*RequestGroup_Action_Condition_KindCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 3, 1, 0}
}

func (x *RequestGroup_Action_Condition_KindCode) GetValue() codes_go_proto.ActionConditionKindCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.ActionConditionKindCode_INVALID_UNINITIALIZED
}

func (x *RequestGroup_Action_Condition_KindCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RequestGroup_Action_Condition_KindCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// before-start | before | before-end | concurrent-with-start | concurrent
// | concurrent-with-end | after-start | after | after-end
type RequestGroup_Action_RelatedAction_RelationshipCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.ActionRelationshipTypeCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.ActionRelationshipTypeCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension                 `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *RequestGroup_Action_RelatedAction_RelationshipCode) Reset() {
	*x = RequestGroup_Action_RelatedAction_RelationshipCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_Action_RelatedAction_RelationshipCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_Action_RelatedAction_RelationshipCode) ProtoMessage() {}

func (x *RequestGroup_Action_RelatedAction_RelationshipCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_Action_RelatedAction_RelationshipCode.ProtoReflect.Descriptor instead.
func (*RequestGroup_Action_RelatedAction_RelationshipCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 3, 2, 0}
}

func (x *RequestGroup_Action_RelatedAction_RelationshipCode) GetValue() codes_go_proto.ActionRelationshipTypeCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.ActionRelationshipTypeCode_INVALID_UNINITIALIZED
}

func (x *RequestGroup_Action_RelatedAction_RelationshipCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *RequestGroup_Action_RelatedAction_RelationshipCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// Time offset for the relationship
type RequestGroup_Action_RelatedAction_OffsetX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*RequestGroup_Action_RelatedAction_OffsetX_Duration
	//	*RequestGroup_Action_RelatedAction_OffsetX_Range
	Choice isRequestGroup_Action_RelatedAction_OffsetX_Choice `protobuf_oneof:"choice"`
}

func (x *RequestGroup_Action_RelatedAction_OffsetX) Reset() {
	*x = RequestGroup_Action_RelatedAction_OffsetX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGroup_Action_RelatedAction_OffsetX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGroup_Action_RelatedAction_OffsetX) ProtoMessage() {}

func (x *RequestGroup_Action_RelatedAction_OffsetX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGroup_Action_RelatedAction_OffsetX.ProtoReflect.Descriptor instead.
func (*RequestGroup_Action_RelatedAction_OffsetX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP(), []int{0, 3, 2, 1}
}

func (m *RequestGroup_Action_RelatedAction_OffsetX) GetChoice() isRequestGroup_Action_RelatedAction_OffsetX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *RequestGroup_Action_RelatedAction_OffsetX) GetDuration() *datatypes_go_proto.Duration {
	if x, ok := x.GetChoice().(*RequestGroup_Action_RelatedAction_OffsetX_Duration); ok {
		return x.Duration
	}
	return nil
}

func (x *RequestGroup_Action_RelatedAction_OffsetX) GetRange() *datatypes_go_proto.Range {
	if x, ok := x.GetChoice().(*RequestGroup_Action_RelatedAction_OffsetX_Range); ok {
		return x.Range
	}
	return nil
}

type isRequestGroup_Action_RelatedAction_OffsetX_Choice interface {
	isRequestGroup_Action_RelatedAction_OffsetX_Choice()
}

type RequestGroup_Action_RelatedAction_OffsetX_Duration struct {
	Duration *datatypes_go_proto.Duration `protobuf:"bytes,1,opt,name=duration,proto3,oneof"`
}

type RequestGroup_Action_RelatedAction_OffsetX_Range struct {
	Range *datatypes_go_proto.Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

func (*RequestGroup_Action_RelatedAction_OffsetX_Duration) isRequestGroup_Action_RelatedAction_OffsetX_Choice() {
}

func (*RequestGroup_Action_RelatedAction_OffsetX_Range) isRequestGroup_Action_RelatedAction_OffsetX_Choice() {
}

var File_proto_google_fhir_proto_r4_core_resources_request_group_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x13, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x43, 0x0a, 0x0c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x12, 0x3f, 0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x55, 0x72, 0x69, 0x52, 0x0d, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x61,
	0x72, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x32, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x55, 0x0a, 0x16, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x73, 0x5f,
	0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x52,
	0x15, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x73, 0x43, 0x61, 0x6e,
	0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x43, 0x0a, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x74, 0x69, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x69, 0x52, 0x0f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x74, 0x69, 0x61, 0x74, 0x65, 0x73, 0x55, 0x72, 0x69, 0x12, 0x49, 0x0a, 0x08, 0x62,
	0x61, 0x73, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x0e, 0xf2,
	0xff, 0xfc, 0xc2, 0x06, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x62,
	0x61, 0x73, 0x65, 0x64, 0x4f, 0x6e, 0x12, 0x4a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x0e, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x08,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x63,
	0x65, 0x73, 0x12, 0x4a, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x4c,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xf0, 0xd0,
	0x87, 0xeb, 0x04, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a, 0x06,
	0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb,
	0x04, 0x01, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x52, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x42, 0x18, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x07, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74,
	0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x4d, 0x0a, 0x09, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x0f, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x09, 0x45,
	0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x09, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x65, 0x64, 0x5f,
	0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x65,
	0x64, 0x4f, 0x6e, 0x12, 0x6c, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x42, 0x34, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0c, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x65, 0x72, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x10, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x45, 0x0a, 0x0b, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x0a, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x98, 0x01, 0x0a, 0x10, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x19, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x42, 0x4d, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0b, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x10, 0x44, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0xf2, 0xff, 0xfc, 0xc2, 0x06,
	0x11, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x1a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xa6, 0x02, 0x0a, 0x0a, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x69, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01,
	0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x2b, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37,
	0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53,
	0x65, 0x74, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63,
	0x6f, 0x64, 0x65, 0x1a, 0xa6, 0x02, 0x0a, 0x0a, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x3a, 0x69, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x2b, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0xac, 0x02, 0x0a,
	0x0c, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x44, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x6b,
	0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x2d, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2d, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0xf8, 0x2c, 0x0a, 0x06,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x33, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0f, 0x74, 0x65, 0x78, 0x74, 0x5f,
	0x65, 0x71, 0x75, 0x69, 0x76, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x74,
	0x65, 0x78, 0x74, 0x45, 0x71, 0x75, 0x69, 0x76, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x12, 0x51, 0x0a,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x38, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x63, 0x65, 0x70, 0x74, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x58, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x12, 0x96, 0x01, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x54, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x07, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0c, 0x50, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x10, 0x50, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0xf2, 0xff,
	0xfc, 0xc2, 0x06, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0b, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x6a, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69,
	0x6e, 0x67, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x10,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x12, 0x6d, 0x0a, 0x12, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x11, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12,
	0x6a, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x6a, 0x0a, 0x11, 0x70,
	0x72, 0x65, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x50, 0x72, 0x65, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x70, 0x72, 0x65, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x42,
	0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x73, 0x0a, 0x14, 0x63, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x13, 0x63, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x0e,
	0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xac, 0x02, 0x0a, 0x0c, 0x50,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x44, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c,
	0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x6b, 0xc0, 0x9f,
	0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x2d, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2d, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x93, 0x05, 0x0a, 0x09, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x57, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4b, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xf0, 0xd0,
	0x87, 0xeb, 0x04, 0x01, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0xb1, 0x02, 0x0a, 0x08,
	0x4b, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x69, 0x6e,
	0x64, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x70, 0xc0,
	0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x32, 0x68, 0x74, 0x74, 0x70, 0x3a,
	0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x6b, 0x69, 0x6e, 0x64, 0x9a, 0xb5, 0x8e,
	0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a,
	0xa5, 0x07, 0x0a, 0x0d, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c,
	0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x09, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52,
	0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x73, 0x0a, 0x0c, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x47, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01,
	0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x56,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x58, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x1a, 0xbf, 0x02, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x3a, 0x73, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05,
	0x35, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f,
	0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70,
	0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x8c, 0x01, 0x0a, 0x07, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x58, 0x12, 0x3b, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x32, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x3a, 0x06, 0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x1a, 0xe6, 0x02, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x58, 0x12, 0x3c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x48, 0x00, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12,
	0x35, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x06,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x69,
	0x6d, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x3a, 0x06,
	0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x1a, 0xc3, 0x02, 0x0a, 0x14, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x3a, 0x73, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x35, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x6e, 0x67, 0x2d, 0x62, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0xc6, 0x02, 0x0a, 0x15, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x4c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x74, 0xc0, 0x9f, 0xe3, 0xb6, 0x05,
	0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x36, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x65, 0x74, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x9a, 0xb5, 0x8e,
	0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a,
	0xc3, 0x02, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x42, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x3a, 0x73, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x35, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x2d, 0x62, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0xc3, 0x02, 0x0a, 0x14, 0x50, 0x72, 0x65, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4b,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x73, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9,
	0x83, 0xb2, 0x05, 0x35, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74,
	0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x70, 0x72, 0x65, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x2d, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68,
	0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0xcc, 0x02, 0x0a, 0x17,
	0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x3a, 0x76, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2, 0x05, 0x38,
	0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2d, 0x63, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x2d,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74,
	0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x3a, 0x2a, 0x9a, 0x86, 0x93, 0xa0,
	0x08, 0x24, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x28, 0x29, 0x20, 0x21, 0x3d, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x3a, 0x40, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x03, 0xb2, 0xfe,
	0xe4, 0x97, 0x06, 0x34, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x42, 0x7d,
	0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x01, 0x5a, 0x5a, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72,
	0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x67,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x98, 0xc6, 0xb0, 0xb5, 0x07, 0x04, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescData = file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDesc
)

func file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDescData
}

var file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_google_fhir_proto_r4_core_resources_request_group_proto_goTypes = []interface{}{
	(*RequestGroup)(nil),                                       // 0: google.fhir.r4.core.RequestGroup
	(*RequestGroup_StatusCode)(nil),                            // 1: google.fhir.r4.core.RequestGroup.StatusCode
	(*RequestGroup_IntentCode)(nil),                            // 2: google.fhir.r4.core.RequestGroup.IntentCode
	(*RequestGroup_PriorityCode)(nil),                          // 3: google.fhir.r4.core.RequestGroup.PriorityCode
	(*RequestGroup_Action)(nil),                                // 4: google.fhir.r4.core.RequestGroup.Action
	(*RequestGroup_Action_PriorityCode)(nil),                   // 5: google.fhir.r4.core.RequestGroup.Action.PriorityCode
	(*RequestGroup_Action_Condition)(nil),                      // 6: google.fhir.r4.core.RequestGroup.Action.Condition
	(*RequestGroup_Action_RelatedAction)(nil),                  // 7: google.fhir.r4.core.RequestGroup.Action.RelatedAction
	(*RequestGroup_Action_TimingX)(nil),                        // 8: google.fhir.r4.core.RequestGroup.Action.TimingX
	(*RequestGroup_Action_GroupingBehaviorCode)(nil),           // 9: google.fhir.r4.core.RequestGroup.Action.GroupingBehaviorCode
	(*RequestGroup_Action_SelectionBehaviorCode)(nil),          // 10: google.fhir.r4.core.RequestGroup.Action.SelectionBehaviorCode
	(*RequestGroup_Action_RequiredBehaviorCode)(nil),           // 11: google.fhir.r4.core.RequestGroup.Action.RequiredBehaviorCode
	(*RequestGroup_Action_PrecheckBehaviorCode)(nil),           // 12: google.fhir.r4.core.RequestGroup.Action.PrecheckBehaviorCode
	(*RequestGroup_Action_CardinalityBehaviorCode)(nil),        // 13: google.fhir.r4.core.RequestGroup.Action.CardinalityBehaviorCode
	(*RequestGroup_Action_Condition_KindCode)(nil),             // 14: google.fhir.r4.core.RequestGroup.Action.Condition.KindCode
	(*RequestGroup_Action_RelatedAction_RelationshipCode)(nil), // 15: google.fhir.r4.core.RequestGroup.Action.RelatedAction.RelationshipCode
	(*RequestGroup_Action_RelatedAction_OffsetX)(nil),          // 16: google.fhir.r4.core.RequestGroup.Action.RelatedAction.OffsetX
	(*datatypes_go_proto.Id)(nil),                              // 17: google.fhir.r4.core.Id
	(*datatypes_go_proto.Meta)(nil),                            // 18: google.fhir.r4.core.Meta
	(*datatypes_go_proto.Uri)(nil),                             // 19: google.fhir.r4.core.Uri
	(*datatypes_go_proto.Code)(nil),                            // 20: google.fhir.r4.core.Code
	(*datatypes_go_proto.Narrative)(nil),                       // 21: google.fhir.r4.core.Narrative
	(*any.Any)(nil),                                            // 22: google.protobuf.Any
	(*datatypes_go_proto.Extension)(nil),                       // 23: google.fhir.r4.core.Extension
	(*datatypes_go_proto.Identifier)(nil),                      // 24: google.fhir.r4.core.Identifier
	(*datatypes_go_proto.Canonical)(nil),                       // 25: google.fhir.r4.core.Canonical
	(*datatypes_go_proto.Reference)(nil),                       // 26: google.fhir.r4.core.Reference
	(*datatypes_go_proto.CodeableConcept)(nil),                 // 27: google.fhir.r4.core.CodeableConcept
	(*datatypes_go_proto.DateTime)(nil),                        // 28: google.fhir.r4.core.DateTime
	(*datatypes_go_proto.Annotation)(nil),                      // 29: google.fhir.r4.core.Annotation
	(codes_go_proto.RequestStatusCode_Value)(0),                // 30: google.fhir.r4.core.RequestStatusCode.Value
	(*datatypes_go_proto.String)(nil),                          // 31: google.fhir.r4.core.String
	(codes_go_proto.RequestIntentCode_Value)(0),                // 32: google.fhir.r4.core.RequestIntentCode.Value
	(codes_go_proto.RequestPriorityCode_Value)(0),              // 33: google.fhir.r4.core.RequestPriorityCode.Value
	(*datatypes_go_proto.RelatedArtifact)(nil),                 // 34: google.fhir.r4.core.RelatedArtifact
	(*datatypes_go_proto.Expression)(nil),                      // 35: google.fhir.r4.core.Expression
	(*datatypes_go_proto.Age)(nil),                             // 36: google.fhir.r4.core.Age
	(*datatypes_go_proto.Period)(nil),                          // 37: google.fhir.r4.core.Period
	(*datatypes_go_proto.Duration)(nil),                        // 38: google.fhir.r4.core.Duration
	(*datatypes_go_proto.Range)(nil),                           // 39: google.fhir.r4.core.Range
	(*datatypes_go_proto.Timing)(nil),                          // 40: google.fhir.r4.core.Timing
	(codes_go_proto.ActionGroupingBehaviorCode_Value)(0),       // 41: google.fhir.r4.core.ActionGroupingBehaviorCode.Value
	(codes_go_proto.ActionSelectionBehaviorCode_Value)(0),      // 42: google.fhir.r4.core.ActionSelectionBehaviorCode.Value
	(codes_go_proto.ActionRequiredBehaviorCode_Value)(0),       // 43: google.fhir.r4.core.ActionRequiredBehaviorCode.Value
	(codes_go_proto.ActionPrecheckBehaviorCode_Value)(0),       // 44: google.fhir.r4.core.ActionPrecheckBehaviorCode.Value
	(codes_go_proto.ActionCardinalityBehaviorCode_Value)(0),    // 45: google.fhir.r4.core.ActionCardinalityBehaviorCode.Value
	(codes_go_proto.ActionConditionKindCode_Value)(0),          // 46: google.fhir.r4.core.ActionConditionKindCode.Value
	(codes_go_proto.ActionRelationshipTypeCode_Value)(0),       // 47: google.fhir.r4.core.ActionRelationshipTypeCode.Value
}
var file_proto_google_fhir_proto_r4_core_resources_request_group_proto_depIdxs = []int32{
	17,  // 0: google.fhir.r4.core.RequestGroup.id:type_name -> google.fhir.r4.core.Id
	18,  // 1: google.fhir.r4.core.RequestGroup.meta:type_name -> google.fhir.r4.core.Meta
	19,  // 2: google.fhir.r4.core.RequestGroup.implicit_rules:type_name -> google.fhir.r4.core.Uri
	20,  // 3: google.fhir.r4.core.RequestGroup.language:type_name -> google.fhir.r4.core.Code
	21,  // 4: google.fhir.r4.core.RequestGroup.text:type_name -> google.fhir.r4.core.Narrative
	22,  // 5: google.fhir.r4.core.RequestGroup.contained:type_name -> google.protobuf.Any
	23,  // 6: google.fhir.r4.core.RequestGroup.extension:type_name -> google.fhir.r4.core.Extension
	23,  // 7: google.fhir.r4.core.RequestGroup.modifier_extension:type_name -> google.fhir.r4.core.Extension
	24,  // 8: google.fhir.r4.core.RequestGroup.identifier:type_name -> google.fhir.r4.core.Identifier
	25,  // 9: google.fhir.r4.core.RequestGroup.instantiates_canonical:type_name -> google.fhir.r4.core.Canonical
	19,  // 10: google.fhir.r4.core.RequestGroup.instantiates_uri:type_name -> google.fhir.r4.core.Uri
	26,  // 11: google.fhir.r4.core.RequestGroup.based_on:type_name -> google.fhir.r4.core.Reference
	26,  // 12: google.fhir.r4.core.RequestGroup.replaces:type_name -> google.fhir.r4.core.Reference
	24,  // 13: google.fhir.r4.core.RequestGroup.group_identifier:type_name -> google.fhir.r4.core.Identifier
	1,   // 14: google.fhir.r4.core.RequestGroup.status:type_name -> google.fhir.r4.core.RequestGroup.StatusCode
	2,   // 15: google.fhir.r4.core.RequestGroup.intent:type_name -> google.fhir.r4.core.RequestGroup.IntentCode
	3,   // 16: google.fhir.r4.core.RequestGroup.priority:type_name -> google.fhir.r4.core.RequestGroup.PriorityCode
	27,  // 17: google.fhir.r4.core.RequestGroup.code:type_name -> google.fhir.r4.core.CodeableConcept
	26,  // 18: google.fhir.r4.core.RequestGroup.subject:type_name -> google.fhir.r4.core.Reference
	26,  // 19: google.fhir.r4.core.RequestGroup.encounter:type_name -> google.fhir.r4.core.Reference
	28,  // 20: google.fhir.r4.core.RequestGroup.authored_on:type_name -> google.fhir.r4.core.DateTime
	26,  // 21: google.fhir.r4.core.RequestGroup.author:type_name -> google.fhir.r4.core.Reference
	27,  // 22: google.fhir.r4.core.RequestGroup.reason_code:type_name -> google.fhir.r4.core.CodeableConcept
	26,  // 23: google.fhir.r4.core.RequestGroup.reason_reference:type_name -> google.fhir.r4.core.Reference
	29,  // 24: google.fhir.r4.core.RequestGroup.note:type_name -> google.fhir.r4.core.Annotation
	4,   // 25: google.fhir.r4.core.RequestGroup.action:type_name -> google.fhir.r4.core.RequestGroup.Action
	30,  // 26: google.fhir.r4.core.RequestGroup.StatusCode.value:type_name -> google.fhir.r4.core.RequestStatusCode.Value
	31,  // 27: google.fhir.r4.core.RequestGroup.StatusCode.id:type_name -> google.fhir.r4.core.String
	23,  // 28: google.fhir.r4.core.RequestGroup.StatusCode.extension:type_name -> google.fhir.r4.core.Extension
	32,  // 29: google.fhir.r4.core.RequestGroup.IntentCode.value:type_name -> google.fhir.r4.core.RequestIntentCode.Value
	31,  // 30: google.fhir.r4.core.RequestGroup.IntentCode.id:type_name -> google.fhir.r4.core.String
	23,  // 31: google.fhir.r4.core.RequestGroup.IntentCode.extension:type_name -> google.fhir.r4.core.Extension
	33,  // 32: google.fhir.r4.core.RequestGroup.PriorityCode.value:type_name -> google.fhir.r4.core.RequestPriorityCode.Value
	31,  // 33: google.fhir.r4.core.RequestGroup.PriorityCode.id:type_name -> google.fhir.r4.core.String
	23,  // 34: google.fhir.r4.core.RequestGroup.PriorityCode.extension:type_name -> google.fhir.r4.core.Extension
	31,  // 35: google.fhir.r4.core.RequestGroup.Action.id:type_name -> google.fhir.r4.core.String
	23,  // 36: google.fhir.r4.core.RequestGroup.Action.extension:type_name -> google.fhir.r4.core.Extension
	23,  // 37: google.fhir.r4.core.RequestGroup.Action.modifier_extension:type_name -> google.fhir.r4.core.Extension
	31,  // 38: google.fhir.r4.core.RequestGroup.Action.prefix:type_name -> google.fhir.r4.core.String
	31,  // 39: google.fhir.r4.core.RequestGroup.Action.title:type_name -> google.fhir.r4.core.String
	31,  // 40: google.fhir.r4.core.RequestGroup.Action.description:type_name -> google.fhir.r4.core.String
	31,  // 41: google.fhir.r4.core.RequestGroup.Action.text_equivalent:type_name -> google.fhir.r4.core.String
	5,   // 42: google.fhir.r4.core.RequestGroup.Action.priority:type_name -> google.fhir.r4.core.RequestGroup.Action.PriorityCode
	27,  // 43: google.fhir.r4.core.RequestGroup.Action.code:type_name -> google.fhir.r4.core.CodeableConcept
	34,  // 44: google.fhir.r4.core.RequestGroup.Action.documentation:type_name -> google.fhir.r4.core.RelatedArtifact
	6,   // 45: google.fhir.r4.core.RequestGroup.Action.condition:type_name -> google.fhir.r4.core.RequestGroup.Action.Condition
	7,   // 46: google.fhir.r4.core.RequestGroup.Action.related_action:type_name -> google.fhir.r4.core.RequestGroup.Action.RelatedAction
	8,   // 47: google.fhir.r4.core.RequestGroup.Action.timing:type_name -> google.fhir.r4.core.RequestGroup.Action.TimingX
	26,  // 48: google.fhir.r4.core.RequestGroup.Action.participant:type_name -> google.fhir.r4.core.Reference
	27,  // 49: google.fhir.r4.core.RequestGroup.Action.type:type_name -> google.fhir.r4.core.CodeableConcept
	9,   // 50: google.fhir.r4.core.RequestGroup.Action.grouping_behavior:type_name -> google.fhir.r4.core.RequestGroup.Action.GroupingBehaviorCode
	10,  // 51: google.fhir.r4.core.RequestGroup.Action.selection_behavior:type_name -> google.fhir.r4.core.RequestGroup.Action.SelectionBehaviorCode
	11,  // 52: google.fhir.r4.core.RequestGroup.Action.required_behavior:type_name -> google.fhir.r4.core.RequestGroup.Action.RequiredBehaviorCode
	12,  // 53: google.fhir.r4.core.RequestGroup.Action.precheck_behavior:type_name -> google.fhir.r4.core.RequestGroup.Action.PrecheckBehaviorCode
	13,  // 54: google.fhir.r4.core.RequestGroup.Action.cardinality_behavior:type_name -> google.fhir.r4.core.RequestGroup.Action.CardinalityBehaviorCode
	26,  // 55: google.fhir.r4.core.RequestGroup.Action.resource:type_name -> google.fhir.r4.core.Reference
	4,   // 56: google.fhir.r4.core.RequestGroup.Action.action:type_name -> google.fhir.r4.core.RequestGroup.Action
	33,  // 57: google.fhir.r4.core.RequestGroup.Action.PriorityCode.value:type_name -> google.fhir.r4.core.RequestPriorityCode.Value
	31,  // 58: google.fhir.r4.core.RequestGroup.Action.PriorityCode.id:type_name -> google.fhir.r4.core.String
	23,  // 59: google.fhir.r4.core.RequestGroup.Action.PriorityCode.extension:type_name -> google.fhir.r4.core.Extension
	31,  // 60: google.fhir.r4.core.RequestGroup.Action.Condition.id:type_name -> google.fhir.r4.core.String
	23,  // 61: google.fhir.r4.core.RequestGroup.Action.Condition.extension:type_name -> google.fhir.r4.core.Extension
	23,  // 62: google.fhir.r4.core.RequestGroup.Action.Condition.modifier_extension:type_name -> google.fhir.r4.core.Extension
	14,  // 63: google.fhir.r4.core.RequestGroup.Action.Condition.kind:type_name -> google.fhir.r4.core.RequestGroup.Action.Condition.KindCode
	35,  // 64: google.fhir.r4.core.RequestGroup.Action.Condition.expression:type_name -> google.fhir.r4.core.Expression
	31,  // 65: google.fhir.r4.core.RequestGroup.Action.RelatedAction.id:type_name -> google.fhir.r4.core.String
	23,  // 66: google.fhir.r4.core.RequestGroup.Action.RelatedAction.extension:type_name -> google.fhir.r4.core.Extension
	23,  // 67: google.fhir.r4.core.RequestGroup.Action.RelatedAction.modifier_extension:type_name -> google.fhir.r4.core.Extension
	17,  // 68: google.fhir.r4.core.RequestGroup.Action.RelatedAction.action_id:type_name -> google.fhir.r4.core.Id
	15,  // 69: google.fhir.r4.core.RequestGroup.Action.RelatedAction.relationship:type_name -> google.fhir.r4.core.RequestGroup.Action.RelatedAction.RelationshipCode
	16,  // 70: google.fhir.r4.core.RequestGroup.Action.RelatedAction.offset:type_name -> google.fhir.r4.core.RequestGroup.Action.RelatedAction.OffsetX
	28,  // 71: google.fhir.r4.core.RequestGroup.Action.TimingX.date_time:type_name -> google.fhir.r4.core.DateTime
	36,  // 72: google.fhir.r4.core.RequestGroup.Action.TimingX.age:type_name -> google.fhir.r4.core.Age
	37,  // 73: google.fhir.r4.core.RequestGroup.Action.TimingX.period:type_name -> google.fhir.r4.core.Period
	38,  // 74: google.fhir.r4.core.RequestGroup.Action.TimingX.duration:type_name -> google.fhir.r4.core.Duration
	39,  // 75: google.fhir.r4.core.RequestGroup.Action.TimingX.range:type_name -> google.fhir.r4.core.Range
	40,  // 76: google.fhir.r4.core.RequestGroup.Action.TimingX.timing:type_name -> google.fhir.r4.core.Timing
	41,  // 77: google.fhir.r4.core.RequestGroup.Action.GroupingBehaviorCode.value:type_name -> google.fhir.r4.core.ActionGroupingBehaviorCode.Value
	31,  // 78: google.fhir.r4.core.RequestGroup.Action.GroupingBehaviorCode.id:type_name -> google.fhir.r4.core.String
	23,  // 79: google.fhir.r4.core.RequestGroup.Action.GroupingBehaviorCode.extension:type_name -> google.fhir.r4.core.Extension
	42,  // 80: google.fhir.r4.core.RequestGroup.Action.SelectionBehaviorCode.value:type_name -> google.fhir.r4.core.ActionSelectionBehaviorCode.Value
	31,  // 81: google.fhir.r4.core.RequestGroup.Action.SelectionBehaviorCode.id:type_name -> google.fhir.r4.core.String
	23,  // 82: google.fhir.r4.core.RequestGroup.Action.SelectionBehaviorCode.extension:type_name -> google.fhir.r4.core.Extension
	43,  // 83: google.fhir.r4.core.RequestGroup.Action.RequiredBehaviorCode.value:type_name -> google.fhir.r4.core.ActionRequiredBehaviorCode.Value
	31,  // 84: google.fhir.r4.core.RequestGroup.Action.RequiredBehaviorCode.id:type_name -> google.fhir.r4.core.String
	23,  // 85: google.fhir.r4.core.RequestGroup.Action.RequiredBehaviorCode.extension:type_name -> google.fhir.r4.core.Extension
	44,  // 86: google.fhir.r4.core.RequestGroup.Action.PrecheckBehaviorCode.value:type_name -> google.fhir.r4.core.ActionPrecheckBehaviorCode.Value
	31,  // 87: google.fhir.r4.core.RequestGroup.Action.PrecheckBehaviorCode.id:type_name -> google.fhir.r4.core.String
	23,  // 88: google.fhir.r4.core.RequestGroup.Action.PrecheckBehaviorCode.extension:type_name -> google.fhir.r4.core.Extension
	45,  // 89: google.fhir.r4.core.RequestGroup.Action.CardinalityBehaviorCode.value:type_name -> google.fhir.r4.core.ActionCardinalityBehaviorCode.Value
	31,  // 90: google.fhir.r4.core.RequestGroup.Action.CardinalityBehaviorCode.id:type_name -> google.fhir.r4.core.String
	23,  // 91: google.fhir.r4.core.RequestGroup.Action.CardinalityBehaviorCode.extension:type_name -> google.fhir.r4.core.Extension
	46,  // 92: google.fhir.r4.core.RequestGroup.Action.Condition.KindCode.value:type_name -> google.fhir.r4.core.ActionConditionKindCode.Value
	31,  // 93: google.fhir.r4.core.RequestGroup.Action.Condition.KindCode.id:type_name -> google.fhir.r4.core.String
	23,  // 94: google.fhir.r4.core.RequestGroup.Action.Condition.KindCode.extension:type_name -> google.fhir.r4.core.Extension
	47,  // 95: google.fhir.r4.core.RequestGroup.Action.RelatedAction.RelationshipCode.value:type_name -> google.fhir.r4.core.ActionRelationshipTypeCode.Value
	31,  // 96: google.fhir.r4.core.RequestGroup.Action.RelatedAction.RelationshipCode.id:type_name -> google.fhir.r4.core.String
	23,  // 97: google.fhir.r4.core.RequestGroup.Action.RelatedAction.RelationshipCode.extension:type_name -> google.fhir.r4.core.Extension
	38,  // 98: google.fhir.r4.core.RequestGroup.Action.RelatedAction.OffsetX.duration:type_name -> google.fhir.r4.core.Duration
	39,  // 99: google.fhir.r4.core.RequestGroup.Action.RelatedAction.OffsetX.range:type_name -> google.fhir.r4.core.Range
	100, // [100:100] is the sub-list for method output_type
	100, // [100:100] is the sub-list for method input_type
	100, // [100:100] is the sub-list for extension type_name
	100, // [100:100] is the sub-list for extension extendee
	0,   // [0:100] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_r4_core_resources_request_group_proto_init() }
func file_proto_google_fhir_proto_r4_core_resources_request_group_proto_init() {
	if File_proto_google_fhir_proto_r4_core_resources_request_group_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_StatusCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_IntentCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_PriorityCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_Action_PriorityCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_Action_Condition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_Action_RelatedAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_Action_TimingX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_Action_GroupingBehaviorCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_Action_SelectionBehaviorCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_Action_RequiredBehaviorCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_Action_PrecheckBehaviorCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_Action_CardinalityBehaviorCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_Action_Condition_KindCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_Action_RelatedAction_RelationshipCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGroup_Action_RelatedAction_OffsetX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*RequestGroup_Action_TimingX_DateTime)(nil),
		(*RequestGroup_Action_TimingX_Age)(nil),
		(*RequestGroup_Action_TimingX_Period)(nil),
		(*RequestGroup_Action_TimingX_Duration)(nil),
		(*RequestGroup_Action_TimingX_Range)(nil),
		(*RequestGroup_Action_TimingX_Timing)(nil),
	}
	file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*RequestGroup_Action_RelatedAction_OffsetX_Duration)(nil),
		(*RequestGroup_Action_RelatedAction_OffsetX_Range)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_r4_core_resources_request_group_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_r4_core_resources_request_group_proto_depIdxs,
		MessageInfos:      file_proto_google_fhir_proto_r4_core_resources_request_group_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_r4_core_resources_request_group_proto = out.File
	file_proto_google_fhir_proto_r4_core_resources_request_group_proto_rawDesc = nil
	file_proto_google_fhir_proto_r4_core_resources_request_group_proto_goTypes = nil
	file_proto_google_fhir_proto_r4_core_resources_request_group_proto_depIdxs = nil
}
