//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: proto/google/fhir/proto/r4/core/resources/biologically_derived_product.proto

package biologically_derived_product_go_proto

import (
	any "github.com/golang/protobuf/ptypes/any"
	_ "github.com/google/fhir/go/proto/google/fhir/proto/annotations_go_proto"
	codes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/codes_go_proto"
	datatypes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/datatypes_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Auto-generated from StructureDefinition for BiologicallyDerivedProduct, last
// updated 2019-11-01T09:29:23.356+11:00. A material substance originating from
// a biological entity. See
// http://hl7.org/fhir/StructureDefinition/BiologicallyDerivedProduct
type BiologicallyDerivedProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Logical id of this artifact
	Id *datatypes_go_proto.Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *datatypes_go_proto.Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *datatypes_go_proto.Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *datatypes_go_proto.Code `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *datatypes_go_proto.Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*any.Any `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,8,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,9,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// External ids for this item
	Identifier      []*datatypes_go_proto.Identifier                `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	ProductCategory *BiologicallyDerivedProduct_ProductCategoryCode `protobuf:"bytes,11,opt,name=product_category,json=productCategory,proto3" json:"product_category,omitempty"`
	// What this biologically derived product is
	ProductCode *datatypes_go_proto.CodeableConcept    `protobuf:"bytes,12,opt,name=product_code,json=productCode,proto3" json:"product_code,omitempty"`
	Status      *BiologicallyDerivedProduct_StatusCode `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	// Procedure request
	Request []*datatypes_go_proto.Reference `protobuf:"bytes,14,rep,name=request,proto3" json:"request,omitempty"`
	// The amount of this biologically derived product
	Quantity *datatypes_go_proto.Integer `protobuf:"bytes,15,opt,name=quantity,proto3" json:"quantity,omitempty"`
	// BiologicallyDerivedProduct parent
	Parent       []*datatypes_go_proto.Reference          `protobuf:"bytes,16,rep,name=parent,proto3" json:"parent,omitempty"`
	Collection   *BiologicallyDerivedProduct_Collection   `protobuf:"bytes,17,opt,name=collection,proto3" json:"collection,omitempty"`
	Processing   []*BiologicallyDerivedProduct_Processing `protobuf:"bytes,18,rep,name=processing,proto3" json:"processing,omitempty"`
	Manipulation *BiologicallyDerivedProduct_Manipulation `protobuf:"bytes,19,opt,name=manipulation,proto3" json:"manipulation,omitempty"`
	Storage      []*BiologicallyDerivedProduct_Storage    `protobuf:"bytes,20,rep,name=storage,proto3" json:"storage,omitempty"`
}

func (x *BiologicallyDerivedProduct) Reset() {
	*x = BiologicallyDerivedProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct) ProtoMessage() {}

func (x *BiologicallyDerivedProduct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0}
}

func (x *BiologicallyDerivedProduct) GetId() *datatypes_go_proto.Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetMeta() *datatypes_go_proto.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetImplicitRules() *datatypes_go_proto.Uri {
	if x != nil {
		return x.ImplicitRules
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetLanguage() *datatypes_go_proto.Code {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetText() *datatypes_go_proto.Narrative {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetContained() []*any.Any {
	if x != nil {
		return x.Contained
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetIdentifier() []*datatypes_go_proto.Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetProductCategory() *BiologicallyDerivedProduct_ProductCategoryCode {
	if x != nil {
		return x.ProductCategory
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetProductCode() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.ProductCode
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetStatus() *BiologicallyDerivedProduct_StatusCode {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetRequest() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetQuantity() *datatypes_go_proto.Integer {
	if x != nil {
		return x.Quantity
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetParent() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetCollection() *BiologicallyDerivedProduct_Collection {
	if x != nil {
		return x.Collection
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetProcessing() []*BiologicallyDerivedProduct_Processing {
	if x != nil {
		return x.Processing
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetManipulation() *BiologicallyDerivedProduct_Manipulation {
	if x != nil {
		return x.Manipulation
	}
	return nil
}

func (x *BiologicallyDerivedProduct) GetStorage() []*BiologicallyDerivedProduct_Storage {
	if x != nil {
		return x.Storage
	}
	return nil
}

// organ | tissue | fluid | cells | biologicalAgent
type BiologicallyDerivedProduct_ProductCategoryCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.BiologicallyDerivedProductCategoryCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.BiologicallyDerivedProductCategoryCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                                  `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension                             `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *BiologicallyDerivedProduct_ProductCategoryCode) Reset() {
	*x = BiologicallyDerivedProduct_ProductCategoryCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct_ProductCategoryCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct_ProductCategoryCode) ProtoMessage() {}

func (x *BiologicallyDerivedProduct_ProductCategoryCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct_ProductCategoryCode.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct_ProductCategoryCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0, 0}
}

func (x *BiologicallyDerivedProduct_ProductCategoryCode) GetValue() codes_go_proto.BiologicallyDerivedProductCategoryCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.BiologicallyDerivedProductCategoryCode_INVALID_UNINITIALIZED
}

func (x *BiologicallyDerivedProduct_ProductCategoryCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BiologicallyDerivedProduct_ProductCategoryCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// available | unavailable
type BiologicallyDerivedProduct_StatusCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.BiologicallyDerivedProductStatusCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.BiologicallyDerivedProductStatusCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                                `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension                           `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *BiologicallyDerivedProduct_StatusCode) Reset() {
	*x = BiologicallyDerivedProduct_StatusCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct_StatusCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct_StatusCode) ProtoMessage() {}

func (x *BiologicallyDerivedProduct_StatusCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct_StatusCode.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct_StatusCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0, 1}
}

func (x *BiologicallyDerivedProduct_StatusCode) GetValue() codes_go_proto.BiologicallyDerivedProductStatusCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.BiologicallyDerivedProductStatusCode_INVALID_UNINITIALIZED
}

func (x *BiologicallyDerivedProduct_StatusCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BiologicallyDerivedProduct_StatusCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

// How this product was collected
type BiologicallyDerivedProduct_Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Individual performing collection
	Collector *datatypes_go_proto.Reference `protobuf:"bytes,4,opt,name=collector,proto3" json:"collector,omitempty"`
	// Who is product from
	Source    *datatypes_go_proto.Reference                     `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	Collected *BiologicallyDerivedProduct_Collection_CollectedX `protobuf:"bytes,6,opt,name=collected,proto3" json:"collected,omitempty"`
}

func (x *BiologicallyDerivedProduct_Collection) Reset() {
	*x = BiologicallyDerivedProduct_Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct_Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct_Collection) ProtoMessage() {}

func (x *BiologicallyDerivedProduct_Collection) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct_Collection.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct_Collection) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0, 2}
}

func (x *BiologicallyDerivedProduct_Collection) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Collection) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Collection) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Collection) GetCollector() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Collector
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Collection) GetSource() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Collection) GetCollected() *BiologicallyDerivedProduct_Collection_CollectedX {
	if x != nil {
		return x.Collected
	}
	return nil
}

// Any processing of the product during collection
type BiologicallyDerivedProduct_Processing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Description of of processing
	Description *datatypes_go_proto.String `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Procesing code
	Procedure *datatypes_go_proto.CodeableConcept `protobuf:"bytes,5,opt,name=procedure,proto3" json:"procedure,omitempty"`
	// Substance added during processing
	Additive *datatypes_go_proto.Reference                `protobuf:"bytes,6,opt,name=additive,proto3" json:"additive,omitempty"`
	Time     *BiologicallyDerivedProduct_Processing_TimeX `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *BiologicallyDerivedProduct_Processing) Reset() {
	*x = BiologicallyDerivedProduct_Processing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct_Processing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct_Processing) ProtoMessage() {}

func (x *BiologicallyDerivedProduct_Processing) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct_Processing.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct_Processing) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0, 3}
}

func (x *BiologicallyDerivedProduct_Processing) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Processing) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Processing) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Processing) GetDescription() *datatypes_go_proto.String {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Processing) GetProcedure() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Procedure
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Processing) GetAdditive() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Additive
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Processing) GetTime() *BiologicallyDerivedProduct_Processing_TimeX {
	if x != nil {
		return x.Time
	}
	return nil
}

// Any manipulation of product post-collection
type BiologicallyDerivedProduct_Manipulation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Description of manipulation
	Description *datatypes_go_proto.String                     `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Time        *BiologicallyDerivedProduct_Manipulation_TimeX `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *BiologicallyDerivedProduct_Manipulation) Reset() {
	*x = BiologicallyDerivedProduct_Manipulation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct_Manipulation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct_Manipulation) ProtoMessage() {}

func (x *BiologicallyDerivedProduct_Manipulation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct_Manipulation.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct_Manipulation) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0, 4}
}

func (x *BiologicallyDerivedProduct_Manipulation) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Manipulation) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Manipulation) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Manipulation) GetDescription() *datatypes_go_proto.String {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Manipulation) GetTime() *BiologicallyDerivedProduct_Manipulation_TimeX {
	if x != nil {
		return x.Time
	}
	return nil
}

// Product storage
type BiologicallyDerivedProduct_Storage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Description of storage
	Description *datatypes_go_proto.String `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// Storage temperature
	Temperature *datatypes_go_proto.Decimal                   `protobuf:"bytes,5,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Scale       *BiologicallyDerivedProduct_Storage_ScaleCode `protobuf:"bytes,6,opt,name=scale,proto3" json:"scale,omitempty"`
	// Storage timeperiod
	Duration *datatypes_go_proto.Period `protobuf:"bytes,7,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *BiologicallyDerivedProduct_Storage) Reset() {
	*x = BiologicallyDerivedProduct_Storage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct_Storage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct_Storage) ProtoMessage() {}

func (x *BiologicallyDerivedProduct_Storage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct_Storage.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct_Storage) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0, 5}
}

func (x *BiologicallyDerivedProduct_Storage) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Storage) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Storage) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Storage) GetDescription() *datatypes_go_proto.String {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Storage) GetTemperature() *datatypes_go_proto.Decimal {
	if x != nil {
		return x.Temperature
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Storage) GetScale() *BiologicallyDerivedProduct_Storage_ScaleCode {
	if x != nil {
		return x.Scale
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Storage) GetDuration() *datatypes_go_proto.Period {
	if x != nil {
		return x.Duration
	}
	return nil
}

// Time of product collection
type BiologicallyDerivedProduct_Collection_CollectedX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*BiologicallyDerivedProduct_Collection_CollectedX_DateTime
	//	*BiologicallyDerivedProduct_Collection_CollectedX_Period
	Choice isBiologicallyDerivedProduct_Collection_CollectedX_Choice `protobuf_oneof:"choice"`
}

func (x *BiologicallyDerivedProduct_Collection_CollectedX) Reset() {
	*x = BiologicallyDerivedProduct_Collection_CollectedX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct_Collection_CollectedX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct_Collection_CollectedX) ProtoMessage() {}

func (x *BiologicallyDerivedProduct_Collection_CollectedX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct_Collection_CollectedX.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct_Collection_CollectedX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (m *BiologicallyDerivedProduct_Collection_CollectedX) GetChoice() isBiologicallyDerivedProduct_Collection_CollectedX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Collection_CollectedX) GetDateTime() *datatypes_go_proto.DateTime {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Collection_CollectedX_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Collection_CollectedX) GetPeriod() *datatypes_go_proto.Period {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Collection_CollectedX_Period); ok {
		return x.Period
	}
	return nil
}

type isBiologicallyDerivedProduct_Collection_CollectedX_Choice interface {
	isBiologicallyDerivedProduct_Collection_CollectedX_Choice()
}

type BiologicallyDerivedProduct_Collection_CollectedX_DateTime struct {
	DateTime *datatypes_go_proto.DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type BiologicallyDerivedProduct_Collection_CollectedX_Period struct {
	Period *datatypes_go_proto.Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*BiologicallyDerivedProduct_Collection_CollectedX_DateTime) isBiologicallyDerivedProduct_Collection_CollectedX_Choice() {
}

func (*BiologicallyDerivedProduct_Collection_CollectedX_Period) isBiologicallyDerivedProduct_Collection_CollectedX_Choice() {
}

// Time of processing
type BiologicallyDerivedProduct_Processing_TimeX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*BiologicallyDerivedProduct_Processing_TimeX_DateTime
	//	*BiologicallyDerivedProduct_Processing_TimeX_Period
	Choice isBiologicallyDerivedProduct_Processing_TimeX_Choice `protobuf_oneof:"choice"`
}

func (x *BiologicallyDerivedProduct_Processing_TimeX) Reset() {
	*x = BiologicallyDerivedProduct_Processing_TimeX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct_Processing_TimeX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct_Processing_TimeX) ProtoMessage() {}

func (x *BiologicallyDerivedProduct_Processing_TimeX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct_Processing_TimeX.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct_Processing_TimeX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (m *BiologicallyDerivedProduct_Processing_TimeX) GetChoice() isBiologicallyDerivedProduct_Processing_TimeX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Processing_TimeX) GetDateTime() *datatypes_go_proto.DateTime {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Processing_TimeX_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Processing_TimeX) GetPeriod() *datatypes_go_proto.Period {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Processing_TimeX_Period); ok {
		return x.Period
	}
	return nil
}

type isBiologicallyDerivedProduct_Processing_TimeX_Choice interface {
	isBiologicallyDerivedProduct_Processing_TimeX_Choice()
}

type BiologicallyDerivedProduct_Processing_TimeX_DateTime struct {
	DateTime *datatypes_go_proto.DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type BiologicallyDerivedProduct_Processing_TimeX_Period struct {
	Period *datatypes_go_proto.Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*BiologicallyDerivedProduct_Processing_TimeX_DateTime) isBiologicallyDerivedProduct_Processing_TimeX_Choice() {
}

func (*BiologicallyDerivedProduct_Processing_TimeX_Period) isBiologicallyDerivedProduct_Processing_TimeX_Choice() {
}

// Time of manipulation
type BiologicallyDerivedProduct_Manipulation_TimeX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*BiologicallyDerivedProduct_Manipulation_TimeX_DateTime
	//	*BiologicallyDerivedProduct_Manipulation_TimeX_Period
	Choice isBiologicallyDerivedProduct_Manipulation_TimeX_Choice `protobuf_oneof:"choice"`
}

func (x *BiologicallyDerivedProduct_Manipulation_TimeX) Reset() {
	*x = BiologicallyDerivedProduct_Manipulation_TimeX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct_Manipulation_TimeX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct_Manipulation_TimeX) ProtoMessage() {}

func (x *BiologicallyDerivedProduct_Manipulation_TimeX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct_Manipulation_TimeX.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct_Manipulation_TimeX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0, 4, 0}
}

func (m *BiologicallyDerivedProduct_Manipulation_TimeX) GetChoice() isBiologicallyDerivedProduct_Manipulation_TimeX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Manipulation_TimeX) GetDateTime() *datatypes_go_proto.DateTime {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Manipulation_TimeX_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Manipulation_TimeX) GetPeriod() *datatypes_go_proto.Period {
	if x, ok := x.GetChoice().(*BiologicallyDerivedProduct_Manipulation_TimeX_Period); ok {
		return x.Period
	}
	return nil
}

type isBiologicallyDerivedProduct_Manipulation_TimeX_Choice interface {
	isBiologicallyDerivedProduct_Manipulation_TimeX_Choice()
}

type BiologicallyDerivedProduct_Manipulation_TimeX_DateTime struct {
	DateTime *datatypes_go_proto.DateTime `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type BiologicallyDerivedProduct_Manipulation_TimeX_Period struct {
	Period *datatypes_go_proto.Period `protobuf:"bytes,2,opt,name=period,proto3,oneof"`
}

func (*BiologicallyDerivedProduct_Manipulation_TimeX_DateTime) isBiologicallyDerivedProduct_Manipulation_TimeX_Choice() {
}

func (*BiologicallyDerivedProduct_Manipulation_TimeX_Period) isBiologicallyDerivedProduct_Manipulation_TimeX_Choice() {
}

// farenheit | celsius | kelvin
type BiologicallyDerivedProduct_Storage_ScaleCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     codes_go_proto.BiologicallyDerivedProductStorageScaleCode_Value `protobuf:"varint,1,opt,name=value,proto3,enum=google.fhir.r4.core.BiologicallyDerivedProductStorageScaleCode_Value" json:"value,omitempty"`
	Id        *datatypes_go_proto.String                                      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Extension []*datatypes_go_proto.Extension                                 `protobuf:"bytes,3,rep,name=extension,proto3" json:"extension,omitempty"`
}

func (x *BiologicallyDerivedProduct_Storage_ScaleCode) Reset() {
	*x = BiologicallyDerivedProduct_Storage_ScaleCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BiologicallyDerivedProduct_Storage_ScaleCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiologicallyDerivedProduct_Storage_ScaleCode) ProtoMessage() {}

func (x *BiologicallyDerivedProduct_Storage_ScaleCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiologicallyDerivedProduct_Storage_ScaleCode.ProtoReflect.Descriptor instead.
func (*BiologicallyDerivedProduct_Storage_ScaleCode) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescGZIP(), []int{0, 5, 0}
}

func (x *BiologicallyDerivedProduct_Storage_ScaleCode) GetValue() codes_go_proto.BiologicallyDerivedProductStorageScaleCode_Value {
	if x != nil {
		return x.Value
	}
	return codes_go_proto.BiologicallyDerivedProductStorageScaleCode_INVALID_UNINITIALIZED
}

func (x *BiologicallyDerivedProduct_Storage_ScaleCode) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BiologicallyDerivedProduct_Storage_ScaleCode) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

var File_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDesc = []byte{
	0x0a, 0x4c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x62, 0x69, 0x6f, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf2, 0x24, 0x0a, 0x1a, 0x42, 0x69, 0x6f, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x2d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3f,
	0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x69,
	0x52, 0x0d, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12,
	0x35, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x61, 0x72, 0x72, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3c,
	0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x6e, 0x0a, 0x10,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x69, 0x6f,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x47, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x52, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x14, 0xf2, 0xff, 0xfc, 0xc2,
	0x06, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x58, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x42, 0x20, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x1a, 0x42, 0x69, 0x6f, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x5a, 0x0a,
	0x0a, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79,
	0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x60, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4d, 0x61, 0x6e,
	0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x69, 0x70,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42,
	0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x1a, 0xc6, 0x02, 0x0a, 0x13, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x57, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x41, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x6b, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9,
	0x83, 0xb2, 0x05, 0x2d, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74,
	0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63,
	0x6f, 0x64, 0x65, 0x1a, 0xb9, 0x02, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x55, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x3f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x69, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2,
	0x05, 0x2b, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x9a, 0xb5, 0x8e,
	0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72,
	0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x1a,
	0x82, 0x05, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x66, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x28, 0xf2, 0xff, 0xfc,
	0xc2, 0x06, 0x0c, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0xf2,
	0xff, 0xfc, 0xc2, 0x06, 0x10, 0x50, 0x72, 0x61, 0x63, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x57, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x42, 0x1f, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x07, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0xf2,
	0xff, 0xfc, 0xc2, 0x06, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x09, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44,
	0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x58, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x1a, 0x93,
	0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x58, 0x12, 0x3c, 0x0a,
	0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48,
	0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x3a, 0x06, 0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x1a, 0xfd, 0x04, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d,
	0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65,
	0x12, 0x4b, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x42, 0x0f, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x09, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x08, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x54, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x58, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x1a, 0x8e, 0x01, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x58, 0x12, 0x3c, 0x0a,
	0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48,
	0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x3a, 0x06, 0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x1a, 0xf0, 0x03, 0x0a, 0x0c, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x3d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44,
	0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x4d, 0x61,
	0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x58,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x8e, 0x01, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x58,
	0x12, 0x3c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x48, 0x00, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35,
	0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x3a, 0x06, 0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x1a, 0x9c, 0x06, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d,
	0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0b,
	0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x57, 0x0a, 0x05,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x05,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xc5,
	0x02, 0x0a, 0x09, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x5b, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x42, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65,
	0x72, 0x69, 0x76, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x70, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x01, 0x8a, 0xf9, 0x83, 0xb2,
	0x05, 0x32, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x74, 0x2f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2d, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x9a, 0xb5, 0x8e, 0x93, 0x06, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f,
	0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x3a, 0x4e, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x03, 0xb2, 0xfe,
	0xe4, 0x97, 0x06, 0x42, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x42, 0x69, 0x6f, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x42, 0x8c, 0x01, 0x0a,
	0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x01, 0x5a, 0x69, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68,
	0x69, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f,
	0x62, 0x69, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x72,
	0x69, 0x76, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x67, 0x6f, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x98, 0xc6, 0xb0, 0xb5, 0x07, 0x04, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescData = file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDesc
)

func file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDescData
}

var file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_goTypes = []interface{}{
	(*BiologicallyDerivedProduct)(nil),                                   // 0: google.fhir.r4.core.BiologicallyDerivedProduct
	(*BiologicallyDerivedProduct_ProductCategoryCode)(nil),               // 1: google.fhir.r4.core.BiologicallyDerivedProduct.ProductCategoryCode
	(*BiologicallyDerivedProduct_StatusCode)(nil),                        // 2: google.fhir.r4.core.BiologicallyDerivedProduct.StatusCode
	(*BiologicallyDerivedProduct_Collection)(nil),                        // 3: google.fhir.r4.core.BiologicallyDerivedProduct.Collection
	(*BiologicallyDerivedProduct_Processing)(nil),                        // 4: google.fhir.r4.core.BiologicallyDerivedProduct.Processing
	(*BiologicallyDerivedProduct_Manipulation)(nil),                      // 5: google.fhir.r4.core.BiologicallyDerivedProduct.Manipulation
	(*BiologicallyDerivedProduct_Storage)(nil),                           // 6: google.fhir.r4.core.BiologicallyDerivedProduct.Storage
	(*BiologicallyDerivedProduct_Collection_CollectedX)(nil),             // 7: google.fhir.r4.core.BiologicallyDerivedProduct.Collection.CollectedX
	(*BiologicallyDerivedProduct_Processing_TimeX)(nil),                  // 8: google.fhir.r4.core.BiologicallyDerivedProduct.Processing.TimeX
	(*BiologicallyDerivedProduct_Manipulation_TimeX)(nil),                // 9: google.fhir.r4.core.BiologicallyDerivedProduct.Manipulation.TimeX
	(*BiologicallyDerivedProduct_Storage_ScaleCode)(nil),                 // 10: google.fhir.r4.core.BiologicallyDerivedProduct.Storage.ScaleCode
	(*datatypes_go_proto.Id)(nil),                                        // 11: google.fhir.r4.core.Id
	(*datatypes_go_proto.Meta)(nil),                                      // 12: google.fhir.r4.core.Meta
	(*datatypes_go_proto.Uri)(nil),                                       // 13: google.fhir.r4.core.Uri
	(*datatypes_go_proto.Code)(nil),                                      // 14: google.fhir.r4.core.Code
	(*datatypes_go_proto.Narrative)(nil),                                 // 15: google.fhir.r4.core.Narrative
	(*any.Any)(nil),                                                      // 16: google.protobuf.Any
	(*datatypes_go_proto.Extension)(nil),                                 // 17: google.fhir.r4.core.Extension
	(*datatypes_go_proto.Identifier)(nil),                                // 18: google.fhir.r4.core.Identifier
	(*datatypes_go_proto.CodeableConcept)(nil),                           // 19: google.fhir.r4.core.CodeableConcept
	(*datatypes_go_proto.Reference)(nil),                                 // 20: google.fhir.r4.core.Reference
	(*datatypes_go_proto.Integer)(nil),                                   // 21: google.fhir.r4.core.Integer
	(codes_go_proto.BiologicallyDerivedProductCategoryCode_Value)(0),     // 22: google.fhir.r4.core.BiologicallyDerivedProductCategoryCode.Value
	(*datatypes_go_proto.String)(nil),                                    // 23: google.fhir.r4.core.String
	(codes_go_proto.BiologicallyDerivedProductStatusCode_Value)(0),       // 24: google.fhir.r4.core.BiologicallyDerivedProductStatusCode.Value
	(*datatypes_go_proto.Decimal)(nil),                                   // 25: google.fhir.r4.core.Decimal
	(*datatypes_go_proto.Period)(nil),                                    // 26: google.fhir.r4.core.Period
	(*datatypes_go_proto.DateTime)(nil),                                  // 27: google.fhir.r4.core.DateTime
	(codes_go_proto.BiologicallyDerivedProductStorageScaleCode_Value)(0), // 28: google.fhir.r4.core.BiologicallyDerivedProductStorageScaleCode.Value
}
var file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_depIdxs = []int32{
	11, // 0: google.fhir.r4.core.BiologicallyDerivedProduct.id:type_name -> google.fhir.r4.core.Id
	12, // 1: google.fhir.r4.core.BiologicallyDerivedProduct.meta:type_name -> google.fhir.r4.core.Meta
	13, // 2: google.fhir.r4.core.BiologicallyDerivedProduct.implicit_rules:type_name -> google.fhir.r4.core.Uri
	14, // 3: google.fhir.r4.core.BiologicallyDerivedProduct.language:type_name -> google.fhir.r4.core.Code
	15, // 4: google.fhir.r4.core.BiologicallyDerivedProduct.text:type_name -> google.fhir.r4.core.Narrative
	16, // 5: google.fhir.r4.core.BiologicallyDerivedProduct.contained:type_name -> google.protobuf.Any
	17, // 6: google.fhir.r4.core.BiologicallyDerivedProduct.extension:type_name -> google.fhir.r4.core.Extension
	17, // 7: google.fhir.r4.core.BiologicallyDerivedProduct.modifier_extension:type_name -> google.fhir.r4.core.Extension
	18, // 8: google.fhir.r4.core.BiologicallyDerivedProduct.identifier:type_name -> google.fhir.r4.core.Identifier
	1,  // 9: google.fhir.r4.core.BiologicallyDerivedProduct.product_category:type_name -> google.fhir.r4.core.BiologicallyDerivedProduct.ProductCategoryCode
	19, // 10: google.fhir.r4.core.BiologicallyDerivedProduct.product_code:type_name -> google.fhir.r4.core.CodeableConcept
	2,  // 11: google.fhir.r4.core.BiologicallyDerivedProduct.status:type_name -> google.fhir.r4.core.BiologicallyDerivedProduct.StatusCode
	20, // 12: google.fhir.r4.core.BiologicallyDerivedProduct.request:type_name -> google.fhir.r4.core.Reference
	21, // 13: google.fhir.r4.core.BiologicallyDerivedProduct.quantity:type_name -> google.fhir.r4.core.Integer
	20, // 14: google.fhir.r4.core.BiologicallyDerivedProduct.parent:type_name -> google.fhir.r4.core.Reference
	3,  // 15: google.fhir.r4.core.BiologicallyDerivedProduct.collection:type_name -> google.fhir.r4.core.BiologicallyDerivedProduct.Collection
	4,  // 16: google.fhir.r4.core.BiologicallyDerivedProduct.processing:type_name -> google.fhir.r4.core.BiologicallyDerivedProduct.Processing
	5,  // 17: google.fhir.r4.core.BiologicallyDerivedProduct.manipulation:type_name -> google.fhir.r4.core.BiologicallyDerivedProduct.Manipulation
	6,  // 18: google.fhir.r4.core.BiologicallyDerivedProduct.storage:type_name -> google.fhir.r4.core.BiologicallyDerivedProduct.Storage
	22, // 19: google.fhir.r4.core.BiologicallyDerivedProduct.ProductCategoryCode.value:type_name -> google.fhir.r4.core.BiologicallyDerivedProductCategoryCode.Value
	23, // 20: google.fhir.r4.core.BiologicallyDerivedProduct.ProductCategoryCode.id:type_name -> google.fhir.r4.core.String
	17, // 21: google.fhir.r4.core.BiologicallyDerivedProduct.ProductCategoryCode.extension:type_name -> google.fhir.r4.core.Extension
	24, // 22: google.fhir.r4.core.BiologicallyDerivedProduct.StatusCode.value:type_name -> google.fhir.r4.core.BiologicallyDerivedProductStatusCode.Value
	23, // 23: google.fhir.r4.core.BiologicallyDerivedProduct.StatusCode.id:type_name -> google.fhir.r4.core.String
	17, // 24: google.fhir.r4.core.BiologicallyDerivedProduct.StatusCode.extension:type_name -> google.fhir.r4.core.Extension
	23, // 25: google.fhir.r4.core.BiologicallyDerivedProduct.Collection.id:type_name -> google.fhir.r4.core.String
	17, // 26: google.fhir.r4.core.BiologicallyDerivedProduct.Collection.extension:type_name -> google.fhir.r4.core.Extension
	17, // 27: google.fhir.r4.core.BiologicallyDerivedProduct.Collection.modifier_extension:type_name -> google.fhir.r4.core.Extension
	20, // 28: google.fhir.r4.core.BiologicallyDerivedProduct.Collection.collector:type_name -> google.fhir.r4.core.Reference
	20, // 29: google.fhir.r4.core.BiologicallyDerivedProduct.Collection.source:type_name -> google.fhir.r4.core.Reference
	7,  // 30: google.fhir.r4.core.BiologicallyDerivedProduct.Collection.collected:type_name -> google.fhir.r4.core.BiologicallyDerivedProduct.Collection.CollectedX
	23, // 31: google.fhir.r4.core.BiologicallyDerivedProduct.Processing.id:type_name -> google.fhir.r4.core.String
	17, // 32: google.fhir.r4.core.BiologicallyDerivedProduct.Processing.extension:type_name -> google.fhir.r4.core.Extension
	17, // 33: google.fhir.r4.core.BiologicallyDerivedProduct.Processing.modifier_extension:type_name -> google.fhir.r4.core.Extension
	23, // 34: google.fhir.r4.core.BiologicallyDerivedProduct.Processing.description:type_name -> google.fhir.r4.core.String
	19, // 35: google.fhir.r4.core.BiologicallyDerivedProduct.Processing.procedure:type_name -> google.fhir.r4.core.CodeableConcept
	20, // 36: google.fhir.r4.core.BiologicallyDerivedProduct.Processing.additive:type_name -> google.fhir.r4.core.Reference
	8,  // 37: google.fhir.r4.core.BiologicallyDerivedProduct.Processing.time:type_name -> google.fhir.r4.core.BiologicallyDerivedProduct.Processing.TimeX
	23, // 38: google.fhir.r4.core.BiologicallyDerivedProduct.Manipulation.id:type_name -> google.fhir.r4.core.String
	17, // 39: google.fhir.r4.core.BiologicallyDerivedProduct.Manipulation.extension:type_name -> google.fhir.r4.core.Extension
	17, // 40: google.fhir.r4.core.BiologicallyDerivedProduct.Manipulation.modifier_extension:type_name -> google.fhir.r4.core.Extension
	23, // 41: google.fhir.r4.core.BiologicallyDerivedProduct.Manipulation.description:type_name -> google.fhir.r4.core.String
	9,  // 42: google.fhir.r4.core.BiologicallyDerivedProduct.Manipulation.time:type_name -> google.fhir.r4.core.BiologicallyDerivedProduct.Manipulation.TimeX
	23, // 43: google.fhir.r4.core.BiologicallyDerivedProduct.Storage.id:type_name -> google.fhir.r4.core.String
	17, // 44: google.fhir.r4.core.BiologicallyDerivedProduct.Storage.extension:type_name -> google.fhir.r4.core.Extension
	17, // 45: google.fhir.r4.core.BiologicallyDerivedProduct.Storage.modifier_extension:type_name -> google.fhir.r4.core.Extension
	23, // 46: google.fhir.r4.core.BiologicallyDerivedProduct.Storage.description:type_name -> google.fhir.r4.core.String
	25, // 47: google.fhir.r4.core.BiologicallyDerivedProduct.Storage.temperature:type_name -> google.fhir.r4.core.Decimal
	10, // 48: google.fhir.r4.core.BiologicallyDerivedProduct.Storage.scale:type_name -> google.fhir.r4.core.BiologicallyDerivedProduct.Storage.ScaleCode
	26, // 49: google.fhir.r4.core.BiologicallyDerivedProduct.Storage.duration:type_name -> google.fhir.r4.core.Period
	27, // 50: google.fhir.r4.core.BiologicallyDerivedProduct.Collection.CollectedX.date_time:type_name -> google.fhir.r4.core.DateTime
	26, // 51: google.fhir.r4.core.BiologicallyDerivedProduct.Collection.CollectedX.period:type_name -> google.fhir.r4.core.Period
	27, // 52: google.fhir.r4.core.BiologicallyDerivedProduct.Processing.TimeX.date_time:type_name -> google.fhir.r4.core.DateTime
	26, // 53: google.fhir.r4.core.BiologicallyDerivedProduct.Processing.TimeX.period:type_name -> google.fhir.r4.core.Period
	27, // 54: google.fhir.r4.core.BiologicallyDerivedProduct.Manipulation.TimeX.date_time:type_name -> google.fhir.r4.core.DateTime
	26, // 55: google.fhir.r4.core.BiologicallyDerivedProduct.Manipulation.TimeX.period:type_name -> google.fhir.r4.core.Period
	28, // 56: google.fhir.r4.core.BiologicallyDerivedProduct.Storage.ScaleCode.value:type_name -> google.fhir.r4.core.BiologicallyDerivedProductStorageScaleCode.Value
	23, // 57: google.fhir.r4.core.BiologicallyDerivedProduct.Storage.ScaleCode.id:type_name -> google.fhir.r4.core.String
	17, // 58: google.fhir.r4.core.BiologicallyDerivedProduct.Storage.ScaleCode.extension:type_name -> google.fhir.r4.core.Extension
	59, // [59:59] is the sub-list for method output_type
	59, // [59:59] is the sub-list for method input_type
	59, // [59:59] is the sub-list for extension type_name
	59, // [59:59] is the sub-list for extension extendee
	0,  // [0:59] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_init() }
func file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_init() {
	if File_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct_ProductCategoryCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct_StatusCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct_Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct_Processing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct_Manipulation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct_Storage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct_Collection_CollectedX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct_Processing_TimeX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct_Manipulation_TimeX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BiologicallyDerivedProduct_Storage_ScaleCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*BiologicallyDerivedProduct_Collection_CollectedX_DateTime)(nil),
		(*BiologicallyDerivedProduct_Collection_CollectedX_Period)(nil),
	}
	file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*BiologicallyDerivedProduct_Processing_TimeX_DateTime)(nil),
		(*BiologicallyDerivedProduct_Processing_TimeX_Period)(nil),
	}
	file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*BiologicallyDerivedProduct_Manipulation_TimeX_DateTime)(nil),
		(*BiologicallyDerivedProduct_Manipulation_TimeX_Period)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_depIdxs,
		MessageInfos:      file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto = out.File
	file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_rawDesc = nil
	file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_goTypes = nil
	file_proto_google_fhir_proto_r4_core_resources_biologically_derived_product_proto_depIdxs = nil
}
