//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: proto/google/fhir/proto/r4/core/resources/parameters.proto

package parameters_go_proto

import (
	any "github.com/golang/protobuf/ptypes/any"
	_ "github.com/google/fhir/go/proto/google/fhir/proto/annotations_go_proto"
	datatypes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/datatypes_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Auto-generated from StructureDefinition for Parameters, last updated
// 2019-11-01T09:29:23.356+11:00. Operation Request or Response. See
// http://hl7.org/fhir/StructureDefinition/Parameters
type Parameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Logical id of this artifact
	Id *datatypes_go_proto.Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *datatypes_go_proto.Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *datatypes_go_proto.Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language  *datatypes_go_proto.Code `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	Parameter []*Parameters_Parameter  `protobuf:"bytes,5,rep,name=parameter,proto3" json:"parameter,omitempty"`
}

func (x *Parameters) Reset() {
	*x = Parameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_parameters_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameters) ProtoMessage() {}

func (x *Parameters) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_parameters_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameters.ProtoReflect.Descriptor instead.
func (*Parameters) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_parameters_proto_rawDescGZIP(), []int{0}
}

func (x *Parameters) GetId() *datatypes_go_proto.Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Parameters) GetMeta() *datatypes_go_proto.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Parameters) GetImplicitRules() *datatypes_go_proto.Uri {
	if x != nil {
		return x.ImplicitRules
	}
	return nil
}

func (x *Parameters) GetLanguage() *datatypes_go_proto.Code {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *Parameters) GetParameter() []*Parameters_Parameter {
	if x != nil {
		return x.Parameter
	}
	return nil
}

// Operation Parameter
type Parameters_Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Name from the definition
	Name  *datatypes_go_proto.String   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Value *Parameters_Parameter_ValueX `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	// If parameter is a whole resource
	Resource *any.Any `protobuf:"bytes,6,opt,name=resource,proto3" json:"resource,omitempty"`
	// Named part of a multi-part parameter
	Part []*Parameters_Parameter `protobuf:"bytes,7,rep,name=part,proto3" json:"part,omitempty"`
}

func (x *Parameters_Parameter) Reset() {
	*x = Parameters_Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_parameters_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameters_Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameters_Parameter) ProtoMessage() {}

func (x *Parameters_Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_parameters_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameters_Parameter.ProtoReflect.Descriptor instead.
func (*Parameters_Parameter) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_parameters_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Parameters_Parameter) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Parameters_Parameter) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *Parameters_Parameter) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *Parameters_Parameter) GetName() *datatypes_go_proto.String {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Parameters_Parameter) GetValue() *Parameters_Parameter_ValueX {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Parameters_Parameter) GetResource() *any.Any {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Parameters_Parameter) GetPart() []*Parameters_Parameter {
	if x != nil {
		return x.Part
	}
	return nil
}

// If parameter is a data type
type Parameters_Parameter_ValueX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*Parameters_Parameter_ValueX_Base64Binary
	//	*Parameters_Parameter_ValueX_Boolean
	//	*Parameters_Parameter_ValueX_Canonical
	//	*Parameters_Parameter_ValueX_Code
	//	*Parameters_Parameter_ValueX_Date
	//	*Parameters_Parameter_ValueX_DateTime
	//	*Parameters_Parameter_ValueX_Decimal
	//	*Parameters_Parameter_ValueX_Id
	//	*Parameters_Parameter_ValueX_Instant
	//	*Parameters_Parameter_ValueX_Integer
	//	*Parameters_Parameter_ValueX_Markdown
	//	*Parameters_Parameter_ValueX_Oid
	//	*Parameters_Parameter_ValueX_PositiveInt
	//	*Parameters_Parameter_ValueX_StringValue
	//	*Parameters_Parameter_ValueX_Time
	//	*Parameters_Parameter_ValueX_UnsignedInt
	//	*Parameters_Parameter_ValueX_Uri
	//	*Parameters_Parameter_ValueX_Url
	//	*Parameters_Parameter_ValueX_Uuid
	//	*Parameters_Parameter_ValueX_Address
	//	*Parameters_Parameter_ValueX_Age
	//	*Parameters_Parameter_ValueX_Annotation
	//	*Parameters_Parameter_ValueX_Attachment
	//	*Parameters_Parameter_ValueX_CodeableConcept
	//	*Parameters_Parameter_ValueX_Coding
	//	*Parameters_Parameter_ValueX_ContactPoint
	//	*Parameters_Parameter_ValueX_Count
	//	*Parameters_Parameter_ValueX_Distance
	//	*Parameters_Parameter_ValueX_Duration
	//	*Parameters_Parameter_ValueX_HumanName
	//	*Parameters_Parameter_ValueX_Identifier
	//	*Parameters_Parameter_ValueX_Money
	//	*Parameters_Parameter_ValueX_Period
	//	*Parameters_Parameter_ValueX_Quantity
	//	*Parameters_Parameter_ValueX_Range
	//	*Parameters_Parameter_ValueX_Ratio
	//	*Parameters_Parameter_ValueX_Reference
	//	*Parameters_Parameter_ValueX_SampledData
	//	*Parameters_Parameter_ValueX_Signature
	//	*Parameters_Parameter_ValueX_Timing
	//	*Parameters_Parameter_ValueX_ContactDetail
	//	*Parameters_Parameter_ValueX_Contributor
	//	*Parameters_Parameter_ValueX_DataRequirement
	//	*Parameters_Parameter_ValueX_Expression
	//	*Parameters_Parameter_ValueX_ParameterDefinition
	//	*Parameters_Parameter_ValueX_RelatedArtifact
	//	*Parameters_Parameter_ValueX_TriggerDefinition
	//	*Parameters_Parameter_ValueX_UsageContext
	//	*Parameters_Parameter_ValueX_Dosage
	//	*Parameters_Parameter_ValueX_Meta
	Choice isParameters_Parameter_ValueX_Choice `protobuf_oneof:"choice"`
}

func (x *Parameters_Parameter_ValueX) Reset() {
	*x = Parameters_Parameter_ValueX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_parameters_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parameters_Parameter_ValueX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parameters_Parameter_ValueX) ProtoMessage() {}

func (x *Parameters_Parameter_ValueX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_parameters_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parameters_Parameter_ValueX.ProtoReflect.Descriptor instead.
func (*Parameters_Parameter_ValueX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_parameters_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (m *Parameters_Parameter_ValueX) GetChoice() isParameters_Parameter_ValueX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetBase64Binary() *datatypes_go_proto.Base64Binary {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Base64Binary); ok {
		return x.Base64Binary
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetBoolean() *datatypes_go_proto.Boolean {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Boolean); ok {
		return x.Boolean
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetCanonical() *datatypes_go_proto.Canonical {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Canonical); ok {
		return x.Canonical
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetCode() *datatypes_go_proto.Code {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Code); ok {
		return x.Code
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetDate() *datatypes_go_proto.Date {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Date); ok {
		return x.Date
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetDateTime() *datatypes_go_proto.DateTime {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_DateTime); ok {
		return x.DateTime
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetDecimal() *datatypes_go_proto.Decimal {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Decimal); ok {
		return x.Decimal
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetId() *datatypes_go_proto.Id {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Id); ok {
		return x.Id
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetInstant() *datatypes_go_proto.Instant {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Instant); ok {
		return x.Instant
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetInteger() *datatypes_go_proto.Integer {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Integer); ok {
		return x.Integer
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetMarkdown() *datatypes_go_proto.Markdown {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Markdown); ok {
		return x.Markdown
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetOid() *datatypes_go_proto.Oid {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Oid); ok {
		return x.Oid
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetPositiveInt() *datatypes_go_proto.PositiveInt {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetStringValue() *datatypes_go_proto.String {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetTime() *datatypes_go_proto.Time {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Time); ok {
		return x.Time
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetUnsignedInt() *datatypes_go_proto.UnsignedInt {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_UnsignedInt); ok {
		return x.UnsignedInt
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetUri() *datatypes_go_proto.Uri {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Uri); ok {
		return x.Uri
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetUrl() *datatypes_go_proto.Url {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Url); ok {
		return x.Url
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetUuid() *datatypes_go_proto.Uuid {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Uuid); ok {
		return x.Uuid
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetAddress() *datatypes_go_proto.Address {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Address); ok {
		return x.Address
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetAge() *datatypes_go_proto.Age {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Age); ok {
		return x.Age
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetAnnotation() *datatypes_go_proto.Annotation {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Annotation); ok {
		return x.Annotation
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetAttachment() *datatypes_go_proto.Attachment {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Attachment); ok {
		return x.Attachment
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetCodeableConcept() *datatypes_go_proto.CodeableConcept {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_CodeableConcept); ok {
		return x.CodeableConcept
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetCoding() *datatypes_go_proto.Coding {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Coding); ok {
		return x.Coding
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetContactPoint() *datatypes_go_proto.ContactPoint {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_ContactPoint); ok {
		return x.ContactPoint
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetCount() *datatypes_go_proto.Count {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Count); ok {
		return x.Count
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetDistance() *datatypes_go_proto.Distance {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Distance); ok {
		return x.Distance
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetDuration() *datatypes_go_proto.Duration {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Duration); ok {
		return x.Duration
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetHumanName() *datatypes_go_proto.HumanName {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_HumanName); ok {
		return x.HumanName
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetIdentifier() *datatypes_go_proto.Identifier {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Identifier); ok {
		return x.Identifier
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetMoney() *datatypes_go_proto.Money {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Money); ok {
		return x.Money
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetPeriod() *datatypes_go_proto.Period {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Period); ok {
		return x.Period
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetQuantity() *datatypes_go_proto.Quantity {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Quantity); ok {
		return x.Quantity
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetRange() *datatypes_go_proto.Range {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Range); ok {
		return x.Range
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetRatio() *datatypes_go_proto.Ratio {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Ratio); ok {
		return x.Ratio
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetReference() *datatypes_go_proto.Reference {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Reference); ok {
		return x.Reference
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetSampledData() *datatypes_go_proto.SampledData {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_SampledData); ok {
		return x.SampledData
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetSignature() *datatypes_go_proto.Signature {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Signature); ok {
		return x.Signature
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetTiming() *datatypes_go_proto.Timing {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Timing); ok {
		return x.Timing
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetContactDetail() *datatypes_go_proto.ContactDetail {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_ContactDetail); ok {
		return x.ContactDetail
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetContributor() *datatypes_go_proto.Contributor {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Contributor); ok {
		return x.Contributor
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetDataRequirement() *datatypes_go_proto.DataRequirement {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_DataRequirement); ok {
		return x.DataRequirement
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetExpression() *datatypes_go_proto.Expression {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Expression); ok {
		return x.Expression
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetParameterDefinition() *datatypes_go_proto.ParameterDefinition {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_ParameterDefinition); ok {
		return x.ParameterDefinition
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetRelatedArtifact() *datatypes_go_proto.RelatedArtifact {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_RelatedArtifact); ok {
		return x.RelatedArtifact
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetTriggerDefinition() *datatypes_go_proto.TriggerDefinition {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_TriggerDefinition); ok {
		return x.TriggerDefinition
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetUsageContext() *datatypes_go_proto.UsageContext {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_UsageContext); ok {
		return x.UsageContext
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetDosage() *datatypes_go_proto.Dosage {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Dosage); ok {
		return x.Dosage
	}
	return nil
}

func (x *Parameters_Parameter_ValueX) GetMeta() *datatypes_go_proto.Meta {
	if x, ok := x.GetChoice().(*Parameters_Parameter_ValueX_Meta); ok {
		return x.Meta
	}
	return nil
}

type isParameters_Parameter_ValueX_Choice interface {
	isParameters_Parameter_ValueX_Choice()
}

type Parameters_Parameter_ValueX_Base64Binary struct {
	Base64Binary *datatypes_go_proto.Base64Binary `protobuf:"bytes,1,opt,name=base64_binary,json=base64Binary,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Boolean struct {
	Boolean *datatypes_go_proto.Boolean `protobuf:"bytes,2,opt,name=boolean,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Canonical struct {
	Canonical *datatypes_go_proto.Canonical `protobuf:"bytes,3,opt,name=canonical,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Code struct {
	Code *datatypes_go_proto.Code `protobuf:"bytes,4,opt,name=code,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Date struct {
	Date *datatypes_go_proto.Date `protobuf:"bytes,5,opt,name=date,proto3,oneof"`
}

type Parameters_Parameter_ValueX_DateTime struct {
	DateTime *datatypes_go_proto.DateTime `protobuf:"bytes,6,opt,name=date_time,json=dateTime,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Decimal struct {
	Decimal *datatypes_go_proto.Decimal `protobuf:"bytes,7,opt,name=decimal,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Id struct {
	Id *datatypes_go_proto.Id `protobuf:"bytes,8,opt,name=id,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Instant struct {
	Instant *datatypes_go_proto.Instant `protobuf:"bytes,9,opt,name=instant,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Integer struct {
	Integer *datatypes_go_proto.Integer `protobuf:"bytes,10,opt,name=integer,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Markdown struct {
	Markdown *datatypes_go_proto.Markdown `protobuf:"bytes,11,opt,name=markdown,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Oid struct {
	Oid *datatypes_go_proto.Oid `protobuf:"bytes,12,opt,name=oid,proto3,oneof"`
}

type Parameters_Parameter_ValueX_PositiveInt struct {
	PositiveInt *datatypes_go_proto.PositiveInt `protobuf:"bytes,13,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type Parameters_Parameter_ValueX_StringValue struct {
	StringValue *datatypes_go_proto.String `protobuf:"bytes,14,opt,name=string_value,json=string,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Time struct {
	Time *datatypes_go_proto.Time `protobuf:"bytes,15,opt,name=time,proto3,oneof"`
}

type Parameters_Parameter_ValueX_UnsignedInt struct {
	UnsignedInt *datatypes_go_proto.UnsignedInt `protobuf:"bytes,16,opt,name=unsigned_int,json=unsignedInt,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Uri struct {
	Uri *datatypes_go_proto.Uri `protobuf:"bytes,17,opt,name=uri,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Url struct {
	Url *datatypes_go_proto.Url `protobuf:"bytes,18,opt,name=url,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Uuid struct {
	Uuid *datatypes_go_proto.Uuid `protobuf:"bytes,19,opt,name=uuid,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Address struct {
	Address *datatypes_go_proto.Address `protobuf:"bytes,20,opt,name=address,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Age struct {
	Age *datatypes_go_proto.Age `protobuf:"bytes,21,opt,name=age,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Annotation struct {
	Annotation *datatypes_go_proto.Annotation `protobuf:"bytes,22,opt,name=annotation,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Attachment struct {
	Attachment *datatypes_go_proto.Attachment `protobuf:"bytes,23,opt,name=attachment,proto3,oneof"`
}

type Parameters_Parameter_ValueX_CodeableConcept struct {
	CodeableConcept *datatypes_go_proto.CodeableConcept `protobuf:"bytes,24,opt,name=codeable_concept,json=codeableConcept,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Coding struct {
	Coding *datatypes_go_proto.Coding `protobuf:"bytes,25,opt,name=coding,proto3,oneof"`
}

type Parameters_Parameter_ValueX_ContactPoint struct {
	ContactPoint *datatypes_go_proto.ContactPoint `protobuf:"bytes,26,opt,name=contact_point,json=contactPoint,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Count struct {
	Count *datatypes_go_proto.Count `protobuf:"bytes,27,opt,name=count,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Distance struct {
	Distance *datatypes_go_proto.Distance `protobuf:"bytes,28,opt,name=distance,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Duration struct {
	Duration *datatypes_go_proto.Duration `protobuf:"bytes,29,opt,name=duration,proto3,oneof"`
}

type Parameters_Parameter_ValueX_HumanName struct {
	HumanName *datatypes_go_proto.HumanName `protobuf:"bytes,30,opt,name=human_name,json=humanName,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Identifier struct {
	Identifier *datatypes_go_proto.Identifier `protobuf:"bytes,31,opt,name=identifier,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Money struct {
	Money *datatypes_go_proto.Money `protobuf:"bytes,32,opt,name=money,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Period struct {
	Period *datatypes_go_proto.Period `protobuf:"bytes,33,opt,name=period,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Quantity struct {
	Quantity *datatypes_go_proto.Quantity `protobuf:"bytes,34,opt,name=quantity,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Range struct {
	Range *datatypes_go_proto.Range `protobuf:"bytes,35,opt,name=range,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Ratio struct {
	Ratio *datatypes_go_proto.Ratio `protobuf:"bytes,36,opt,name=ratio,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Reference struct {
	Reference *datatypes_go_proto.Reference `protobuf:"bytes,37,opt,name=reference,proto3,oneof"`
}

type Parameters_Parameter_ValueX_SampledData struct {
	SampledData *datatypes_go_proto.SampledData `protobuf:"bytes,38,opt,name=sampled_data,json=sampledData,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Signature struct {
	Signature *datatypes_go_proto.Signature `protobuf:"bytes,39,opt,name=signature,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Timing struct {
	Timing *datatypes_go_proto.Timing `protobuf:"bytes,40,opt,name=timing,proto3,oneof"`
}

type Parameters_Parameter_ValueX_ContactDetail struct {
	ContactDetail *datatypes_go_proto.ContactDetail `protobuf:"bytes,41,opt,name=contact_detail,json=contactDetail,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Contributor struct {
	Contributor *datatypes_go_proto.Contributor `protobuf:"bytes,42,opt,name=contributor,proto3,oneof"`
}

type Parameters_Parameter_ValueX_DataRequirement struct {
	DataRequirement *datatypes_go_proto.DataRequirement `protobuf:"bytes,43,opt,name=data_requirement,json=dataRequirement,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Expression struct {
	Expression *datatypes_go_proto.Expression `protobuf:"bytes,44,opt,name=expression,proto3,oneof"`
}

type Parameters_Parameter_ValueX_ParameterDefinition struct {
	ParameterDefinition *datatypes_go_proto.ParameterDefinition `protobuf:"bytes,45,opt,name=parameter_definition,json=parameterDefinition,proto3,oneof"`
}

type Parameters_Parameter_ValueX_RelatedArtifact struct {
	RelatedArtifact *datatypes_go_proto.RelatedArtifact `protobuf:"bytes,46,opt,name=related_artifact,json=relatedArtifact,proto3,oneof"`
}

type Parameters_Parameter_ValueX_TriggerDefinition struct {
	TriggerDefinition *datatypes_go_proto.TriggerDefinition `protobuf:"bytes,47,opt,name=trigger_definition,json=triggerDefinition,proto3,oneof"`
}

type Parameters_Parameter_ValueX_UsageContext struct {
	UsageContext *datatypes_go_proto.UsageContext `protobuf:"bytes,48,opt,name=usage_context,json=usageContext,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Dosage struct {
	Dosage *datatypes_go_proto.Dosage `protobuf:"bytes,49,opt,name=dosage,proto3,oneof"`
}

type Parameters_Parameter_ValueX_Meta struct {
	Meta *datatypes_go_proto.Meta `protobuf:"bytes,50,opt,name=meta,proto3,oneof"`
}

func (*Parameters_Parameter_ValueX_Base64Binary) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Boolean) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Canonical) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Code) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Date) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_DateTime) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Decimal) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Id) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Instant) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Integer) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Markdown) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Oid) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_PositiveInt) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_StringValue) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Time) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_UnsignedInt) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Uri) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Url) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Uuid) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Address) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Age) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Annotation) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Attachment) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_CodeableConcept) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Coding) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_ContactPoint) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Count) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Distance) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Duration) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_HumanName) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Identifier) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Money) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Period) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Quantity) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Range) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Ratio) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Reference) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_SampledData) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Signature) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Timing) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_ContactDetail) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Contributor) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_DataRequirement) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Expression) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_ParameterDefinition) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_RelatedArtifact) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_TriggerDefinition) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_UsageContext) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Dosage) isParameters_Parameter_ValueX_Choice() {}

func (*Parameters_Parameter_ValueX_Meta) isParameters_Parameter_ValueX_Choice() {}

var File_proto_google_fhir_proto_r4_core_resources_parameters_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_r4_core_resources_parameters_proto_rawDesc = []byte{
	0x0a, 0x3a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x1f, 0x0a, 0x0a, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12,
	0x3f, 0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72,
	0x69, 0x52, 0x0d, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73,
	0x12, 0x35, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x1a, 0xe8, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x2b,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x58, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x70,
	0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x52, 0x04, 0x70, 0x61, 0x72, 0x74, 0x1a, 0xb3, 0x18, 0x0a, 0x06, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x58, 0x12, 0x48, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x5f,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x48,
	0x00, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12,
	0x38, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x48, 0x00,
	0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x3e, 0x0a, 0x09, 0x63, 0x61, 0x6e,
	0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x09,
	0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x64, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x07, 0x64, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38,
	0x0a, 0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x07, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x48, 0x00, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x64,
	0x6f, 0x77, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x12,
	0x2c, 0x0a, 0x03, 0x6f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x4f, 0x69, 0x64, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x45, 0x0a,
	0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x49, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x49, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x69,
	0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55,
	0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x75, 0x6e,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x69,
	0x48, 0x00, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x2c, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x6c, 0x48, 0x00,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x75, 0x69, 0x64, 0x48, 0x00,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x2c, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x48, 0x00, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x41,
	0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x41, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x51, 0x0a, 0x10, 0x63, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x63, 0x65, 0x70, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x48,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0a, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x48, 0x75, 0x6d, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x09, 0x68, 0x75,
	0x6d, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x35,
	0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x06, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x3b, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x3e, 0x0a, 0x09, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x73, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x3e, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x35, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x4b, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x44, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x51, 0x0a, 0x10, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x41,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x2c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x5d, 0x0a, 0x14, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x51, 0x0a, 0x10, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x74, 0x69,
	0x66, 0x61, 0x63, 0x74, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66, 0x61, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x66,
	0x61, 0x63, 0x74, 0x12, 0x57, 0x0a, 0x12, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x0d,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x30, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x75, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x64, 0x6f, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x31, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x6f, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x3a, 0x06,
	0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x3a, 0x79, 0x9a, 0x86, 0x93, 0xa0, 0x08, 0x73, 0x28, 0x70, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x29, 0x20, 0x6f,
	0x72, 0x20, 0x28, 0x70, 0x61, 0x72, 0x74, 0x2e, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x29, 0x20,
	0x61, 0x6e, 0x64, 0x20, 0x28, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x65, 0x78, 0x69, 0x73, 0x74,
	0x73, 0x28, 0x29, 0x20, 0x78, 0x6f, 0x72, 0x20, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x29, 0x29, 0x3a, 0x3e, 0xc0, 0x9f, 0xe3,
	0xb6, 0x05, 0x03, 0xb2, 0xfe, 0xe4, 0x97, 0x06, 0x32, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f,
	0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x42, 0x7a, 0x0a, 0x17, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x01, 0x5a, 0x57, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x98, 0xc6, 0xb0, 0xb5, 0x07, 0x04, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_google_fhir_proto_r4_core_resources_parameters_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_r4_core_resources_parameters_proto_rawDescData = file_proto_google_fhir_proto_r4_core_resources_parameters_proto_rawDesc
)

func file_proto_google_fhir_proto_r4_core_resources_parameters_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_r4_core_resources_parameters_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_r4_core_resources_parameters_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_r4_core_resources_parameters_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_r4_core_resources_parameters_proto_rawDescData
}

var file_proto_google_fhir_proto_r4_core_resources_parameters_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_google_fhir_proto_r4_core_resources_parameters_proto_goTypes = []interface{}{
	(*Parameters)(nil),                             // 0: google.fhir.r4.core.Parameters
	(*Parameters_Parameter)(nil),                   // 1: google.fhir.r4.core.Parameters.Parameter
	(*Parameters_Parameter_ValueX)(nil),            // 2: google.fhir.r4.core.Parameters.Parameter.ValueX
	(*datatypes_go_proto.Id)(nil),                  // 3: google.fhir.r4.core.Id
	(*datatypes_go_proto.Meta)(nil),                // 4: google.fhir.r4.core.Meta
	(*datatypes_go_proto.Uri)(nil),                 // 5: google.fhir.r4.core.Uri
	(*datatypes_go_proto.Code)(nil),                // 6: google.fhir.r4.core.Code
	(*datatypes_go_proto.String)(nil),              // 7: google.fhir.r4.core.String
	(*datatypes_go_proto.Extension)(nil),           // 8: google.fhir.r4.core.Extension
	(*any.Any)(nil),                                // 9: google.protobuf.Any
	(*datatypes_go_proto.Base64Binary)(nil),        // 10: google.fhir.r4.core.Base64Binary
	(*datatypes_go_proto.Boolean)(nil),             // 11: google.fhir.r4.core.Boolean
	(*datatypes_go_proto.Canonical)(nil),           // 12: google.fhir.r4.core.Canonical
	(*datatypes_go_proto.Date)(nil),                // 13: google.fhir.r4.core.Date
	(*datatypes_go_proto.DateTime)(nil),            // 14: google.fhir.r4.core.DateTime
	(*datatypes_go_proto.Decimal)(nil),             // 15: google.fhir.r4.core.Decimal
	(*datatypes_go_proto.Instant)(nil),             // 16: google.fhir.r4.core.Instant
	(*datatypes_go_proto.Integer)(nil),             // 17: google.fhir.r4.core.Integer
	(*datatypes_go_proto.Markdown)(nil),            // 18: google.fhir.r4.core.Markdown
	(*datatypes_go_proto.Oid)(nil),                 // 19: google.fhir.r4.core.Oid
	(*datatypes_go_proto.PositiveInt)(nil),         // 20: google.fhir.r4.core.PositiveInt
	(*datatypes_go_proto.Time)(nil),                // 21: google.fhir.r4.core.Time
	(*datatypes_go_proto.UnsignedInt)(nil),         // 22: google.fhir.r4.core.UnsignedInt
	(*datatypes_go_proto.Url)(nil),                 // 23: google.fhir.r4.core.Url
	(*datatypes_go_proto.Uuid)(nil),                // 24: google.fhir.r4.core.Uuid
	(*datatypes_go_proto.Address)(nil),             // 25: google.fhir.r4.core.Address
	(*datatypes_go_proto.Age)(nil),                 // 26: google.fhir.r4.core.Age
	(*datatypes_go_proto.Annotation)(nil),          // 27: google.fhir.r4.core.Annotation
	(*datatypes_go_proto.Attachment)(nil),          // 28: google.fhir.r4.core.Attachment
	(*datatypes_go_proto.CodeableConcept)(nil),     // 29: google.fhir.r4.core.CodeableConcept
	(*datatypes_go_proto.Coding)(nil),              // 30: google.fhir.r4.core.Coding
	(*datatypes_go_proto.ContactPoint)(nil),        // 31: google.fhir.r4.core.ContactPoint
	(*datatypes_go_proto.Count)(nil),               // 32: google.fhir.r4.core.Count
	(*datatypes_go_proto.Distance)(nil),            // 33: google.fhir.r4.core.Distance
	(*datatypes_go_proto.Duration)(nil),            // 34: google.fhir.r4.core.Duration
	(*datatypes_go_proto.HumanName)(nil),           // 35: google.fhir.r4.core.HumanName
	(*datatypes_go_proto.Identifier)(nil),          // 36: google.fhir.r4.core.Identifier
	(*datatypes_go_proto.Money)(nil),               // 37: google.fhir.r4.core.Money
	(*datatypes_go_proto.Period)(nil),              // 38: google.fhir.r4.core.Period
	(*datatypes_go_proto.Quantity)(nil),            // 39: google.fhir.r4.core.Quantity
	(*datatypes_go_proto.Range)(nil),               // 40: google.fhir.r4.core.Range
	(*datatypes_go_proto.Ratio)(nil),               // 41: google.fhir.r4.core.Ratio
	(*datatypes_go_proto.Reference)(nil),           // 42: google.fhir.r4.core.Reference
	(*datatypes_go_proto.SampledData)(nil),         // 43: google.fhir.r4.core.SampledData
	(*datatypes_go_proto.Signature)(nil),           // 44: google.fhir.r4.core.Signature
	(*datatypes_go_proto.Timing)(nil),              // 45: google.fhir.r4.core.Timing
	(*datatypes_go_proto.ContactDetail)(nil),       // 46: google.fhir.r4.core.ContactDetail
	(*datatypes_go_proto.Contributor)(nil),         // 47: google.fhir.r4.core.Contributor
	(*datatypes_go_proto.DataRequirement)(nil),     // 48: google.fhir.r4.core.DataRequirement
	(*datatypes_go_proto.Expression)(nil),          // 49: google.fhir.r4.core.Expression
	(*datatypes_go_proto.ParameterDefinition)(nil), // 50: google.fhir.r4.core.ParameterDefinition
	(*datatypes_go_proto.RelatedArtifact)(nil),     // 51: google.fhir.r4.core.RelatedArtifact
	(*datatypes_go_proto.TriggerDefinition)(nil),   // 52: google.fhir.r4.core.TriggerDefinition
	(*datatypes_go_proto.UsageContext)(nil),        // 53: google.fhir.r4.core.UsageContext
	(*datatypes_go_proto.Dosage)(nil),              // 54: google.fhir.r4.core.Dosage
}
var file_proto_google_fhir_proto_r4_core_resources_parameters_proto_depIdxs = []int32{
	3,  // 0: google.fhir.r4.core.Parameters.id:type_name -> google.fhir.r4.core.Id
	4,  // 1: google.fhir.r4.core.Parameters.meta:type_name -> google.fhir.r4.core.Meta
	5,  // 2: google.fhir.r4.core.Parameters.implicit_rules:type_name -> google.fhir.r4.core.Uri
	6,  // 3: google.fhir.r4.core.Parameters.language:type_name -> google.fhir.r4.core.Code
	1,  // 4: google.fhir.r4.core.Parameters.parameter:type_name -> google.fhir.r4.core.Parameters.Parameter
	7,  // 5: google.fhir.r4.core.Parameters.Parameter.id:type_name -> google.fhir.r4.core.String
	8,  // 6: google.fhir.r4.core.Parameters.Parameter.extension:type_name -> google.fhir.r4.core.Extension
	8,  // 7: google.fhir.r4.core.Parameters.Parameter.modifier_extension:type_name -> google.fhir.r4.core.Extension
	7,  // 8: google.fhir.r4.core.Parameters.Parameter.name:type_name -> google.fhir.r4.core.String
	2,  // 9: google.fhir.r4.core.Parameters.Parameter.value:type_name -> google.fhir.r4.core.Parameters.Parameter.ValueX
	9,  // 10: google.fhir.r4.core.Parameters.Parameter.resource:type_name -> google.protobuf.Any
	1,  // 11: google.fhir.r4.core.Parameters.Parameter.part:type_name -> google.fhir.r4.core.Parameters.Parameter
	10, // 12: google.fhir.r4.core.Parameters.Parameter.ValueX.base64_binary:type_name -> google.fhir.r4.core.Base64Binary
	11, // 13: google.fhir.r4.core.Parameters.Parameter.ValueX.boolean:type_name -> google.fhir.r4.core.Boolean
	12, // 14: google.fhir.r4.core.Parameters.Parameter.ValueX.canonical:type_name -> google.fhir.r4.core.Canonical
	6,  // 15: google.fhir.r4.core.Parameters.Parameter.ValueX.code:type_name -> google.fhir.r4.core.Code
	13, // 16: google.fhir.r4.core.Parameters.Parameter.ValueX.date:type_name -> google.fhir.r4.core.Date
	14, // 17: google.fhir.r4.core.Parameters.Parameter.ValueX.date_time:type_name -> google.fhir.r4.core.DateTime
	15, // 18: google.fhir.r4.core.Parameters.Parameter.ValueX.decimal:type_name -> google.fhir.r4.core.Decimal
	3,  // 19: google.fhir.r4.core.Parameters.Parameter.ValueX.id:type_name -> google.fhir.r4.core.Id
	16, // 20: google.fhir.r4.core.Parameters.Parameter.ValueX.instant:type_name -> google.fhir.r4.core.Instant
	17, // 21: google.fhir.r4.core.Parameters.Parameter.ValueX.integer:type_name -> google.fhir.r4.core.Integer
	18, // 22: google.fhir.r4.core.Parameters.Parameter.ValueX.markdown:type_name -> google.fhir.r4.core.Markdown
	19, // 23: google.fhir.r4.core.Parameters.Parameter.ValueX.oid:type_name -> google.fhir.r4.core.Oid
	20, // 24: google.fhir.r4.core.Parameters.Parameter.ValueX.positive_int:type_name -> google.fhir.r4.core.PositiveInt
	7,  // 25: google.fhir.r4.core.Parameters.Parameter.ValueX.string_value:type_name -> google.fhir.r4.core.String
	21, // 26: google.fhir.r4.core.Parameters.Parameter.ValueX.time:type_name -> google.fhir.r4.core.Time
	22, // 27: google.fhir.r4.core.Parameters.Parameter.ValueX.unsigned_int:type_name -> google.fhir.r4.core.UnsignedInt
	5,  // 28: google.fhir.r4.core.Parameters.Parameter.ValueX.uri:type_name -> google.fhir.r4.core.Uri
	23, // 29: google.fhir.r4.core.Parameters.Parameter.ValueX.url:type_name -> google.fhir.r4.core.Url
	24, // 30: google.fhir.r4.core.Parameters.Parameter.ValueX.uuid:type_name -> google.fhir.r4.core.Uuid
	25, // 31: google.fhir.r4.core.Parameters.Parameter.ValueX.address:type_name -> google.fhir.r4.core.Address
	26, // 32: google.fhir.r4.core.Parameters.Parameter.ValueX.age:type_name -> google.fhir.r4.core.Age
	27, // 33: google.fhir.r4.core.Parameters.Parameter.ValueX.annotation:type_name -> google.fhir.r4.core.Annotation
	28, // 34: google.fhir.r4.core.Parameters.Parameter.ValueX.attachment:type_name -> google.fhir.r4.core.Attachment
	29, // 35: google.fhir.r4.core.Parameters.Parameter.ValueX.codeable_concept:type_name -> google.fhir.r4.core.CodeableConcept
	30, // 36: google.fhir.r4.core.Parameters.Parameter.ValueX.coding:type_name -> google.fhir.r4.core.Coding
	31, // 37: google.fhir.r4.core.Parameters.Parameter.ValueX.contact_point:type_name -> google.fhir.r4.core.ContactPoint
	32, // 38: google.fhir.r4.core.Parameters.Parameter.ValueX.count:type_name -> google.fhir.r4.core.Count
	33, // 39: google.fhir.r4.core.Parameters.Parameter.ValueX.distance:type_name -> google.fhir.r4.core.Distance
	34, // 40: google.fhir.r4.core.Parameters.Parameter.ValueX.duration:type_name -> google.fhir.r4.core.Duration
	35, // 41: google.fhir.r4.core.Parameters.Parameter.ValueX.human_name:type_name -> google.fhir.r4.core.HumanName
	36, // 42: google.fhir.r4.core.Parameters.Parameter.ValueX.identifier:type_name -> google.fhir.r4.core.Identifier
	37, // 43: google.fhir.r4.core.Parameters.Parameter.ValueX.money:type_name -> google.fhir.r4.core.Money
	38, // 44: google.fhir.r4.core.Parameters.Parameter.ValueX.period:type_name -> google.fhir.r4.core.Period
	39, // 45: google.fhir.r4.core.Parameters.Parameter.ValueX.quantity:type_name -> google.fhir.r4.core.Quantity
	40, // 46: google.fhir.r4.core.Parameters.Parameter.ValueX.range:type_name -> google.fhir.r4.core.Range
	41, // 47: google.fhir.r4.core.Parameters.Parameter.ValueX.ratio:type_name -> google.fhir.r4.core.Ratio
	42, // 48: google.fhir.r4.core.Parameters.Parameter.ValueX.reference:type_name -> google.fhir.r4.core.Reference
	43, // 49: google.fhir.r4.core.Parameters.Parameter.ValueX.sampled_data:type_name -> google.fhir.r4.core.SampledData
	44, // 50: google.fhir.r4.core.Parameters.Parameter.ValueX.signature:type_name -> google.fhir.r4.core.Signature
	45, // 51: google.fhir.r4.core.Parameters.Parameter.ValueX.timing:type_name -> google.fhir.r4.core.Timing
	46, // 52: google.fhir.r4.core.Parameters.Parameter.ValueX.contact_detail:type_name -> google.fhir.r4.core.ContactDetail
	47, // 53: google.fhir.r4.core.Parameters.Parameter.ValueX.contributor:type_name -> google.fhir.r4.core.Contributor
	48, // 54: google.fhir.r4.core.Parameters.Parameter.ValueX.data_requirement:type_name -> google.fhir.r4.core.DataRequirement
	49, // 55: google.fhir.r4.core.Parameters.Parameter.ValueX.expression:type_name -> google.fhir.r4.core.Expression
	50, // 56: google.fhir.r4.core.Parameters.Parameter.ValueX.parameter_definition:type_name -> google.fhir.r4.core.ParameterDefinition
	51, // 57: google.fhir.r4.core.Parameters.Parameter.ValueX.related_artifact:type_name -> google.fhir.r4.core.RelatedArtifact
	52, // 58: google.fhir.r4.core.Parameters.Parameter.ValueX.trigger_definition:type_name -> google.fhir.r4.core.TriggerDefinition
	53, // 59: google.fhir.r4.core.Parameters.Parameter.ValueX.usage_context:type_name -> google.fhir.r4.core.UsageContext
	54, // 60: google.fhir.r4.core.Parameters.Parameter.ValueX.dosage:type_name -> google.fhir.r4.core.Dosage
	4,  // 61: google.fhir.r4.core.Parameters.Parameter.ValueX.meta:type_name -> google.fhir.r4.core.Meta
	62, // [62:62] is the sub-list for method output_type
	62, // [62:62] is the sub-list for method input_type
	62, // [62:62] is the sub-list for extension type_name
	62, // [62:62] is the sub-list for extension extendee
	0,  // [0:62] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_r4_core_resources_parameters_proto_init() }
func file_proto_google_fhir_proto_r4_core_resources_parameters_proto_init() {
	if File_proto_google_fhir_proto_r4_core_resources_parameters_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_r4_core_resources_parameters_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_parameters_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameters_Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_parameters_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parameters_Parameter_ValueX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_google_fhir_proto_r4_core_resources_parameters_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Parameters_Parameter_ValueX_Base64Binary)(nil),
		(*Parameters_Parameter_ValueX_Boolean)(nil),
		(*Parameters_Parameter_ValueX_Canonical)(nil),
		(*Parameters_Parameter_ValueX_Code)(nil),
		(*Parameters_Parameter_ValueX_Date)(nil),
		(*Parameters_Parameter_ValueX_DateTime)(nil),
		(*Parameters_Parameter_ValueX_Decimal)(nil),
		(*Parameters_Parameter_ValueX_Id)(nil),
		(*Parameters_Parameter_ValueX_Instant)(nil),
		(*Parameters_Parameter_ValueX_Integer)(nil),
		(*Parameters_Parameter_ValueX_Markdown)(nil),
		(*Parameters_Parameter_ValueX_Oid)(nil),
		(*Parameters_Parameter_ValueX_PositiveInt)(nil),
		(*Parameters_Parameter_ValueX_StringValue)(nil),
		(*Parameters_Parameter_ValueX_Time)(nil),
		(*Parameters_Parameter_ValueX_UnsignedInt)(nil),
		(*Parameters_Parameter_ValueX_Uri)(nil),
		(*Parameters_Parameter_ValueX_Url)(nil),
		(*Parameters_Parameter_ValueX_Uuid)(nil),
		(*Parameters_Parameter_ValueX_Address)(nil),
		(*Parameters_Parameter_ValueX_Age)(nil),
		(*Parameters_Parameter_ValueX_Annotation)(nil),
		(*Parameters_Parameter_ValueX_Attachment)(nil),
		(*Parameters_Parameter_ValueX_CodeableConcept)(nil),
		(*Parameters_Parameter_ValueX_Coding)(nil),
		(*Parameters_Parameter_ValueX_ContactPoint)(nil),
		(*Parameters_Parameter_ValueX_Count)(nil),
		(*Parameters_Parameter_ValueX_Distance)(nil),
		(*Parameters_Parameter_ValueX_Duration)(nil),
		(*Parameters_Parameter_ValueX_HumanName)(nil),
		(*Parameters_Parameter_ValueX_Identifier)(nil),
		(*Parameters_Parameter_ValueX_Money)(nil),
		(*Parameters_Parameter_ValueX_Period)(nil),
		(*Parameters_Parameter_ValueX_Quantity)(nil),
		(*Parameters_Parameter_ValueX_Range)(nil),
		(*Parameters_Parameter_ValueX_Ratio)(nil),
		(*Parameters_Parameter_ValueX_Reference)(nil),
		(*Parameters_Parameter_ValueX_SampledData)(nil),
		(*Parameters_Parameter_ValueX_Signature)(nil),
		(*Parameters_Parameter_ValueX_Timing)(nil),
		(*Parameters_Parameter_ValueX_ContactDetail)(nil),
		(*Parameters_Parameter_ValueX_Contributor)(nil),
		(*Parameters_Parameter_ValueX_DataRequirement)(nil),
		(*Parameters_Parameter_ValueX_Expression)(nil),
		(*Parameters_Parameter_ValueX_ParameterDefinition)(nil),
		(*Parameters_Parameter_ValueX_RelatedArtifact)(nil),
		(*Parameters_Parameter_ValueX_TriggerDefinition)(nil),
		(*Parameters_Parameter_ValueX_UsageContext)(nil),
		(*Parameters_Parameter_ValueX_Dosage)(nil),
		(*Parameters_Parameter_ValueX_Meta)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_r4_core_resources_parameters_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_r4_core_resources_parameters_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_r4_core_resources_parameters_proto_depIdxs,
		MessageInfos:      file_proto_google_fhir_proto_r4_core_resources_parameters_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_r4_core_resources_parameters_proto = out.File
	file_proto_google_fhir_proto_r4_core_resources_parameters_proto_rawDesc = nil
	file_proto_google_fhir_proto_r4_core_resources_parameters_proto_goTypes = nil
	file_proto_google_fhir_proto_r4_core_resources_parameters_proto_depIdxs = nil
}
