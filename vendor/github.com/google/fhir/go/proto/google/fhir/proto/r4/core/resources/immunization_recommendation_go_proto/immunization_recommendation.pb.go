//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: proto/google/fhir/proto/r4/core/resources/immunization_recommendation.proto

package immunization_recommendation_go_proto

import (
	any "github.com/golang/protobuf/ptypes/any"
	_ "github.com/google/fhir/go/proto/google/fhir/proto/annotations_go_proto"
	datatypes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/datatypes_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Auto-generated from StructureDefinition for ImmunizationRecommendation, last
// updated 2019-11-01T09:29:23.356+11:00. Guidance or advice relating to an
// immunization. See
// http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation
type ImmunizationRecommendation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Logical id of this artifact
	Id *datatypes_go_proto.Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *datatypes_go_proto.Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *datatypes_go_proto.Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *datatypes_go_proto.Code `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *datatypes_go_proto.Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*any.Any `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,8,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,9,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Business identifier
	Identifier []*datatypes_go_proto.Identifier `protobuf:"bytes,10,rep,name=identifier,proto3" json:"identifier,omitempty"`
	// Who this profile is for
	Patient *datatypes_go_proto.Reference `protobuf:"bytes,11,opt,name=patient,proto3" json:"patient,omitempty"`
	// Date recommendation(s) created
	Date *datatypes_go_proto.DateTime `protobuf:"bytes,12,opt,name=date,proto3" json:"date,omitempty"`
	// Who is responsible for protocol
	Authority      *datatypes_go_proto.Reference                `protobuf:"bytes,13,opt,name=authority,proto3" json:"authority,omitempty"`
	Recommendation []*ImmunizationRecommendation_Recommendation `protobuf:"bytes,14,rep,name=recommendation,proto3" json:"recommendation,omitempty"`
}

func (x *ImmunizationRecommendation) Reset() {
	*x = ImmunizationRecommendation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImmunizationRecommendation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImmunizationRecommendation) ProtoMessage() {}

func (x *ImmunizationRecommendation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImmunizationRecommendation.ProtoReflect.Descriptor instead.
func (*ImmunizationRecommendation) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDescGZIP(), []int{0}
}

func (x *ImmunizationRecommendation) GetId() *datatypes_go_proto.Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ImmunizationRecommendation) GetMeta() *datatypes_go_proto.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ImmunizationRecommendation) GetImplicitRules() *datatypes_go_proto.Uri {
	if x != nil {
		return x.ImplicitRules
	}
	return nil
}

func (x *ImmunizationRecommendation) GetLanguage() *datatypes_go_proto.Code {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *ImmunizationRecommendation) GetText() *datatypes_go_proto.Narrative {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *ImmunizationRecommendation) GetContained() []*any.Any {
	if x != nil {
		return x.Contained
	}
	return nil
}

func (x *ImmunizationRecommendation) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *ImmunizationRecommendation) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *ImmunizationRecommendation) GetIdentifier() []*datatypes_go_proto.Identifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *ImmunizationRecommendation) GetPatient() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Patient
	}
	return nil
}

func (x *ImmunizationRecommendation) GetDate() *datatypes_go_proto.DateTime {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ImmunizationRecommendation) GetAuthority() *datatypes_go_proto.Reference {
	if x != nil {
		return x.Authority
	}
	return nil
}

func (x *ImmunizationRecommendation) GetRecommendation() []*ImmunizationRecommendation_Recommendation {
	if x != nil {
		return x.Recommendation
	}
	return nil
}

// Vaccine administration recommendations
type ImmunizationRecommendation_Recommendation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Vaccine  or vaccine group recommendation applies to
	VaccineCode []*datatypes_go_proto.CodeableConcept `protobuf:"bytes,4,rep,name=vaccine_code,json=vaccineCode,proto3" json:"vaccine_code,omitempty"`
	// Disease to be immunized against
	TargetDisease *datatypes_go_proto.CodeableConcept `protobuf:"bytes,5,opt,name=target_disease,json=targetDisease,proto3" json:"target_disease,omitempty"`
	// Vaccine which is contraindicated to fulfill the recommendation
	ContraindicatedVaccineCode []*datatypes_go_proto.CodeableConcept `protobuf:"bytes,6,rep,name=contraindicated_vaccine_code,json=contraindicatedVaccineCode,proto3" json:"contraindicated_vaccine_code,omitempty"`
	// Vaccine recommendation status
	ForecastStatus *datatypes_go_proto.CodeableConcept `protobuf:"bytes,7,opt,name=forecast_status,json=forecastStatus,proto3" json:"forecast_status,omitempty"`
	// Vaccine administration status reason
	ForecastReason []*datatypes_go_proto.CodeableConcept                      `protobuf:"bytes,8,rep,name=forecast_reason,json=forecastReason,proto3" json:"forecast_reason,omitempty"`
	DateCriterion  []*ImmunizationRecommendation_Recommendation_DateCriterion `protobuf:"bytes,9,rep,name=date_criterion,json=dateCriterion,proto3" json:"date_criterion,omitempty"`
	// Protocol details
	Description *datatypes_go_proto.String `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	// Name of vaccination series
	Series      *datatypes_go_proto.String                              `protobuf:"bytes,11,opt,name=series,proto3" json:"series,omitempty"`
	DoseNumber  *ImmunizationRecommendation_Recommendation_DoseNumberX  `protobuf:"bytes,12,opt,name=dose_number,json=doseNumber,proto3" json:"dose_number,omitempty"`
	SeriesDoses *ImmunizationRecommendation_Recommendation_SeriesDosesX `protobuf:"bytes,13,opt,name=series_doses,json=seriesDoses,proto3" json:"series_doses,omitempty"`
	// Past immunizations supporting recommendation
	SupportingImmunization []*datatypes_go_proto.Reference `protobuf:"bytes,14,rep,name=supporting_immunization,json=supportingImmunization,proto3" json:"supporting_immunization,omitempty"`
	// Patient observations supporting recommendation
	SupportingPatientInformation []*datatypes_go_proto.Reference `protobuf:"bytes,15,rep,name=supporting_patient_information,json=supportingPatientInformation,proto3" json:"supporting_patient_information,omitempty"`
}

func (x *ImmunizationRecommendation_Recommendation) Reset() {
	*x = ImmunizationRecommendation_Recommendation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImmunizationRecommendation_Recommendation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImmunizationRecommendation_Recommendation) ProtoMessage() {}

func (x *ImmunizationRecommendation_Recommendation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImmunizationRecommendation_Recommendation.ProtoReflect.Descriptor instead.
func (*ImmunizationRecommendation_Recommendation) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ImmunizationRecommendation_Recommendation) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation) GetVaccineCode() []*datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.VaccineCode
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation) GetTargetDisease() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.TargetDisease
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation) GetContraindicatedVaccineCode() []*datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.ContraindicatedVaccineCode
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation) GetForecastStatus() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.ForecastStatus
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation) GetForecastReason() []*datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.ForecastReason
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation) GetDateCriterion() []*ImmunizationRecommendation_Recommendation_DateCriterion {
	if x != nil {
		return x.DateCriterion
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation) GetDescription() *datatypes_go_proto.String {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation) GetSeries() *datatypes_go_proto.String {
	if x != nil {
		return x.Series
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation) GetDoseNumber() *ImmunizationRecommendation_Recommendation_DoseNumberX {
	if x != nil {
		return x.DoseNumber
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation) GetSeriesDoses() *ImmunizationRecommendation_Recommendation_SeriesDosesX {
	if x != nil {
		return x.SeriesDoses
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation) GetSupportingImmunization() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.SupportingImmunization
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation) GetSupportingPatientInformation() []*datatypes_go_proto.Reference {
	if x != nil {
		return x.SupportingPatientInformation
	}
	return nil
}

// Dates governing proposed immunization
type ImmunizationRecommendation_Recommendation_DateCriterion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Type of date
	Code *datatypes_go_proto.CodeableConcept `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
	// Recommended date
	Value *datatypes_go_proto.DateTime `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ImmunizationRecommendation_Recommendation_DateCriterion) Reset() {
	*x = ImmunizationRecommendation_Recommendation_DateCriterion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImmunizationRecommendation_Recommendation_DateCriterion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImmunizationRecommendation_Recommendation_DateCriterion) ProtoMessage() {}

func (x *ImmunizationRecommendation_Recommendation_DateCriterion) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImmunizationRecommendation_Recommendation_DateCriterion.ProtoReflect.Descriptor instead.
func (*ImmunizationRecommendation_Recommendation_DateCriterion) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *ImmunizationRecommendation_Recommendation_DateCriterion) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation_DateCriterion) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation_DateCriterion) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation_DateCriterion) GetCode() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation_DateCriterion) GetValue() *datatypes_go_proto.DateTime {
	if x != nil {
		return x.Value
	}
	return nil
}

// Recommended dose number within series
type ImmunizationRecommendation_Recommendation_DoseNumberX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*ImmunizationRecommendation_Recommendation_DoseNumberX_PositiveInt
	//	*ImmunizationRecommendation_Recommendation_DoseNumberX_StringValue
	Choice isImmunizationRecommendation_Recommendation_DoseNumberX_Choice `protobuf_oneof:"choice"`
}

func (x *ImmunizationRecommendation_Recommendation_DoseNumberX) Reset() {
	*x = ImmunizationRecommendation_Recommendation_DoseNumberX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImmunizationRecommendation_Recommendation_DoseNumberX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImmunizationRecommendation_Recommendation_DoseNumberX) ProtoMessage() {}

func (x *ImmunizationRecommendation_Recommendation_DoseNumberX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImmunizationRecommendation_Recommendation_DoseNumberX.ProtoReflect.Descriptor instead.
func (*ImmunizationRecommendation_Recommendation_DoseNumberX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (m *ImmunizationRecommendation_Recommendation_DoseNumberX) GetChoice() isImmunizationRecommendation_Recommendation_DoseNumberX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation_DoseNumberX) GetPositiveInt() *datatypes_go_proto.PositiveInt {
	if x, ok := x.GetChoice().(*ImmunizationRecommendation_Recommendation_DoseNumberX_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation_DoseNumberX) GetStringValue() *datatypes_go_proto.String {
	if x, ok := x.GetChoice().(*ImmunizationRecommendation_Recommendation_DoseNumberX_StringValue); ok {
		return x.StringValue
	}
	return nil
}

type isImmunizationRecommendation_Recommendation_DoseNumberX_Choice interface {
	isImmunizationRecommendation_Recommendation_DoseNumberX_Choice()
}

type ImmunizationRecommendation_Recommendation_DoseNumberX_PositiveInt struct {
	PositiveInt *datatypes_go_proto.PositiveInt `protobuf:"bytes,1,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type ImmunizationRecommendation_Recommendation_DoseNumberX_StringValue struct {
	StringValue *datatypes_go_proto.String `protobuf:"bytes,2,opt,name=string_value,json=string,proto3,oneof"`
}

func (*ImmunizationRecommendation_Recommendation_DoseNumberX_PositiveInt) isImmunizationRecommendation_Recommendation_DoseNumberX_Choice() {
}

func (*ImmunizationRecommendation_Recommendation_DoseNumberX_StringValue) isImmunizationRecommendation_Recommendation_DoseNumberX_Choice() {
}

// Recommended number of doses for immunity
type ImmunizationRecommendation_Recommendation_SeriesDosesX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Choice:
	//	*ImmunizationRecommendation_Recommendation_SeriesDosesX_PositiveInt
	//	*ImmunizationRecommendation_Recommendation_SeriesDosesX_StringValue
	Choice isImmunizationRecommendation_Recommendation_SeriesDosesX_Choice `protobuf_oneof:"choice"`
}

func (x *ImmunizationRecommendation_Recommendation_SeriesDosesX) Reset() {
	*x = ImmunizationRecommendation_Recommendation_SeriesDosesX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImmunizationRecommendation_Recommendation_SeriesDosesX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImmunizationRecommendation_Recommendation_SeriesDosesX) ProtoMessage() {}

func (x *ImmunizationRecommendation_Recommendation_SeriesDosesX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImmunizationRecommendation_Recommendation_SeriesDosesX.ProtoReflect.Descriptor instead.
func (*ImmunizationRecommendation_Recommendation_SeriesDosesX) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (m *ImmunizationRecommendation_Recommendation_SeriesDosesX) GetChoice() isImmunizationRecommendation_Recommendation_SeriesDosesX_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation_SeriesDosesX) GetPositiveInt() *datatypes_go_proto.PositiveInt {
	if x, ok := x.GetChoice().(*ImmunizationRecommendation_Recommendation_SeriesDosesX_PositiveInt); ok {
		return x.PositiveInt
	}
	return nil
}

func (x *ImmunizationRecommendation_Recommendation_SeriesDosesX) GetStringValue() *datatypes_go_proto.String {
	if x, ok := x.GetChoice().(*ImmunizationRecommendation_Recommendation_SeriesDosesX_StringValue); ok {
		return x.StringValue
	}
	return nil
}

type isImmunizationRecommendation_Recommendation_SeriesDosesX_Choice interface {
	isImmunizationRecommendation_Recommendation_SeriesDosesX_Choice()
}

type ImmunizationRecommendation_Recommendation_SeriesDosesX_PositiveInt struct {
	PositiveInt *datatypes_go_proto.PositiveInt `protobuf:"bytes,1,opt,name=positive_int,json=positiveInt,proto3,oneof"`
}

type ImmunizationRecommendation_Recommendation_SeriesDosesX_StringValue struct {
	StringValue *datatypes_go_proto.String `protobuf:"bytes,2,opt,name=string_value,json=string,proto3,oneof"`
}

func (*ImmunizationRecommendation_Recommendation_SeriesDosesX_PositiveInt) isImmunizationRecommendation_Recommendation_SeriesDosesX_Choice() {
}

func (*ImmunizationRecommendation_Recommendation_SeriesDosesX_StringValue) isImmunizationRecommendation_Recommendation_SeriesDosesX_Choice() {
}

var File_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDesc = []byte{
	0x0a, 0x4b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x17, 0x0a, 0x1a, 0x49, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x3f, 0x0a, 0x0e, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55,
	0x72, 0x69, 0x52, 0x0d, 0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x12, 0x35, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x61, 0x72,
	0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x32, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64,
	0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d,
	0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x4d,
	0x0a, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42,
	0x13, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x07, 0x50, 0x61, 0x74,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb,
	0x04, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x12, 0xf2, 0xff, 0xfc,
	0xc2, 0x06, 0x0c, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x6e, 0x0a, 0x0e, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x82, 0x10, 0x0a, 0x0e, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0c, 0x76, 0x61, 0x63, 0x63, 0x69,
	0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x52, 0x0b, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x4b, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x65, 0x61,
	0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x0d,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44, 0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x12, 0x66, 0x0a,
	0x1c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x55, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x63, 0x65, 0x70, 0x74, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x0e, 0x66, 0x6f,
	0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4d, 0x0a, 0x0f,
	0x66, 0x6f, 0x72, 0x65, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x0e, 0x66, 0x6f, 0x72,
	0x65, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x73, 0x0a, 0x0e, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72, 0x69, 0x6f, 0x6e,
	0x12, 0x3d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x33, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x73, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x6b, 0x0a, 0x0b, 0x64, 0x6f, 0x73, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x6f, 0x73, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x58, 0x52, 0x0a, 0x64, 0x6f, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x6e, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x64, 0x6f, 0x73, 0x65,
	0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x44, 0x6f,
	0x73, 0x65, 0x73, 0x58, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x44, 0x6f, 0x73, 0x65,
	0x73, 0x12, 0x87, 0x01, 0x0a, 0x17, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x42, 0x2e, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x0c, 0x49, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x16, 0x49, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x49,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x74, 0x0a, 0x1e, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x42, 0x0e, 0xf2, 0xff, 0xfc, 0xc2, 0x06, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x1c, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0xc8, 0x02, 0x0a, 0x0d, 0x44, 0x61, 0x74, 0x65, 0x43, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d,
	0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70,
	0x74, 0x42, 0x06, 0xf0, 0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x06, 0xf0,
	0xd0, 0x87, 0xeb, 0x04, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0xa3, 0x01, 0x0a,
	0x0b, 0x44, 0x6f, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x58, 0x12, 0x45, 0x0a, 0x0c,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x49, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x49, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x3a, 0x06, 0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x1a, 0xa4, 0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73, 0x44, 0x6f, 0x73,
	0x65, 0x73, 0x58, 0x12, 0x45, 0x0a, 0x0c, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x3a, 0x06, 0xa0, 0x83, 0x83, 0xe8, 0x06, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x3a, 0x34, 0x9a, 0x86, 0x93, 0xa0, 0x08,
	0x2e, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x2e, 0x65, 0x78, 0x69,
	0x73, 0x74, 0x73, 0x28, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x44,
	0x69, 0x73, 0x65, 0x61, 0x73, 0x65, 0x2e, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73, 0x28, 0x29, 0x3a,
	0x4e, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x03, 0xb2, 0xfe, 0xe4, 0x97, 0x06, 0x42, 0x68, 0x74, 0x74,
	0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x49, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4a,
	0x04, 0x08, 0x07, 0x10, 0x08, 0x42, 0x8b, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x50, 0x01, 0x5a, 0x68, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x98, 0xc6, 0xb0,
	0xb5, 0x07, 0x04, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDescData = file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDesc
)

func file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDescData
}

var file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_goTypes = []interface{}{
	(*ImmunizationRecommendation)(nil),                              // 0: google.fhir.r4.core.ImmunizationRecommendation
	(*ImmunizationRecommendation_Recommendation)(nil),               // 1: google.fhir.r4.core.ImmunizationRecommendation.Recommendation
	(*ImmunizationRecommendation_Recommendation_DateCriterion)(nil), // 2: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DateCriterion
	(*ImmunizationRecommendation_Recommendation_DoseNumberX)(nil),   // 3: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DoseNumberX
	(*ImmunizationRecommendation_Recommendation_SeriesDosesX)(nil),  // 4: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.SeriesDosesX
	(*datatypes_go_proto.Id)(nil),                                   // 5: google.fhir.r4.core.Id
	(*datatypes_go_proto.Meta)(nil),                                 // 6: google.fhir.r4.core.Meta
	(*datatypes_go_proto.Uri)(nil),                                  // 7: google.fhir.r4.core.Uri
	(*datatypes_go_proto.Code)(nil),                                 // 8: google.fhir.r4.core.Code
	(*datatypes_go_proto.Narrative)(nil),                            // 9: google.fhir.r4.core.Narrative
	(*any.Any)(nil),                                                 // 10: google.protobuf.Any
	(*datatypes_go_proto.Extension)(nil),                            // 11: google.fhir.r4.core.Extension
	(*datatypes_go_proto.Identifier)(nil),                           // 12: google.fhir.r4.core.Identifier
	(*datatypes_go_proto.Reference)(nil),                            // 13: google.fhir.r4.core.Reference
	(*datatypes_go_proto.DateTime)(nil),                             // 14: google.fhir.r4.core.DateTime
	(*datatypes_go_proto.String)(nil),                               // 15: google.fhir.r4.core.String
	(*datatypes_go_proto.CodeableConcept)(nil),                      // 16: google.fhir.r4.core.CodeableConcept
	(*datatypes_go_proto.PositiveInt)(nil),                          // 17: google.fhir.r4.core.PositiveInt
}
var file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_depIdxs = []int32{
	5,  // 0: google.fhir.r4.core.ImmunizationRecommendation.id:type_name -> google.fhir.r4.core.Id
	6,  // 1: google.fhir.r4.core.ImmunizationRecommendation.meta:type_name -> google.fhir.r4.core.Meta
	7,  // 2: google.fhir.r4.core.ImmunizationRecommendation.implicit_rules:type_name -> google.fhir.r4.core.Uri
	8,  // 3: google.fhir.r4.core.ImmunizationRecommendation.language:type_name -> google.fhir.r4.core.Code
	9,  // 4: google.fhir.r4.core.ImmunizationRecommendation.text:type_name -> google.fhir.r4.core.Narrative
	10, // 5: google.fhir.r4.core.ImmunizationRecommendation.contained:type_name -> google.protobuf.Any
	11, // 6: google.fhir.r4.core.ImmunizationRecommendation.extension:type_name -> google.fhir.r4.core.Extension
	11, // 7: google.fhir.r4.core.ImmunizationRecommendation.modifier_extension:type_name -> google.fhir.r4.core.Extension
	12, // 8: google.fhir.r4.core.ImmunizationRecommendation.identifier:type_name -> google.fhir.r4.core.Identifier
	13, // 9: google.fhir.r4.core.ImmunizationRecommendation.patient:type_name -> google.fhir.r4.core.Reference
	14, // 10: google.fhir.r4.core.ImmunizationRecommendation.date:type_name -> google.fhir.r4.core.DateTime
	13, // 11: google.fhir.r4.core.ImmunizationRecommendation.authority:type_name -> google.fhir.r4.core.Reference
	1,  // 12: google.fhir.r4.core.ImmunizationRecommendation.recommendation:type_name -> google.fhir.r4.core.ImmunizationRecommendation.Recommendation
	15, // 13: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.id:type_name -> google.fhir.r4.core.String
	11, // 14: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.extension:type_name -> google.fhir.r4.core.Extension
	11, // 15: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.modifier_extension:type_name -> google.fhir.r4.core.Extension
	16, // 16: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.vaccine_code:type_name -> google.fhir.r4.core.CodeableConcept
	16, // 17: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.target_disease:type_name -> google.fhir.r4.core.CodeableConcept
	16, // 18: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.contraindicated_vaccine_code:type_name -> google.fhir.r4.core.CodeableConcept
	16, // 19: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.forecast_status:type_name -> google.fhir.r4.core.CodeableConcept
	16, // 20: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.forecast_reason:type_name -> google.fhir.r4.core.CodeableConcept
	2,  // 21: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.date_criterion:type_name -> google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DateCriterion
	15, // 22: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.description:type_name -> google.fhir.r4.core.String
	15, // 23: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.series:type_name -> google.fhir.r4.core.String
	3,  // 24: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.dose_number:type_name -> google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DoseNumberX
	4,  // 25: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.series_doses:type_name -> google.fhir.r4.core.ImmunizationRecommendation.Recommendation.SeriesDosesX
	13, // 26: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.supporting_immunization:type_name -> google.fhir.r4.core.Reference
	13, // 27: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.supporting_patient_information:type_name -> google.fhir.r4.core.Reference
	15, // 28: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DateCriterion.id:type_name -> google.fhir.r4.core.String
	11, // 29: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DateCriterion.extension:type_name -> google.fhir.r4.core.Extension
	11, // 30: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DateCriterion.modifier_extension:type_name -> google.fhir.r4.core.Extension
	16, // 31: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DateCriterion.code:type_name -> google.fhir.r4.core.CodeableConcept
	14, // 32: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DateCriterion.value:type_name -> google.fhir.r4.core.DateTime
	17, // 33: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DoseNumberX.positive_int:type_name -> google.fhir.r4.core.PositiveInt
	15, // 34: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.DoseNumberX.string_value:type_name -> google.fhir.r4.core.String
	17, // 35: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.SeriesDosesX.positive_int:type_name -> google.fhir.r4.core.PositiveInt
	15, // 36: google.fhir.r4.core.ImmunizationRecommendation.Recommendation.SeriesDosesX.string_value:type_name -> google.fhir.r4.core.String
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_init() }
func file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_init() {
	if File_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImmunizationRecommendation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImmunizationRecommendation_Recommendation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImmunizationRecommendation_Recommendation_DateCriterion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImmunizationRecommendation_Recommendation_DoseNumberX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImmunizationRecommendation_Recommendation_SeriesDosesX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ImmunizationRecommendation_Recommendation_DoseNumberX_PositiveInt)(nil),
		(*ImmunizationRecommendation_Recommendation_DoseNumberX_StringValue)(nil),
	}
	file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ImmunizationRecommendation_Recommendation_SeriesDosesX_PositiveInt)(nil),
		(*ImmunizationRecommendation_Recommendation_SeriesDosesX_StringValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_depIdxs,
		MessageInfos:      file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto = out.File
	file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_rawDesc = nil
	file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_goTypes = nil
	file_proto_google_fhir_proto_r4_core_resources_immunization_recommendation_proto_depIdxs = nil
}
