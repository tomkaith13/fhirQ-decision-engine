//    Copyright 2019 Google Inc.
//
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//
//        https://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: proto/google/fhir/proto/r4/core/resources/substance_polymer.proto

package substance_polymer_go_proto

import (
	any "github.com/golang/protobuf/ptypes/any"
	_ "github.com/google/fhir/go/proto/google/fhir/proto/annotations_go_proto"
	datatypes_go_proto "github.com/google/fhir/go/proto/google/fhir/proto/r4/core/datatypes_go_proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Auto-generated from StructureDefinition for SubstancePolymer, last updated
// 2019-11-01T09:29:23.356+11:00. Todo. See
// http://hl7.org/fhir/StructureDefinition/SubstancePolymer
type SubstancePolymer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Logical id of this artifact
	Id *datatypes_go_proto.Id `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Metadata about the resource
	Meta *datatypes_go_proto.Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
	// A set of rules under which this content was created
	ImplicitRules *datatypes_go_proto.Uri `protobuf:"bytes,3,opt,name=implicit_rules,json=implicitRules,proto3" json:"implicit_rules,omitempty"`
	// Language of the resource content
	Language *datatypes_go_proto.Code `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Text summary of the resource, for human interpretation
	Text *datatypes_go_proto.Narrative `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// Contained, inline Resources
	Contained []*any.Any `protobuf:"bytes,6,rep,name=contained,proto3" json:"contained,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,8,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,9,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Todo
	ClassValue *datatypes_go_proto.CodeableConcept `protobuf:"bytes,10,opt,name=class_value,json=class,proto3" json:"class_value,omitempty"`
	// Todo
	Geometry *datatypes_go_proto.CodeableConcept `protobuf:"bytes,11,opt,name=geometry,proto3" json:"geometry,omitempty"`
	// Todo
	CopolymerConnectivity []*datatypes_go_proto.CodeableConcept `protobuf:"bytes,12,rep,name=copolymer_connectivity,json=copolymerConnectivity,proto3" json:"copolymer_connectivity,omitempty"`
	// Todo
	Modification []*datatypes_go_proto.String   `protobuf:"bytes,13,rep,name=modification,proto3" json:"modification,omitempty"`
	MonomerSet   []*SubstancePolymer_MonomerSet `protobuf:"bytes,14,rep,name=monomer_set,json=monomerSet,proto3" json:"monomer_set,omitempty"`
	Repeat       []*SubstancePolymer_Repeat     `protobuf:"bytes,15,rep,name=repeat,proto3" json:"repeat,omitempty"`
}

func (x *SubstancePolymer) Reset() {
	*x = SubstancePolymer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstancePolymer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstancePolymer) ProtoMessage() {}

func (x *SubstancePolymer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstancePolymer.ProtoReflect.Descriptor instead.
func (*SubstancePolymer) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDescGZIP(), []int{0}
}

func (x *SubstancePolymer) GetId() *datatypes_go_proto.Id {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SubstancePolymer) GetMeta() *datatypes_go_proto.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *SubstancePolymer) GetImplicitRules() *datatypes_go_proto.Uri {
	if x != nil {
		return x.ImplicitRules
	}
	return nil
}

func (x *SubstancePolymer) GetLanguage() *datatypes_go_proto.Code {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *SubstancePolymer) GetText() *datatypes_go_proto.Narrative {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *SubstancePolymer) GetContained() []*any.Any {
	if x != nil {
		return x.Contained
	}
	return nil
}

func (x *SubstancePolymer) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *SubstancePolymer) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *SubstancePolymer) GetClassValue() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.ClassValue
	}
	return nil
}

func (x *SubstancePolymer) GetGeometry() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Geometry
	}
	return nil
}

func (x *SubstancePolymer) GetCopolymerConnectivity() []*datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.CopolymerConnectivity
	}
	return nil
}

func (x *SubstancePolymer) GetModification() []*datatypes_go_proto.String {
	if x != nil {
		return x.Modification
	}
	return nil
}

func (x *SubstancePolymer) GetMonomerSet() []*SubstancePolymer_MonomerSet {
	if x != nil {
		return x.MonomerSet
	}
	return nil
}

func (x *SubstancePolymer) GetRepeat() []*SubstancePolymer_Repeat {
	if x != nil {
		return x.Repeat
	}
	return nil
}

// Todo
type SubstancePolymer_MonomerSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Todo
	RatioType        *datatypes_go_proto.CodeableConcept             `protobuf:"bytes,4,opt,name=ratio_type,json=ratioType,proto3" json:"ratio_type,omitempty"`
	StartingMaterial []*SubstancePolymer_MonomerSet_StartingMaterial `protobuf:"bytes,5,rep,name=starting_material,json=startingMaterial,proto3" json:"starting_material,omitempty"`
}

func (x *SubstancePolymer_MonomerSet) Reset() {
	*x = SubstancePolymer_MonomerSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstancePolymer_MonomerSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstancePolymer_MonomerSet) ProtoMessage() {}

func (x *SubstancePolymer_MonomerSet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstancePolymer_MonomerSet.ProtoReflect.Descriptor instead.
func (*SubstancePolymer_MonomerSet) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SubstancePolymer_MonomerSet) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SubstancePolymer_MonomerSet) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *SubstancePolymer_MonomerSet) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *SubstancePolymer_MonomerSet) GetRatioType() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.RatioType
	}
	return nil
}

func (x *SubstancePolymer_MonomerSet) GetStartingMaterial() []*SubstancePolymer_MonomerSet_StartingMaterial {
	if x != nil {
		return x.StartingMaterial
	}
	return nil
}

// Todo
type SubstancePolymer_Repeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Todo
	NumberOfUnits *datatypes_go_proto.Integer `protobuf:"bytes,4,opt,name=number_of_units,json=numberOfUnits,proto3" json:"number_of_units,omitempty"`
	// Todo
	AverageMolecularFormula *datatypes_go_proto.String `protobuf:"bytes,5,opt,name=average_molecular_formula,json=averageMolecularFormula,proto3" json:"average_molecular_formula,omitempty"`
	// Todo
	RepeatUnitAmountType *datatypes_go_proto.CodeableConcept   `protobuf:"bytes,6,opt,name=repeat_unit_amount_type,json=repeatUnitAmountType,proto3" json:"repeat_unit_amount_type,omitempty"`
	RepeatUnit           []*SubstancePolymer_Repeat_RepeatUnit `protobuf:"bytes,7,rep,name=repeat_unit,json=repeatUnit,proto3" json:"repeat_unit,omitempty"`
}

func (x *SubstancePolymer_Repeat) Reset() {
	*x = SubstancePolymer_Repeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstancePolymer_Repeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstancePolymer_Repeat) ProtoMessage() {}

func (x *SubstancePolymer_Repeat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstancePolymer_Repeat.ProtoReflect.Descriptor instead.
func (*SubstancePolymer_Repeat) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDescGZIP(), []int{0, 1}
}

func (x *SubstancePolymer_Repeat) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SubstancePolymer_Repeat) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *SubstancePolymer_Repeat) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *SubstancePolymer_Repeat) GetNumberOfUnits() *datatypes_go_proto.Integer {
	if x != nil {
		return x.NumberOfUnits
	}
	return nil
}

func (x *SubstancePolymer_Repeat) GetAverageMolecularFormula() *datatypes_go_proto.String {
	if x != nil {
		return x.AverageMolecularFormula
	}
	return nil
}

func (x *SubstancePolymer_Repeat) GetRepeatUnitAmountType() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.RepeatUnitAmountType
	}
	return nil
}

func (x *SubstancePolymer_Repeat) GetRepeatUnit() []*SubstancePolymer_Repeat_RepeatUnit {
	if x != nil {
		return x.RepeatUnit
	}
	return nil
}

// Todo
type SubstancePolymer_MonomerSet_StartingMaterial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Todo
	Material *datatypes_go_proto.CodeableConcept `protobuf:"bytes,4,opt,name=material,proto3" json:"material,omitempty"`
	// Todo
	Type *datatypes_go_proto.CodeableConcept `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	// Todo
	IsDefining *datatypes_go_proto.Boolean `protobuf:"bytes,6,opt,name=is_defining,json=isDefining,proto3" json:"is_defining,omitempty"`
	// Todo
	Amount *datatypes_go_proto.SubstanceAmount `protobuf:"bytes,7,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *SubstancePolymer_MonomerSet_StartingMaterial) Reset() {
	*x = SubstancePolymer_MonomerSet_StartingMaterial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstancePolymer_MonomerSet_StartingMaterial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstancePolymer_MonomerSet_StartingMaterial) ProtoMessage() {}

func (x *SubstancePolymer_MonomerSet_StartingMaterial) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstancePolymer_MonomerSet_StartingMaterial.ProtoReflect.Descriptor instead.
func (*SubstancePolymer_MonomerSet_StartingMaterial) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *SubstancePolymer_MonomerSet_StartingMaterial) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SubstancePolymer_MonomerSet_StartingMaterial) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *SubstancePolymer_MonomerSet_StartingMaterial) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *SubstancePolymer_MonomerSet_StartingMaterial) GetMaterial() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Material
	}
	return nil
}

func (x *SubstancePolymer_MonomerSet_StartingMaterial) GetType() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *SubstancePolymer_MonomerSet_StartingMaterial) GetIsDefining() *datatypes_go_proto.Boolean {
	if x != nil {
		return x.IsDefining
	}
	return nil
}

func (x *SubstancePolymer_MonomerSet_StartingMaterial) GetAmount() *datatypes_go_proto.SubstanceAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

// Todo
type SubstancePolymer_Repeat_RepeatUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Todo
	OrientationOfPolymerisation *datatypes_go_proto.CodeableConcept `protobuf:"bytes,4,opt,name=orientation_of_polymerisation,json=orientationOfPolymerisation,proto3" json:"orientation_of_polymerisation,omitempty"`
	// Todo
	RepeatUnit *datatypes_go_proto.String `protobuf:"bytes,5,opt,name=repeat_unit,json=repeatUnit,proto3" json:"repeat_unit,omitempty"`
	// Todo
	Amount                   *datatypes_go_proto.SubstanceAmount                            `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	DegreeOfPolymerisation   []*SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation   `protobuf:"bytes,7,rep,name=degree_of_polymerisation,json=degreeOfPolymerisation,proto3" json:"degree_of_polymerisation,omitempty"`
	StructuralRepresentation []*SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation `protobuf:"bytes,8,rep,name=structural_representation,json=structuralRepresentation,proto3" json:"structural_representation,omitempty"`
}

func (x *SubstancePolymer_Repeat_RepeatUnit) Reset() {
	*x = SubstancePolymer_Repeat_RepeatUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstancePolymer_Repeat_RepeatUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstancePolymer_Repeat_RepeatUnit) ProtoMessage() {}

func (x *SubstancePolymer_Repeat_RepeatUnit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstancePolymer_Repeat_RepeatUnit.ProtoReflect.Descriptor instead.
func (*SubstancePolymer_Repeat_RepeatUnit) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *SubstancePolymer_Repeat_RepeatUnit) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit) GetOrientationOfPolymerisation() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.OrientationOfPolymerisation
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit) GetRepeatUnit() *datatypes_go_proto.String {
	if x != nil {
		return x.RepeatUnit
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit) GetAmount() *datatypes_go_proto.SubstanceAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit) GetDegreeOfPolymerisation() []*SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation {
	if x != nil {
		return x.DegreeOfPolymerisation
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit) GetStructuralRepresentation() []*SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation {
	if x != nil {
		return x.StructuralRepresentation
	}
	return nil
}

// Todo
type SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Todo
	Degree *datatypes_go_proto.CodeableConcept `protobuf:"bytes,4,opt,name=degree,proto3" json:"degree,omitempty"`
	// Todo
	Amount *datatypes_go_proto.SubstanceAmount `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation) Reset() {
	*x = SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation) ProtoMessage() {}

func (x *SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation.ProtoReflect.Descriptor instead.
func (*SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

func (x *SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation) GetDegree() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Degree
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation) GetAmount() *datatypes_go_proto.SubstanceAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

// Todo
type SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id for inter-element referencing
	Id *datatypes_go_proto.String `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Additional content defined by implementations
	Extension []*datatypes_go_proto.Extension `protobuf:"bytes,2,rep,name=extension,proto3" json:"extension,omitempty"`
	// Extensions that cannot be ignored even if unrecognized
	ModifierExtension []*datatypes_go_proto.Extension `protobuf:"bytes,3,rep,name=modifier_extension,json=modifierExtension,proto3" json:"modifier_extension,omitempty"`
	// Todo
	Type *datatypes_go_proto.CodeableConcept `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Todo
	Representation *datatypes_go_proto.String `protobuf:"bytes,5,opt,name=representation,proto3" json:"representation,omitempty"`
	// Todo
	Attachment *datatypes_go_proto.Attachment `protobuf:"bytes,6,opt,name=attachment,proto3" json:"attachment,omitempty"`
}

func (x *SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation) Reset() {
	*x = SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation) ProtoMessage() {}

func (x *SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation.ProtoReflect.Descriptor instead.
func (*SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation) Descriptor() ([]byte, []int) {
	return file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDescGZIP(), []int{0, 1, 0, 1}
}

func (x *SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation) GetId() *datatypes_go_proto.String {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation) GetExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation) GetModifierExtension() []*datatypes_go_proto.Extension {
	if x != nil {
		return x.ModifierExtension
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation) GetType() *datatypes_go_proto.CodeableConcept {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation) GetRepresentation() *datatypes_go_proto.String {
	if x != nil {
		return x.Representation
	}
	return nil
}

func (x *SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation) GetAttachment() *datatypes_go_proto.Attachment {
	if x != nil {
		return x.Attachment
	}
	return nil
}

var File_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto protoreflect.FileDescriptor

var file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDesc = []byte{
	0x0a, 0x41, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66,
	0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x75, 0x62, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69,
	0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xf1, 0x1d, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c,
	0x79, 0x6d, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0e,
	0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x72, 0x69, 0x52, 0x0d,
	0x69, 0x6d, 0x70, 0x6c, 0x69, 0x63, 0x69, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x35, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x09,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x63, 0x65, 0x70, 0x74, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x67,
	0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x52, 0x08, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x5b, 0x0a,
	0x16, 0x63, 0x6f, 0x70, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63,
	0x65, 0x70, 0x74, 0x52, 0x15, 0x63, 0x6f, 0x70, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x0c, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x0b, 0x6d,
	0x6f, 0x6e, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x6e, 0x6f, 0x6d, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x52, 0x0a, 0x6d, 0x6f, 0x6e, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x74, 0x12, 0x44,
	0x0a, 0x06, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f,
	0x6c, 0x79, 0x6d, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x1a, 0xc3, 0x06, 0x0a, 0x0a, 0x4d, 0x6f, 0x6e, 0x6f, 0x6d, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d,
	0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a,
	0x0a, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x09, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x6e, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c,
	0x79, 0x6d, 0x65, 0x72, 0x2e, 0x4d, 0x6f, 0x6e, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x1a, 0xc5, 0x03, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x40, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a,
	0x0b, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e,
	0x52, 0x0a, 0x69, 0x73, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x3c, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0xca, 0x0f, 0x0a, 0x06, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x44, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x75, 0x6e, 0x69,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66,
	0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x57, 0x0a, 0x19, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x6d, 0x6f, 0x6c, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x75,
	0x6c, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x17, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x4d, 0x6f,
	0x6c, 0x65, 0x63, 0x75, 0x6c, 0x61, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x12, 0x5b,
	0x0a, 0x17, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34,
	0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x14, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x55, 0x6e, 0x69,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x2e, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x55, 0x6e, 0x69, 0x74, 0x1a, 0xaf, 0x0b, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x55, 0x6e, 0x69, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72,
	0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x68,
	0x0a, 0x1d, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66,
	0x5f, 0x70, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x1b, 0x6f, 0x72, 0x69,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x65,
	0x72, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x3c, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x88, 0x01, 0x0a, 0x18, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x5f,
	0x6f, 0x66, 0x5f, 0x70, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x74,
	0x2e, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x4f, 0x66, 0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72,
	0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x4f,
	0x66, 0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x8d, 0x01, 0x0a, 0x19, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69,
	0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x75, 0x72, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x18, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x61,
	0x6c, 0x52, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0xce, 0x02, 0x0a, 0x16, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65, 0x4f, 0x66, 0x50, 0x6f, 0x6c, 0x79,
	0x6d, 0x65, 0x72, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e,
	0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x06, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x06, 0x64, 0x65, 0x67, 0x72,
	0x65, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72,
	0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0x94, 0x03, 0x0a, 0x18, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x09, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x12, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68,
	0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x66,
	0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x64, 0x65,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x65, 0x70, 0x74, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x43, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x44, 0xc0, 0x9f, 0xe3, 0xb6, 0x05, 0x03, 0xb2,
	0xfe, 0xe4, 0x97, 0x06, 0x38, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x68, 0x6c, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x53, 0x75, 0x62,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x4a, 0x04, 0x08,
	0x07, 0x10, 0x08, 0x42, 0x81, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x66, 0x68, 0x69, 0x72, 0x2e, 0x72, 0x34, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x50,
	0x01, 0x5a, 0x5e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x66, 0x68, 0x69, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x34, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x70, 0x6f, 0x6c, 0x79, 0x6d, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x98, 0xc6, 0xb0, 0xb5, 0x07, 0x04, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDescOnce sync.Once
	file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDescData = file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDesc
)

func file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDescGZIP() []byte {
	file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDescOnce.Do(func() {
		file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDescData)
	})
	return file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDescData
}

var file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_goTypes = []interface{}{
	(*SubstancePolymer)(nil),                                            // 0: google.fhir.r4.core.SubstancePolymer
	(*SubstancePolymer_MonomerSet)(nil),                                 // 1: google.fhir.r4.core.SubstancePolymer.MonomerSet
	(*SubstancePolymer_Repeat)(nil),                                     // 2: google.fhir.r4.core.SubstancePolymer.Repeat
	(*SubstancePolymer_MonomerSet_StartingMaterial)(nil),                // 3: google.fhir.r4.core.SubstancePolymer.MonomerSet.StartingMaterial
	(*SubstancePolymer_Repeat_RepeatUnit)(nil),                          // 4: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit
	(*SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation)(nil),   // 5: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.DegreeOfPolymerisation
	(*SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation)(nil), // 6: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.StructuralRepresentation
	(*datatypes_go_proto.Id)(nil),                                       // 7: google.fhir.r4.core.Id
	(*datatypes_go_proto.Meta)(nil),                                     // 8: google.fhir.r4.core.Meta
	(*datatypes_go_proto.Uri)(nil),                                      // 9: google.fhir.r4.core.Uri
	(*datatypes_go_proto.Code)(nil),                                     // 10: google.fhir.r4.core.Code
	(*datatypes_go_proto.Narrative)(nil),                                // 11: google.fhir.r4.core.Narrative
	(*any.Any)(nil),                                                     // 12: google.protobuf.Any
	(*datatypes_go_proto.Extension)(nil),                                // 13: google.fhir.r4.core.Extension
	(*datatypes_go_proto.CodeableConcept)(nil),                          // 14: google.fhir.r4.core.CodeableConcept
	(*datatypes_go_proto.String)(nil),                                   // 15: google.fhir.r4.core.String
	(*datatypes_go_proto.Integer)(nil),                                  // 16: google.fhir.r4.core.Integer
	(*datatypes_go_proto.Boolean)(nil),                                  // 17: google.fhir.r4.core.Boolean
	(*datatypes_go_proto.SubstanceAmount)(nil),                          // 18: google.fhir.r4.core.SubstanceAmount
	(*datatypes_go_proto.Attachment)(nil),                               // 19: google.fhir.r4.core.Attachment
}
var file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_depIdxs = []int32{
	7,  // 0: google.fhir.r4.core.SubstancePolymer.id:type_name -> google.fhir.r4.core.Id
	8,  // 1: google.fhir.r4.core.SubstancePolymer.meta:type_name -> google.fhir.r4.core.Meta
	9,  // 2: google.fhir.r4.core.SubstancePolymer.implicit_rules:type_name -> google.fhir.r4.core.Uri
	10, // 3: google.fhir.r4.core.SubstancePolymer.language:type_name -> google.fhir.r4.core.Code
	11, // 4: google.fhir.r4.core.SubstancePolymer.text:type_name -> google.fhir.r4.core.Narrative
	12, // 5: google.fhir.r4.core.SubstancePolymer.contained:type_name -> google.protobuf.Any
	13, // 6: google.fhir.r4.core.SubstancePolymer.extension:type_name -> google.fhir.r4.core.Extension
	13, // 7: google.fhir.r4.core.SubstancePolymer.modifier_extension:type_name -> google.fhir.r4.core.Extension
	14, // 8: google.fhir.r4.core.SubstancePolymer.class_value:type_name -> google.fhir.r4.core.CodeableConcept
	14, // 9: google.fhir.r4.core.SubstancePolymer.geometry:type_name -> google.fhir.r4.core.CodeableConcept
	14, // 10: google.fhir.r4.core.SubstancePolymer.copolymer_connectivity:type_name -> google.fhir.r4.core.CodeableConcept
	15, // 11: google.fhir.r4.core.SubstancePolymer.modification:type_name -> google.fhir.r4.core.String
	1,  // 12: google.fhir.r4.core.SubstancePolymer.monomer_set:type_name -> google.fhir.r4.core.SubstancePolymer.MonomerSet
	2,  // 13: google.fhir.r4.core.SubstancePolymer.repeat:type_name -> google.fhir.r4.core.SubstancePolymer.Repeat
	15, // 14: google.fhir.r4.core.SubstancePolymer.MonomerSet.id:type_name -> google.fhir.r4.core.String
	13, // 15: google.fhir.r4.core.SubstancePolymer.MonomerSet.extension:type_name -> google.fhir.r4.core.Extension
	13, // 16: google.fhir.r4.core.SubstancePolymer.MonomerSet.modifier_extension:type_name -> google.fhir.r4.core.Extension
	14, // 17: google.fhir.r4.core.SubstancePolymer.MonomerSet.ratio_type:type_name -> google.fhir.r4.core.CodeableConcept
	3,  // 18: google.fhir.r4.core.SubstancePolymer.MonomerSet.starting_material:type_name -> google.fhir.r4.core.SubstancePolymer.MonomerSet.StartingMaterial
	15, // 19: google.fhir.r4.core.SubstancePolymer.Repeat.id:type_name -> google.fhir.r4.core.String
	13, // 20: google.fhir.r4.core.SubstancePolymer.Repeat.extension:type_name -> google.fhir.r4.core.Extension
	13, // 21: google.fhir.r4.core.SubstancePolymer.Repeat.modifier_extension:type_name -> google.fhir.r4.core.Extension
	16, // 22: google.fhir.r4.core.SubstancePolymer.Repeat.number_of_units:type_name -> google.fhir.r4.core.Integer
	15, // 23: google.fhir.r4.core.SubstancePolymer.Repeat.average_molecular_formula:type_name -> google.fhir.r4.core.String
	14, // 24: google.fhir.r4.core.SubstancePolymer.Repeat.repeat_unit_amount_type:type_name -> google.fhir.r4.core.CodeableConcept
	4,  // 25: google.fhir.r4.core.SubstancePolymer.Repeat.repeat_unit:type_name -> google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit
	15, // 26: google.fhir.r4.core.SubstancePolymer.MonomerSet.StartingMaterial.id:type_name -> google.fhir.r4.core.String
	13, // 27: google.fhir.r4.core.SubstancePolymer.MonomerSet.StartingMaterial.extension:type_name -> google.fhir.r4.core.Extension
	13, // 28: google.fhir.r4.core.SubstancePolymer.MonomerSet.StartingMaterial.modifier_extension:type_name -> google.fhir.r4.core.Extension
	14, // 29: google.fhir.r4.core.SubstancePolymer.MonomerSet.StartingMaterial.material:type_name -> google.fhir.r4.core.CodeableConcept
	14, // 30: google.fhir.r4.core.SubstancePolymer.MonomerSet.StartingMaterial.type:type_name -> google.fhir.r4.core.CodeableConcept
	17, // 31: google.fhir.r4.core.SubstancePolymer.MonomerSet.StartingMaterial.is_defining:type_name -> google.fhir.r4.core.Boolean
	18, // 32: google.fhir.r4.core.SubstancePolymer.MonomerSet.StartingMaterial.amount:type_name -> google.fhir.r4.core.SubstanceAmount
	15, // 33: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.id:type_name -> google.fhir.r4.core.String
	13, // 34: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.extension:type_name -> google.fhir.r4.core.Extension
	13, // 35: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.modifier_extension:type_name -> google.fhir.r4.core.Extension
	14, // 36: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.orientation_of_polymerisation:type_name -> google.fhir.r4.core.CodeableConcept
	15, // 37: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.repeat_unit:type_name -> google.fhir.r4.core.String
	18, // 38: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.amount:type_name -> google.fhir.r4.core.SubstanceAmount
	5,  // 39: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.degree_of_polymerisation:type_name -> google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.DegreeOfPolymerisation
	6,  // 40: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.structural_representation:type_name -> google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.StructuralRepresentation
	15, // 41: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.DegreeOfPolymerisation.id:type_name -> google.fhir.r4.core.String
	13, // 42: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.DegreeOfPolymerisation.extension:type_name -> google.fhir.r4.core.Extension
	13, // 43: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.DegreeOfPolymerisation.modifier_extension:type_name -> google.fhir.r4.core.Extension
	14, // 44: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.DegreeOfPolymerisation.degree:type_name -> google.fhir.r4.core.CodeableConcept
	18, // 45: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.DegreeOfPolymerisation.amount:type_name -> google.fhir.r4.core.SubstanceAmount
	15, // 46: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.StructuralRepresentation.id:type_name -> google.fhir.r4.core.String
	13, // 47: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.StructuralRepresentation.extension:type_name -> google.fhir.r4.core.Extension
	13, // 48: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.StructuralRepresentation.modifier_extension:type_name -> google.fhir.r4.core.Extension
	14, // 49: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.StructuralRepresentation.type:type_name -> google.fhir.r4.core.CodeableConcept
	15, // 50: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.StructuralRepresentation.representation:type_name -> google.fhir.r4.core.String
	19, // 51: google.fhir.r4.core.SubstancePolymer.Repeat.RepeatUnit.StructuralRepresentation.attachment:type_name -> google.fhir.r4.core.Attachment
	52, // [52:52] is the sub-list for method output_type
	52, // [52:52] is the sub-list for method input_type
	52, // [52:52] is the sub-list for extension type_name
	52, // [52:52] is the sub-list for extension extendee
	0,  // [0:52] is the sub-list for field type_name
}

func init() { file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_init() }
func file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_init() {
	if File_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstancePolymer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstancePolymer_MonomerSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstancePolymer_Repeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstancePolymer_MonomerSet_StartingMaterial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstancePolymer_Repeat_RepeatUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstancePolymer_Repeat_RepeatUnit_DegreeOfPolymerisation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubstancePolymer_Repeat_RepeatUnit_StructuralRepresentation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_goTypes,
		DependencyIndexes: file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_depIdxs,
		MessageInfos:      file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_msgTypes,
	}.Build()
	File_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto = out.File
	file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_rawDesc = nil
	file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_goTypes = nil
	file_proto_google_fhir_proto_r4_core_resources_substance_polymer_proto_depIdxs = nil
}
